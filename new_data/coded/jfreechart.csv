Document Title,Abstract,Year,PDF Link,label,code,time
,// can we pan this plot?,,,unknown,yes,1572622451
,// make sure that modifying the returned array doesn't change the // function,,,unknown,yes,1572622423
,// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3,,,unknown,yes,1572622411
,// this doesn't work,,,unknown,yes,1572622401
,"// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...",,,unknown,yes,1572622381
,// need to work out the space used by the tick labels... // so we can update the cursor...,,,unknown,yes,1572622347
,// may be negative,,,unknown,yes,1572622322
,// TODO getSeriesShape(n).getBounds().width / 2;,,,unknown,yes,1572622298
,"// FIXME //SerialUtilities.writeImage(this.image, stream);",,,unknown,yes,1572622296
,// FIXME //this.image = SerialUtilities.readImage(stream);,,,unknown,yes,1572622294
,// TODO getSeriesShape(n).getBounds().height / 2;,,,unknown,yes,1572622292
,// now make a change to the renderer and see if it triggers a plot // change event...,,,unknown,yes,1572622290
,// now make a change to the renderer and see if it triggers a plot // change event...,,,unknown,yes,1572622288
,// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?,,,unknown,yes,1572622282
,// FIXME: calculate xxLeft and xxRight,,,unknown,yes,1572622280
,// FIXME: calculate xx0,,,unknown,yes,1572622278
,// FIXME:,,,unknown,yes,1572622276
,// FIXME,,,unknown,yes,1572622274
,// not implemented,,,unknown,yes,1572622266
,"// here we could probably be a little faster by searching for both // indices simultaneously, but I'll look at that later if it seems // like it matters...",,,unknown,yes,1572622263
,"// FIXME: add setSeriesItemURLGenerator(int, CategoryURLGenerator, boolean)?",,,unknown,yes,1572622257
,"// not strictly necessary, since the // renderer set for the // parent plot is not used",,,unknown,yes,1572622255
,"// not strictly necessary, since the // renderer set for the // parent plot is not used",,,unknown,yes,1572622254
,// TODO: add serialization support for images,,,unknown,yes,1572622240
,// this may be negative,,,unknown,yes,1572622239
,// FIXME: draw outliers,,,unknown,yes,1572622236
,"// FIXME: add setBaseItemURLGenerator(CategoryURLGenerator, boolean) ?",,,unknown,yes,1572622235
,// FIXME: what if value is null on next line?,,,unknown,yes,1572622234
,"// unused but must return something, so while we are at it...",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO:  this needs to move into the renderer state,,,unknown,yes,0
,//TODO: implement this method properly,,,unknown,yes,0
,// hack to ensure the newly created swt fonts will be rendered with the // same height as the awt one,,,unknown,yes,0
,// unused in parent,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// a redraw should NOT trigger another change event,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// FIXME: perhaps we should clone the data list,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,"// if we are rendering the values as percentages, we need to calculate // the total for the current item.  Unfortunately here we end up // repeating the calculation more times than is strictly necessary - // hopefully I'll come back to this and find a way to add the // total(s) to the renderer state.  The other problem is we implicitly // assume the dataset has no negative values...perhaps that can be // fixed too.",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// the method we want isn't in the CategoryItemRenderer // interface...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,"// TODO: by coding the event with some information about what changed // in the dataset, we could make the recalculation of the interval // more efficient in some cases (for instance, if the change is // just an update to a y-value, then the x-interval doesn't need // updating)...",,,unknown,yes,0
,// FIXME: this attribute is not used - deprecate?,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,"// FIXME: the renderer interface doesn't have the drawDomainLine() // method, so we have to rely on the renderer being a subclass of // AbstractXYItemRenderer (which is lame)",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// a redraw should NOT trigger another change event,,,unknown,yes,0
,// CREATE ENTITIES // FIXME:  these methods should be defined,,,unknown,yes,0
,// a redraw should NOT trigger another change event,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,//FIXME we should really assert a value here,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// Note: It would be nice to pre-calculate this per series,,,unknown,yes,0
,"// we assume that all other Paint instances implement equals() and // hashCode()...of course that might not be true, but what can we // do about it?",,,unknown,yes,0
,// FIXME: use other fields too,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// report this?,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,//TODO: implement this method properly,,,unknown,yes,0
,// FIXME: Clone the attributed string if it is not null,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,//FIXME we should really assert a value here,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// FIXME: this attribute is never used - deprecate?,,,unknown,yes,0
,// TODO: complete this,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// FIXME: No getValueFormat() method?,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO: need to fetch this from localised resources,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// FIXME:  it probably makes sense to allocate an array of 256 Colors // and lazily populate this array...,,,unknown,yes,0
,"// now we handle some special cases - yes, UGLY code alert!",,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// unused in parent,,,unknown,yes,0
,// TODO: check threshold,,,unknown,yes,0
,//TODO replace getSize by getBounds ?,,,unknown,yes,0
,// TODO Revert to SVN revision 2469 in JFreeChart 1.0.16 //      (MultipleGradientPaint's / JDK issues) // TODO THEN: change visibility of ALL darker(...) Methods EXCEPT //      darker(Paint) to private!,,,unknown,yes,0
,// CREATE ENTITIES // FIXME:  these methods should be defined,,,unknown,yes,0
,// TODO: URLEncode?,,,unknown,yes,0
,"// now handle specific plot types (and yes, I know this is some // really ugly code that has to be manually updated any time a new // plot type is added - I should have written something much cooler, // but I didn't and neither did anyone else).",,,unknown,yes,0
,"// here's a quirk - the API has been defined in terms of a plain // TimePeriod, which cannot make use of the timezone and locale // specified in the constructor...so we only do the time zone // pegging if the period is an instanceof RegularTimePeriod",,,unknown,yes,0
,//FIXME we should really assert a value here,,,unknown,yes,0
,"// all attributes are immutable, so we can just return the super.clone() // FIXME: in fact, the generator itself is immutable, so cloning is // not necessary",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// FIXME: this should generate a series change event,,,unknown,yes,0
,// TODO: implement this properly,,,unknown,yes,0
,// TODO: this must be wrong...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO:  add constructors for combinations of number and date formatters.,,,unknown,yes,0
,"// calculate the adjusted data area taking into account the 3D effect... // this assumes that there is a 3D renderer, all this 3D effect is a // bit of an ugly hack...",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// FIXME: the XYItemRenderer interface doesn't specify the // getAnnotations() method but it should,,,unknown,yes,0
,"// FIXME: implement this, low priority",,,unknown,yes,0
,// TODO:  this attribute should be transferred to the renderer state.,,,unknown,yes,0
,// TODO find a better localization key,,,unknown,yes,0
,// do we need to update the crosshair values?,,,unknown,yes,0
,//TODO: shift block over to right,,,unknown,yes,0
,// FIXME: need a locale as well as a timezone,,,unknown,yes,0
,//TODO: shift block right by half,,,unknown,yes,0
,// hack to ensure the newly created awt fonts will be rendered with the // same height as the swt one,,,unknown,yes,0
,// TODO: we didn't check the width yet,,,unknown,yes,0
,// TODO: implement properly,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,// first determine the size of the chart rendering area... // TODO workout insets for SWT,,,unknown,yes,0
,// TODO: for now we are ignoring the height constraint,,,unknown,yes,0
,"// TODO: it might be a good idea to keep a reference to the color // specified in setPaint() or setColor(), rather than creating a // new object every time getPaint() is called.",,,unknown,yes,0
,//TODO: shift block down to bottom,,,unknown,yes,0
,// TODO:  the subplot areas needs to be moved out of the plot into the plot //        state,,,unknown,yes,0
,// TODO: to be implemented,,,unknown,yes,0
,// TODO: we didn't check the height yet,,,unknown,yes,0
,// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3,,,unknown,yes,0
,// todo: not serialized yet,,,unknown,yes,0
,"// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that",,,unknown,yes,0
,// TODO: we didn't check the height yet,,,unknown,yes,0
,//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3,,,unknown,yes,0
,// TODO: Check this result...,,,unknown,yes,0
,// TODO: Check this result...,,,unknown,yes,0
,// TODO: move to plot state,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// FIXME:  this code means that it is not possible to use more than // one domain axis for the combined plots...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO: rotate the image when drawn with horizontal orientation?,,,unknown,yes,0
,"// TODO: In JFreeChart 1.2.0, put this method in the // CategoryItemRenderer interface",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO:  this attribute should be transferred to the renderer state.,,,unknown,yes,0
,// unused in parent,,,unknown,yes,0
,// a redraw should NOT trigger another change event,,,unknown,yes,0
,"// TODO: could change this to itemFillPaint().  For backwards // compatibility, it might require a useFillPaint flag.",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// end of workaround,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,//FIXME we should really assert a value here,,,unknown,yes,0
,// TODO:  move the above to the plot state,,,unknown,yes,0
,// TODO: for now we are ignoring the height constraint,,,unknown,yes,0
,// TODO: fix output when this flag is set to true,,,unknown,yes,0
,// do we need to update the crosshair values?,,,unknown,yes,0
,// TODO: to be implemented,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// TODO: to be implemented,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO: to be implemented,,,unknown,yes,0
,// TODO : complete this,,,unknown,yes,0
,// do we need to update the crosshair values?,,,unknown,yes,0
,// do we need to update the crosshair values?,,,unknown,yes,0
,//FIXME we should really assert a value,,,unknown,yes,0
,"// TO DO:  these annotations only work with XYPlot, see if it is possible to // make ContourPlot a subclass of XYPlot (DG);",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,"// we'll have to use the method in the interface, but // this doesn't have the paint and stroke settings...",,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,"// TODO: For JFreeChart 1.2.0, this method should go in the //       ShapeUtilities class",,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// TODO: implement this properly,,,unknown,yes,0
,// FIXME:  need a locale as well as a timezone,,,unknown,yes,0
,// FIXME: this attribute is never used - deprecate?,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// not used by plot,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// needs to be improved !!!,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO:  this needs to move into the renderer state,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// TODO: implement the entity for the annotation,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// FIXME better ask the renderer instead of DatasetUtilities,,,unknown,yes,0
,// TODO: is this a good idea?,,,unknown,yes,0
,//TODO: shift block down by half,,,unknown,yes,0
,// report this?,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,/// a kludge to make everything work when no rows returned,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// TODO: is this a good idea?,,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,// this may be obsolete (not used anywhere),,,unknown,yes,0
,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,"// TODO: I think we need to make sure the keys are actually cloned, // whereas the stroke instances are always immutable so they're OK",,,unknown,yes,0
,// the plot field is NOT tested,,,unknown,yes,0
,"/** * An annotation that allows an image to be placed at some location on * an {@link XYPlot}. * * TODO:  implement serialization properly (image is not serializable). */",,,unknown,yes,0
,// FIXME:  implement this...,,,unknown,yes,0
,// not implemented,,,unknown,yes,0
,// TODO: draw the interval marker with a 3D effect,,,unknown,yes,0
,// TODO see if we need to apply some line color and style to the // axis traces,,,unknown,yes,0
,// could make this configurable,,,unknown,yes,0
,// TODO: draw the interval marker with a 3D effect,,,unknown,yes,0
,// FIXME: show a dialog with the error,,,unknown,yes,0
,// FIXME: show a dialog with the error,,,unknown,yes,0
,"/**     * Returns a string representing the week (e.g. ""Week 9, 2002"").     *     * TODO: look at internationalisation.     *     * @return A string representing the week.     */",,,unknown,yes,0
,"// TODO: I think we need to make sure the keys are actually cloned, // whereas the paint instances are always immutable so they're OK",,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// FIXME: this attribute is not used - deprecate?,,,unknown,yes,0
,// TODO: use a generator here,,,unknown,yes,0
,// FIXME: clone generator,,,unknown,yes,0
,// I know it's bad to create object. better idea?,,,unknown,yes,0
,// I know it's bad to create object. better idea?,,,unknown,yes,0
,// FIXME: Check that there isn't already a series with the same key,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,"// TODO: it might be a good idea to keep a reference to the color // specified in setPaint() or setColor(), rather than creating a // new object every time getPaint() is called.",,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking,,,unknown,yes,0
,// defer argument checking...,,,unknown,yes,0
,// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3,,,unknown,yes,0
,// make array of exceptions,,,unknown,no,1572622477
,//deal with plot appearance,,,unknown,no,1572622475
,// this generates the change event too,,,unknown,no,1572622473
,// this generates the change event too,,,unknown,no,1572622472
,"// If the line is not wrapping, then parent is OK",,,unknown,no,1572622470
,// make a time zone with no DST for our Calendar calculations,,,unknown,no,1572622468
,// get a reference to the plot for further customisation...,,,unknown,no,1572622465
,// grab the plot's annotations,,,unknown,no,1572622463
,// handle rendering separately for the two plot orientations...,,,unknown,no,1572622462
,/*CategoryPlot plot =*/,,,unknown,no,1572622459
,/*CategoryPlot plot =*/,,,unknown,no,1572622446
,// now process the plot if there is one,,,unknown,no,1572622444
,/*CategoryPlot plot =*/,,,unknown,no,1572622442
,// change the generator and make sure it only affects p1,,,unknown,no,1572622441
,// change the generator and make sure it only affects p1,,,unknown,no,1572622440
,// if negative then set flag and make positive,,,unknown,no,1572622437
,// if negative then set flag and make positive,,,unknown,no,1572622436
,// work out the average for the earlier values...,,,unknown,no,1572622434
,// work out the average for the earlier values...,,,unknown,no,1572622433
,// call parent method // setup flag based on bounds values,,,unknown,no,1572622430
,// line,,,unknown,no,1572622417
,// now do the work...,,,unknown,no,1572622408
,// send a dataset change event to self to trigger plot change event,,,unknown,no,1572622398
,// send a dataset change event to self to trigger plot change event,,,unknown,no,1572622398
,// send a dataset change event to self to trigger plot change event,,,unknown,no,1572622397
,// the following code handles the line for the y-values...it's // all done by code in the super class,,,unknown,no,1572622394
,// verify that the plot is listening to the cloned renderer,,,unknown,no,1572622390
,/* Number end = */,,,unknown,no,1572622373
,// calculate sub-plot area,,,unknown,no,1572622371
,// calculate sub-plot area,,,unknown,no,1572622365
,// calculate sub-plot area,,,unknown,no,1572622364
,// calculate sub-plot area,,,unknown,no,1572622363
,// calculate the result as if no exceptions,,,unknown,no,1572622362
,// calculate constant values,,,unknown,no,1572622359
,// cached values used for interface DomainInfo:,,,unknown,no,1572622357
,//negative values not allowed,,,unknown,no,1572622354
,//negative values are allowed,,,unknown,no,1572622352
,// make the change (if it's not a duplicate time period)...,,,unknown,no,1572622336
,// plot,,,unknown,no,1572622326
,// '+' because v is negative,,,unknown,no,1572622325
,// parent plot...,,,unknown,no,1572622318
,// parent plot...,,,unknown,no,1572622317
,// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...,,,unknown,no,1572622314
,//get the coordinates of the original GradientPaint,,,unknown,no,0
,// frame,,,unknown,no,0
,// outlinePaint,,,unknown,no,0
,// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick,,,unknown,no,0
,// negative paint,,,unknown,no,0
,// paint,,,unknown,no,0
,// dial cap,,,unknown,no,0
,"// not a HighLowDataset, so just draw a line connecting this point // with the previous point...",,,unknown,no,0
,// valueAnchor,,,unknown,no,0
,// set up popup menu...,,,unknown,no,0
,// outlineStroke,,,unknown,no,0
,// view,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// test a default instance,,,unknown,no,0
,//cursor = midX - COLUMN_RADIUS - AXIS_GAP;,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// majorTickLength,,,unknown,no,0
,// radius,,,unknown,no,0
,// check that the generator has been cloned,,,unknown,no,0
,// outlineStrokeList,,,unknown,no,0
,// check a series with four items,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// TBLRC // 00000 - no items,,,unknown,no,0
,// check that the generator has been cloned,,,unknown,no,0
,// layer,,,unknown,no,0
,// angle,,,unknown,no,0
,//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;,,,unknown,no,0
,// fill paint,,,unknown,no,0
,// apply the margins - these should apply to the exponent range,,,unknown,no,0
,// try a default instance,,,unknown,no,0
,// standard ResourceBundle behaviour,,,unknown,no,0
,// check a series with one item,,,unknown,no,0
,// check that a null dataset returns null bounds,,,unknown,no,0
,// font,,,unknown,no,0
,// populate deprecated fields,,,unknown,no,0
,// check retrieve value by index,,,unknown,no,0
,// background,,,unknown,no,0
,// suppresses compiler warning,,,unknown,no,0
,//// SECTION OUTLINE PAINT ////////////////////////////////////////////////,,,unknown,no,0
,// add a value to the second series,,,unknown,no,0
,// actually removes a1,,,unknown,no,0
,// check that the generator has been cloned,,,unknown,no,0
,// radius,,,unknown,no,0
,// check for unknown column,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// test a default instance,,,unknown,no,0
,"// if there are only null items, we get a NaNRange",,,unknown,no,0
,// radius,,,unknown,no,0
,// copy the middle three items...,,,unknown,no,0
,// visible,,,unknown,no,0
,// deregister the collection as a change listener to each series in the // collection,,,unknown,no,0
,// shape,,,unknown,no,0
,"// now remove a3, but since a3.equals(a1), this will in fact remove // a1...",,,unknown,no,0
,"// if the axis is not visible, no additional space is required...",,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,"// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point",,,unknown,no,0
,// outline stroke index,,,unknown,no,0
,// check negative index throws exception,,,unknown,no,0
,// outlineStroke,,,unknown,no,0
,// now try to reject equality,,,unknown,no,0
,// stroke,,,unknown,no,0
,// draw median,,,unknown,no,0
,// shape index,,,unknown,no,0
,// check key order,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0),,,unknown,no,0
,// try a few checks to ensure that the clone is independent of the // original,,,unknown,no,0
,// radius,,,unknown,no,0
,// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...,,,unknown,no,0
,// locale should not matter here,,,unknown,no,0
,// check that empty dataset is handled OK,,,unknown,no,0
,// outline stroke,,,unknown,no,0
,// angle,,,unknown,no,0
,// foreground paint,,,unknown,no,0
,// tick mark stroke...,,,unknown,no,0
,// majorTickStroke,,,unknown,no,0
,// confirm overwriting an existing value,,,unknown,no,0
,// frameAnchor,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,"// 'negativeItemLabelAnchor' : immutable, no need to clone reference",,,unknown,no,0
,// test a default instance,,,unknown,no,0
,// dataset index,,,unknown,no,0
,// clear a mapping,,,unknown,no,0
,// test a custom instance,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// templateValue,,,unknown,no,0
,// correct outcome,,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// inner radius,,,unknown,no,0
,"// The split may occur in either x splitted segments, if any, but // not in both",,,unknown,no,0
,// foregroundPaint,,,unknown,no,0
,"// now when the default group is mapped to, it shouldn't increase the // group count...",,,unknown,no,0
,// stroke,,,unknown,no,0
,"// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width",,,unknown,no,0
,// outer radius,,,unknown,no,0
,// a column of all null values is still counted...,,,unknown,no,0
,// test a default instance,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// test a default instance,,,unknown,no,0
,//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.,,,unknown,no,0
,// dateFormatOverride,,,unknown,no,0
,// set up the category names...,,,unknown,no,0
,// test a default instance,,,unknown,no,0
,// continue and separate the labels only if necessary,,,unknown,no,0
,// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.,,,unknown,no,0
,// label,,,unknown,no,0
,// TBLRC // 01000 - bottom item only,,,unknown,no,0
,// legendTextFont,,,unknown,no,0
,"// it is unlikely that 'state' will be null, but check anyway...",,,unknown,no,0
,"// add series to collection 1, should be not equal",,,unknown,no,0
,// check a series with no items,,,unknown,no,0
,// first test for equality (contains or contained),,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// now remove series 2 from collection 2,,,unknown,no,0
,// check a series with no items,,,unknown,no,0
,// NEGATIVE ITEM LABEL ANCHOR,,,unknown,no,0
,// failed,,,unknown,no,0
,// now check autoPopulate==true,,,unknown,no,0
,// ITEM_LABEL_FONT,,,unknown,no,0
,// baseLegendTextFont,,,unknown,no,0
,// OUTLINE PAINT,,,unknown,no,0
,// legendShape,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// ITEM_LABELS_VISIBLE,,,unknown,no,0
,// baseLegendShape,,,unknown,no,0
,// now check autoPopulate==true,,,unknown,no,0
,// insets,,,unknown,no,0
,// baseOutlinePaint,,,unknown,no,0
,// baseOutlinePaint,,,unknown,no,0
,// SHAPE,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// itemLabelAnchorOffset,,,unknown,no,0
,"// if no initial zoom point was set, ignore dragging...",,,unknown,no,0
,// baseItemLabelPaint,,,unknown,no,0
,/* y-axis label */,,,unknown,no,0
,// createEntities;,,,unknown,no,0
,// seem to be the same...,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// test a customised instance,,,unknown,no,0
,// check a series with two items,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// should be equal...,,,unknown,no,0
,// and independent...,,,unknown,no,0
,// positiveBarPaint;,,,unknown,no,0
,// drawYError,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,// try with gradient paint,,,unknown,no,0
,// and independent...,,,unknown,no,0
,"// we're doing this for testing only, and make sure that we // only add data in descending order by x-value",,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// check a series with two items,,,unknown,no,0
,// check a series with no items,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// check a series with repeating items,,,unknown,no,0
,// check a series with four items,,,unknown,no,0
,// backgroundPaint,,,unknown,no,0
,//private Paint negativeBarPaint;,,,unknown,no,0
,// check a series with three items,,,unknown,no,0
,// key not found,,,unknown,no,0
,// check a series with four items,,,unknown,no,0
,// check a series with three items,,,unknown,no,0
,// check a series with four items,,,unknown,no,0
,// check a series with four items,,,unknown,no,0
,// check that the generator has been cloned,,,unknown,no,0
,// check dataset with two time periods,,,unknown,no,0
,// check a series with three items,,,unknown,no,0
,// check a series with three items,,,unknown,no,0
,// check a series with two items,,,unknown,no,0
,// check a series with three items,,,unknown,no,0
,// check a series with repeating items,,,unknown,no,0
,// sanity check for data area...,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,"// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation",,,unknown,no,0
,// baseSeriesVisible,,,unknown,no,0
,// baseFillPaint,,,unknown,no,0
,// work out the anchor point,,,unknown,no,0
,// check that setting the max date to something on or before the // current min date works...,,,unknown,no,0
,// get the axis label size and update the space object...,,,unknown,no,0
,// outlinePaintList,,,unknown,no,0
,// adjust for padding...,,,unknown,no,0
,// seriesVisibleList,,,unknown,no,0
,// -------------------- // --- Constructors --- // --------------------,,,unknown,no,0
,// test default instance,,,unknown,no,0
,// can't find any differences,,,unknown,no,0
,// cycle through all the segments contained in the BaseTimeline // exception segment,,,unknown,no,0
,//parameter value is > 10 // The Math.log() function is based on e not 10.,,,unknown,no,0
,// have to use a concrete subclass...,,,unknown,no,0
,// second pass adds shapes where the items are ..,,,unknown,no,0
,// remove a value,,,unknown,no,0
,// itemLabelPaintList,,,unknown,no,0
,// seriesVisible,,,unknown,no,0
,// Unregister the collection as a change listener to each series in // the collection.,,,unknown,no,0
,// try a customised instance,,,unknown,no,0
,// outline paint index,,,unknown,no,0
,// clear the flag,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// test a custom instance,,,unknown,no,0
,"// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...",,,unknown,no,0
,// majorTickPaint,,,unknown,no,0
,"// Add the last point (x,0)",,,unknown,no,0
,// majorTickIncrement,,,unknown,no,0
,// try a null dataset - should return a null range,,,unknown,no,0
,// test a customised instance,,,unknown,no,0
,"// 'baseOutlinePaint' : immutable, no need to clone reference",,,unknown,no,0
,"// just the lines, no filling",,,unknown,no,0
,// baseShape,,,unknown,no,0
,// check a series with two items,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// negativeItemLabelPosition;,,,unknown,no,0
,// draw the lower shadow...,,,unknown,no,0
,// itemLabelFont,,,unknown,no,0
,"// work out the value, label and position",,,unknown,no,0
,// baseItemLabelFont,,,unknown,no,0
,"// Add the last point (x,0)",,,unknown,no,0
,"// this is not one of our included segment, skip it",,,unknown,no,0
,// null will be returned,,,unknown,no,0
,// ...but this does!,,,unknown,no,0
,"// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label",,,unknown,no,0
,// itemLabelPaint,,,unknown,no,0
,"// no renderer, no gridlines...",,,unknown,no,0
,// baseItemLabelsVisible,,,unknown,no,0
,// create a new space object if one wasn't supplied...,,,unknown,no,0
,// slope,,,unknown,no,0
,// draw the plot background and axes...,,,unknown,no,0
,// seem to be the same...,,,unknown,no,0
,// add the new chart,,,unknown,no,0
,// baseOutlineStroke,,,unknown,no,0
,"//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks",,,unknown,no,0
,// shapeList,,,unknown,no,0
,// customise the title position and font,,,unknown,no,0
,// complicate things a little...,,,unknown,no,0
,//private double arrowLength;,,,unknown,no,0
,// check a series with one item,,,unknown,no,0
,"// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0",,,unknown,no,0
,// createEntitiesList;,,,unknown,no,0
,//small log values in use; create numeric value for tick,,,unknown,no,0
,"// if multiple axes are mapped, the first in the list should be // returned...",,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// tickRadius,,,unknown,no,0
,// PlotOrientation.VERTICAL,,,unknown,no,0
,"// if a subtrahend is not specified, assume it is zero",,,unknown,no,0
,// valueFont,,,unknown,no,0
,// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?,,,unknown,no,0
,// maxValue,,,unknown,no,0
,// does nothing - override if necessary,,,unknown,no,0
,// dataExtractOrder,,,unknown,no,0
,// row 1: antialiasing,,,unknown,no,0
,// secondary renderers,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// backgroundAlpha,,,unknown,no,0
,// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...,,,unknown,no,0
,// drawingSupplier,,,unknown,no,0
,// draw the top axes,,,unknown,no,0
,// wrong outcome,,,unknown,no,0
,// foregroundAlpha,,,unknown,no,0
,// key not found,,,unknown,no,0
,// we need to guard against this.zoomPoint being null,,,unknown,no,0
,// try a null collection,,,unknown,no,0
,// de-register the composite as a listener for the chart.,,,unknown,no,0
,// noDataMessage,,,unknown,no,0
,// Reset to the default 'overwrite' mode,,,unknown,no,0
,// noDataMessageFont,,,unknown,no,0
,"// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?",,,unknown,no,0
,// noDataMessagePaint,,,unknown,no,0
,// draw the item label if there is one...,,,unknown,no,0
,// check that negative items are always ignored,,,unknown,no,0
,"// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...",,,unknown,no,0
,// change the shape and make sure it only affects p1,,,unknown,no,0
,"// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.",,,unknown,no,0
,"// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));",,,unknown,no,0
,// axisOffset...,,,unknown,no,0
,// orientation...,,,unknown,no,0
,// delegate 'info' and 'source' argument checks...,,,unknown,no,0
,/* shape filled = */,,,unknown,no,0
,//first tick of group // did not do zero tick last // iteration,,,unknown,no,0
,"// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...",,,unknown,no,0
,// now add a third value to the series...,,,unknown,no,0
,// valueLocation,,,unknown,no,0
,// positiveItemLabelFallbackPosition,,,unknown,no,0
,// thermometerPaint,,,unknown,no,0
,"// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.",,,unknown,no,0
,// change the legendItemShape,,,unknown,no,0
,// check that super class fields are being looked at...,,,unknown,no,0
,// webFilled,,,unknown,no,0
,"// if there is an existing dataset, remove the plot from the list of // change listeners...",,,unknown,no,0
,// secondary DomainAxisLocations...,,,unknown,no,0
,// Performs the actual drawing here ...,,,unknown,no,0
,// axisLabelGap,,,unknown,no,0
,// urlGenerator,,,unknown,no,0
,"// if we get to here, we know that duplicate X values are not permitted",,,unknown,no,0
,// no event is generated if the dataset is already empty,,,unknown,no,0
,// null will be returned,,,unknown,no,0
,"// add a second dataset, plotted against a second axis",,,unknown,no,0
,// change a series paint,,,unknown,no,0
,// suppresses compiler warning,,,unknown,no,0
,// add another value,,,unknown,no,0
,// copy a range before the start of the series data...,,,unknown,no,0
,// toolTipGenerator,,,unknown,no,0
,// draw the label,,,unknown,no,0
,// labelGenerator,,,unknown,no,0
,"// since the flow layout is relatively straightforward, // no information needs to be recorded here",,,unknown,no,0
,// baseSeriesOutlineStroke,,,unknown,no,0
,// polygon definitions,,,unknown,no,0
,// axisLineStroke,,,unknown,no,0
,// check that null items are ignored if requested,,,unknown,no,0
,// submit the current data point as a crosshair candidate,,,unknown,no,0
,// outlineStroke,,,unknown,no,0
,//get log10 version of lower bound and round to integer:,,,unknown,no,0
,// backgroundImageAlignment,,,unknown,no,0
,//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// TBLRC // 11011,,,unknown,no,0
,// backgroundImage,,,unknown,no,0
,"// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...",,,unknown,no,0
,// labelShadowPaint,,,unknown,no,0
,"/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */",,,unknown,no,0
,// explodePercentages,,,unknown,no,0
,// toolTipGenerator,,,unknown,no,0
,// maximumLabelWidth,,,unknown,no,0
,// verify various indices inside a segment are the same segment,,,unknown,no,0
,// links visible,,,unknown,no,0
,// try a customised instance,,,unknown,no,0
,// outlineVisible,,,unknown,no,0
,// get two consecutive segments for various tests,,,unknown,no,0
,// shadowYOffset,,,unknown,no,0
,// newestAt takes value previously held // by oldestAT,,,unknown,no,0
,// shadowPaint,,,unknown,no,0
,"// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null",,,unknown,no,0
,// labelOutlinePaint,,,unknown,no,0
,// TBLRC // 11111 - all,,,unknown,no,0
,"// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);",,,unknown,no,0
,// separatorsVisible,,,unknown,no,0
,// labelOutlineStroke,,,unknown,no,0
,"// when the dataset contains no series, we expect the value range to  // be null",,,unknown,no,0
,// row keys...,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// sectionOutlinePaintList,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// handle transparency and compositing.,,,unknown,no,0
,// startAngle,,,unknown,no,0
,"// a list to store the series index and bar region, so we can draw // all the labels at the end...",,,unknown,no,0
,// direction,,,unknown,no,0
,// check that zero items are ignored if requested,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// plot is likely registered as a listener with the existing axis...,,,unknown,no,0
,// autoPopulateSectionOutlinePaint,,,unknown,no,0
,// the clone references the same dataset as the original,,,unknown,no,0
,// autoPopulateSectionOutlineStroke,,,unknown,no,0
,"// when the dataset contains no series, we expect the value range to  // be null",,,unknown,no,0
,// legendLabelGenerator,,,unknown,no,0
,// check that the URL generator has been cloned,,,unknown,no,0
,// offset the start of the box if the box width is smaller than the // category width,,,unknown,no,0
,// legendItemShape,,,unknown,no,0
,// only needed if calculating percentages,,,unknown,no,0
,// rangeGridlinesVisible,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// labelLinkStroke,,,unknown,no,0
,// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made,,,unknown,no,0
,// linkMargin,,,unknown,no,0
,//addException(exceptionDate.getTime());,,,unknown,no,0
,// urlGenerator,,,unknown,no,0
,// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));,,,unknown,no,0
,// check that the URL generator has been cloned,,,unknown,no,0
,// previous data point...,,,unknown,no,0
,// axisLinePaint,,,unknown,no,0
,// store the current time zone,,,unknown,no,0
,// outlinePaint,,,unknown,no,0
,// get the relevant source coordinate given the plot orientation,,,unknown,no,0
,// shadowGenerator,,,unknown,no,0
,"// FIXME: add setBaseStroke(Stroke, boolean) ?",,,unknown,no,0
,// domainAxisLocation...,,,unknown,no,0
,// domainGridlinePaint,,,unknown,no,0
,// compute common deltas,,,unknown,no,0
,// rangeZeroBaselineVisible,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default,,,unknown,no,0
,// quadrant paint,,,unknown,no,0
,// OUTLINE STROKE,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,//private NumberFormat numberFormatOverride;,,,unknown,no,0
,// no renderer 1,,,unknown,no,0
,// basePositiveItemLabelPosition;,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// positiveItemLabelPositionList;,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// Unregister the collection as a change listener to each series in // the collection.,,,unknown,no,0
,// fillPaintTransformer,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,"// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already",,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// adjust for insets...,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// 2. check whether the column is now empty.,,,unknown,no,0
,// we should be able to give a dataset an arbitrary index,,,unknown,no,0
,"// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]",,,unknown,no,0
,// we should be able to give a renderer an arbitrary index,,,unknown,no,0
,"// TBLRC // 10101 - top, left and center",,,unknown,no,0
,// add a second dataset,,,unknown,no,0
,"//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:",,,unknown,no,0
,// add a second dataset,,,unknown,no,0
,//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));,,,unknown,no,0
,// create the polygon // add the minuend's points to polygon,,,unknown,no,0
,"// return the generator for ALL series, if there is one...",,,unknown,no,0
,// loop over intervals between nodes,,,unknown,no,0
,// paint,,,unknown,no,0
,// backgroundPaint,,,unknown,no,0
,"// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value",,,unknown,no,0
,// upperBound,,,unknown,no,0
,// create an array of items in reverse order,,,unknown,no,0
,// startAngle,,,unknown,no,0
,// only relevant when this is a subplot,,,unknown,no,0
,// lowerBound,,,unknown,no,0
,"// with no buffer, we use XOR to draw the rectangle ""over"" the // chart...",,,unknown,no,0
,// outlinePaint,,,unknown,no,0
,"// in this case, every color has a range of values",,,unknown,no,0
,// font,,,unknown,no,0
,/* ComparableObjectItem item1 = */,,,unknown,no,0
,// paint index,,,unknown,no,0
,// gradient paint transformer,,,unknown,no,0
,"// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.",,,unknown,no,0
,// paint sequence,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions,,,unknown,no,0
,// create dataset 2...,,,unknown,no,0
,// now overwrite this item with another,,,unknown,no,0
,// x,,,unknown,no,0
,"// 'baseItemLabelPaint' : immutable, no need to clone reference",,,unknown,no,0
,// outline paint sequence,,,unknown,no,0
,"// for a series with no data, we expect {-1, -1}...",,,unknown,no,0
,// outline stroke sequence,,,unknown,no,0
,"// if there is an existing dataset, remove the plot from the list of // change listeners...",,,unknown,no,0
,// shape sequence,,,unknown,no,0
,// now test that the clone is independent of the original,,,unknown,no,0
,// draw the tick marks and labels...,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// now map the dataset to the second xAxis,,,unknown,no,0
,"// last item in series, draw the lot... // set up the alpha-transparency...",,,unknown,no,0
,// tickLabelFont,,,unknown,no,0
,// secondary DomainAxes...,,,unknown,no,0
,// itemLabelFontList,,,unknown,no,0
,"// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true",,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// adjust the drawing area for plot insets (if any)...,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// change a series outline paint,,,unknown,no,0
,// renderer,,,unknown,no,0
,"// get the previous point and the next point so we can calculate a // ""hot spot"" for the area (used by the chart entity)...",,,unknown,no,0
,// add the subplots...,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,// rangeAxis...,,,unknown,no,0
,// only draw if we have good values,,,unknown,no,0
,//calculate power using positive value; then negate,,,unknown,no,0
,// create storage for listeners...,,,unknown,no,0
,// secondary RangeAxisLocations...,,,unknown,no,0
,// check if starting new column,,,unknown,no,0
,// secondaryDatasetRangeAxisMap...,,,unknown,no,0
,// draw domain crosshair if required...,,,unknown,no,0
,// verify attributes set during object construction,,,unknown,no,0
,/* shape visible = */,,,unknown,no,0
,// add the subtrahend's points to the polygon in reverse,,,unknown,no,0
,// thermometerStroke,,,unknown,no,0
,// domainCrosshairVisible,,,unknown,no,0
,// axisLocation,,,unknown,no,0
,// dataset index,,,unknown,no,0
,// valuePaint,,,unknown,no,0
,// change rendering order to ensure that bar overlapping is the // right way around,,,unknown,no,0
,// valueFormat,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,//outlinePaint,,,unknown,no,0
,// try a collection with a single number plus a null,,,unknown,no,0
,// restore original tooltip dealys,,,unknown,no,0
,// textAnchor,,,unknown,no,0
,// BarRenderer,,,unknown,no,0
,// shadowGenerator,,,unknown,no,0
,// use item paint for fills by default,,,unknown,no,0
,// check a series with one item,,,unknown,no,0
,/* shape visible = */,,,unknown,no,0
,// rangeCrosshairValue,,,unknown,no,0
,// relay the event from the canvas to our registered listeners,,,unknown,no,0
,// rangeCrosshairLockedOnData,,,unknown,no,0
,// seriesVisibleInLegendList,,,unknown,no,0
,// fixed legend items,,,unknown,no,0
,"// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value",,,unknown,no,0
,// paint,,,unknown,no,0
,"// since this is only used by clearRect(), we don't update the GC yet",,,unknown,no,0
,"// add a second dataset, plotted against a second x axis",,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,// locale should not matter here,,,unknown,no,0
,// submit the current data point as a crosshair candidate,,,unknown,no,0
,// create dataset 1...,,,unknown,no,0
,// shadowYOffset,,,unknown,no,0
,"// remove plot2, but plot1 is removed instead",,,unknown,no,0
,// do we need to redraw the buffer?,,,unknown,no,0
,// create subplot 1...,,,unknown,no,0
,// data,,,unknown,no,0
,// create subplot 2...,,,unknown,no,0
,// z number format,,,unknown,no,0
,// create dataset 1...,,,unknown,no,0
,// rangeGridlinesVisible,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// Compute number of labels,,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// tests with values,,,unknown,no,0
,"//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing ""1e#""-style ticks):",,,unknown,no,0
,/*TimeSeriesDataItem item =*/,,,unknown,no,0
,// check that removing by index also works,,,unknown,no,0
,// test series with one item,,,unknown,no,0
,// test series with two items,,,unknown,no,0
,//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;,,,unknown,no,0
,// try null array,,,unknown,no,0
,// allowDuplicateValues,,,unknown,no,0
,//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int,,,unknown,no,0
,// this line triggers the defect,,,unknown,no,0
,// test a series with two items,,,unknown,no,0
,// check independence,,,unknown,no,0
,// test 1...,,,unknown,no,0
,//negatives not allowed and lower range bound is zero //use data range bound instead,,,unknown,no,0
,// can't get anything yet...just an exception,,,unknown,no,0
,// check negative first argument,,,unknown,no,0
,// store the plot and its weight,,,unknown,no,0
,// store the plot and its weight,,,unknown,no,0
,// changing the overwritten record shouldn't affect the series,,,unknown,no,0
,"//did zero tick last iteration //clear flag //create tick label string: //show tick label if ""1e#""-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:",,,unknown,no,0
,// try an array containing no items,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// rotation angle,,,unknown,no,0
,// copy the last two items...,,,unknown,no,0
,// copy the first two items...,,,unknown,no,0
,"// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************",,,unknown,no,0
,// OK,,,unknown,no,0
,// copy just the first item...,,,unknown,no,0
,// capLength,,,unknown,no,0
,// copy the last item...,,,unknown,no,0
,// copy a range that includes only the first item in the series...,,,unknown,no,0
,// test 1...,,,unknown,no,0
,// work out the space required by the domain axis...,,,unknown,no,0
,// null items are ignored,,,unknown,no,0
,// restore the default time zone,,,unknown,no,0
,"// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)",,,unknown,no,0
,// Make sure there's nothing left,,,unknown,no,0
,// shapeVisible,,,unknown,no,0
,// now add the same series to collection 2 to make them equal again...,,,unknown,no,0
,// newly created collections should be equal,,,unknown,no,0
,// now remove series 2 from collection 1 to make them equal again,,,unknown,no,0
,// first day of week is monday,,,unknown,no,0
,// try null zone,,,unknown,no,0
,// now test with a single value in the series...,,,unknown,no,0
,/** These constants control test cycles in the validateXXXX methods. */,,,unknown,no,0
,// add a third time period,,,unknown,no,0
,// now add a second value to the series...,,,unknown,no,0
,// first day of week is Sunday,,,unknown,no,0
,// work out the maximum height or width of the non-shared axes...,,,unknown,no,0
,// check empty dataset,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// create a new space object if one wasn't supplied...,,,unknown,no,0
,// range description - null,,,unknown,no,0
,// check empty dataset,,,unknown,no,0
,// add a fourth time period,,,unknown,no,0
,// test 2...,,,unknown,no,0
,// a null item should throw an IllegalArgumentException,,,unknown,no,0
,// range description,,,unknown,no,0
,// check dataset with one time period,,,unknown,no,0
,// domain description - null,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// locale should not matter here,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:,,,unknown,no,0
,// test 3...,,,unknown,no,0
,// try deleting a time period that doesn't exist...,,,unknown,no,0
,// copy a range that begins before and ends in the middle of the // series...,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,// empty dataset returns null,,,unknown,no,0
,// an empty dataset should return a null max,,,unknown,no,0
,// Double.NaN DOESN'T mess things up,,,unknown,no,0
,// got it!,,,unknown,no,0
,// and that simple aggregation works,,,unknown,no,0
,// an item in series 2,,,unknown,no,0
,// an empty dataset should return a null max,,,unknown,no,0
,// does nothing unless overridden,,,unknown,no,0
,// check a null value,,,unknown,no,0
,// simple check for independence,,,unknown,no,0
,// try a single item,,,unknown,no,0
,// simple check for independence,,,unknown,no,0
,// check a NaN,,,unknown,no,0
,// another item,,,unknown,no,0
,// overwrite the value,,,unknown,no,0
,// null list throws IllegalArgumentException,,,unknown,no,0
,// another empty series,,,unknown,no,0
,// try null argument,,,unknown,no,0
,// advance line Paint,,,unknown,no,0
,// adding a second series,,,unknown,no,0
,// check independence,,,unknown,no,0
,// pass on the event to the auxiliary handlers,,,unknown,no,0
,// check another regular value,,,unknown,no,0
,// try null argument,,,unknown,no,0
,// pass on the event to the auxiliary handlers,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,/* Number n =*/,,,unknown,no,0
,// test independence,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// a dataset with a single value,,,unknown,no,0
,// null range throws IllegalArgumentException,,,unknown,no,0
,// try a Double.NEGATIVE_INFINITY,,,unknown,no,0
,/* TimeSeries result = */,,,unknown,no,0
,// try an array containing a single Number and a NaN,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,/*item = */,,,unknown,no,0
,// check empty list,,,unknown,no,0
,// we call refresh ticks just to get the maximum width or height,,,unknown,no,0
,// check list containing null,,,unknown,no,0
,// try a collection with a single number plus a NaN,,,unknown,no,0
,// try zero length array,,,unknown,no,0
,// try a collection with several numbers,,,unknown,no,0
,// try an empty collection,,,unknown,no,0
,// try a collection with a single number,,,unknown,no,0
,// try a null argument,,,unknown,no,0
,// try null argument,,,unknown,no,0
,// try single value,,,unknown,no,0
,// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default,,,unknown,no,0
,// test empty series,,,unknown,no,0
,// try some nulls,,,unknown,no,0
,// try a list containing a single value,,,unknown,no,0
,// Saturday and Sundays are non business hours,,,unknown,no,0
,// try null list,,,unknown,no,0
,/*Quarter q =*/,,,unknown,no,0
,// locale shouldn't matter here,,,unknown,no,0
,// argument checking delegated...,,,unknown,no,0
,// try a dataset with two values,,,unknown,no,0
,// Add exception in included segments,,,unknown,no,0
,//gets the outline stroke width of the plot,,,unknown,no,0
,// try a Double.NaN,,,unknown,no,0
,// an empty dataset should return null for bounds,,,unknown,no,0
,// add a second series,,,unknown,no,0
,//no initial zoom rectangle exists but the handler is set //as life handler unregister,,,unknown,no,0
,/* TimeSeries s = */,,,unknown,no,0
,/* XYSeries s = */,,,unknown,no,0
,// seriesKey,,,unknown,no,0
,// lastBarPaint;,,,unknown,no,0
,// LEFT,,,unknown,no,0
,/* XYSeries s = */,,,unknown,no,0
,// WITHOUT AUTOPRUNING,,,unknown,no,0
,// still 2.,,,unknown,no,0
,"// here we do a check to see if the user is installing the ""Legacy"" // theme, and reset the bar painters in that case...",,,unknown,no,0
,"// since the flow layout is relatively straightforward, // no information needs to be recorded here",,,unknown,no,0
,// check that adding a series will overwrite the old series,,,unknown,no,0
,// set up info collection...,,,unknown,no,0
,// look at lower and upper bounds...,,,unknown,no,0
,// if the current stroke is not a BasicStroke then it is handled as // a special case,,,unknown,no,0
,// yLow,,,unknown,no,0
,// the link area defines the dog leg points for the linking lines to // the labels,,,unknown,no,0
,"// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?",,,unknown,no,0
,// text anchor,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// 1 value pruned.,,,unknown,no,0
,// y,,,unknown,no,0
,// x,,,unknown,no,0
,// establish the coordinates of the top left corner of the drawing area,,,unknown,no,0
,// do nothing,,,unknown,no,0
,// do nothing,,,unknown,no,0
,//  Test that there are now 4 X points,,,unknown,no,0
,// WITH AUTOPRUNING,,,unknown,no,0
,//  Test that there are still 7 X points,,,unknown,no,0
,"// after adding a point to a series, check that there are now 7 // items in each series",,,unknown,no,0
,//  Remove series 1,,,unknown,no,0
,// should be 2 items,,,unknown,no,0
,"// the series name should not  // change because ""C"" is already the key for the other series in the // collection",,,unknown,no,0
,// check null key,,,unknown,no,0
,//  Test that there are 6 X points and some specific values,,,unknown,no,0
,"// when the dataset contains no series, we expect the value range to  // be null",,,unknown,no,0
,"// hasn't implemented RangeInfo, so we'll have to iterate...",,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// milliseconds somewhere in 2006,,,unknown,no,0
,"// if there is an existing dataset, remove the plot from the list of // change listeners...",,,unknown,no,0
,// add a series,,,unknown,no,0
,// locale should not matter here,,,unknown,no,0
,// test 1...,,,unknown,no,0
,// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...,,,unknown,no,0
,"// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow",,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// add another value,,,unknown,no,0
,"// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...",,,unknown,no,0
,// draw the sections at the top of the pie (and set up tooltips)...,,,unknown,no,0
,// test 2...,,,unknown,no,0
,// test 1...,,,unknown,no,0
,// seriesKey,,,unknown,no,0
,// check for series key out of bounds,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// set up info collection...,,,unknown,no,0
,// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,"// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.",,,unknown,no,0
,// key,,,unknown,no,0
,// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...,,,unknown,no,0
,// retrieve an item,,,unknown,no,0
,// For the case were the first tick is greater // than minZ,,,unknown,no,0
,// adjust the plot area by the interior spacing value,,,unknown,no,0
,"// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow",,,unknown,no,0
,// seriesKey,,,unknown,no,0
,"// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.",,,unknown,no,0
,"// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...",,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// the pie sections are arranged ANTICLOCKWISE,,,unknown,no,0
,//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);,,,unknown,no,0
,// starts at back and wraps right around to the // back again,,,unknown,no,0
,// yLow,,,unknown,no,0
,// add a series,,,unknown,no,0
,// yHigh,,,unknown,no,0
,// adjust the drawing area for plot insets (if any)...,,,unknown,no,0
,// tests with values,,,unknown,no,0
,//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// add a series,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// add an empty series,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// check that the clone doesn't share the same underlying arrays.,,,unknown,no,0
,// and check the first series too...,,,unknown,no,0
,// check independence,,,unknown,no,0
,// default instances,,,unknown,no,0
,// autoSort,,,unknown,no,0
,// adjust the drawing area for plot insets (if any)...,,,unknown,no,0
,// seriesKey,,,unknown,no,0
,//if flag then change to log version of lowest value // to make range begin at a 10^n value:,,,unknown,no,0
,// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...,,,unknown,no,0
,/* shape visible = */,,,unknown,no,0
,// allowDuplicateValues,,,unknown,no,0
,// does nothing unless overridden,,,unknown,no,0
,// add a value,,,unknown,no,0
,// CASE 1 : Comparing to another Second object // -------------------------------------------,,,unknown,no,0
,// and check the first series too...,,,unknown,no,0
,// now add another series,,,unknown,no,0
,"// for efficiency, we just use the first, last and middle items to // compute a hashCode...",,,unknown,no,0
,// remove a value,,,unknown,no,0
,// remove a value,,,unknown,no,0
,// draw the label,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,// wrong outcome,,,unknown,no,0
,// remove a value,,,unknown,no,0
,// still 2,,,unknown,no,0
,//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:,,,unknown,no,0
,// correct outcome,,,unknown,no,0
,// xLow,,,unknown,no,0
,// xHigh,,,unknown,no,0
,"// hasn't implemented RangeInfo, so we'll have to iterate...",,,unknown,no,0
,// add an empty series,,,unknown,no,0
,// add another value,,,unknown,no,0
,// x,,,unknown,no,0
,// check null key,,,unknown,no,0
,// autoSort,,,unknown,no,0
,// check independence,,,unknown,no,0
,// still 2,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// try an index out of bounds,,,unknown,no,0
,"// after setting up all the subplots, the shared range axis may need // reconfiguring",,,unknown,no,0
,// add a value,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,"// TBLRC // 01011 - bottom, right and center",,,unknown,no,0
,// got the required exception,,,unknown,no,0
,"// next, check that setting a duplicate key fails",,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// first check that a valid renaming works,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// xHigh,,,unknown,no,0
,// check that adding a series will overwrite the old series,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,// check that adding a series will overwrite the old series,,,unknown,no,0
,"// after setting up all the subplots, the shared range axis may need // reconfiguring",,,unknown,no,0
,// properties // save // print // zoom // tooltips,,,unknown,no,0
,// check dataset with two time periods,,,unknown,no,0
,// check for series key out of bounds,,,unknown,no,0
,// null is ignored,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// fillPaint,,,unknown,no,0
,// upPaint,,,unknown,no,0
,// check boxPaint null also,,,unknown,no,0
,// check that the generator has been cloned,,,unknown,no,0
,// find out where to place the label...,,,unknown,no,0
,// linePaint,,,unknown,no,0
,// outlinePaint,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// an item in series 2,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// axisLocation,,,unknown,no,0
,// paint,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// outlineStroke,,,unknown,no,0
,// shape,,,unknown,no,0
,// downPaint,,,unknown,no,0
,"// first arrange without constraints, and see if this fits within // the required ranges...",,,unknown,no,0
,// drawVolume,,,unknown,no,0
,// candleWidth,,,unknown,no,0
,// try an empty dataset - should return a null range,,,unknown,no,0
,// tickLength,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// openTickPaint,,,unknown,no,0
,// maxCandleWidthInMilliseconds,,,unknown,no,0
,// drawCloseTicks,,,unknown,no,0
,// drawXError,,,unknown,no,0
,// legendLine,,,unknown,no,0
,// roundXCoordinates,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,// drawOpenTicks,,,unknown,no,0
,// autoWidthMethod,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// check independence,,,unknown,no,0
,// request with a negative index,,,unknown,no,0
,// check that a null dataset returns null bounds,,,unknown,no,0
,// simple case,,,unknown,no,0
,// now replacing the dataset should update the axis range...,,,unknown,no,0
,// now replacing the dataset should update the axis range...,,,unknown,no,0
,// Anwender hat abgebrochen.,,,unknown,no,0
,// check retrieve value by index,,,unknown,no,0
,// stripOutlineStroke,,,unknown,no,0
,// insets,,,unknown,no,0
,// try null argument,,,unknown,no,0
,// stripOutlinePaint,,,unknown,no,0
,// shapeOutlineVisible,,,unknown,no,0
,// paintScale,,,unknown,no,0
,// blockWidth,,,unknown,no,0
,// blockHeight,,,unknown,no,0
,// axis,,,unknown,no,0
,// check the bounds of a simple dataset,,,unknown,no,0
,"// first arrange without constraints, and see if this fits within // the required ranges...",,,unknown,no,0
,// test findDomainBounds as well,,,unknown,no,0
,// axisOffset,,,unknown,no,0
,// default instances,,,unknown,no,0
,// stripWidth,,,unknown,no,0
,// locale shouldn't matter here,,,unknown,no,0
,/* TimeSeries result = */,,,unknown,no,0
,/* shape filled = */,,,unknown,no,0
,// find out where to place the label...,,,unknown,no,0
,// BOTTOM,,,unknown,no,0
,// autoWidthGap,,,unknown,no,0
,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */",,,unknown,no,0
,// default instances,,,unknown,no,0
,// stripOutlineVisible,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// check a list containing a non-Number object,,,unknown,no,0
,// setMargin(),,,unknown,no,0
,// legendBar,,,unknown,no,0
,// shadowYOffset,,,unknown,no,0
,// legendItemLabelGenerator,,,unknown,no,0
,// baseItemURLGenerator,,,unknown,no,0
,// urlGeneratorList,,,unknown,no,0
,// legendItemURLGenerator,,,unknown,no,0
,// toolTipGeneratorList,,,unknown,no,0
,// itemLabelGeneratorList,,,unknown,no,0
,// check that the generator has been cloned,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// what is our alignment?,,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// check a series with two items,,,unknown,no,0
,// set flag true if negative values not allowed and the // lower bound is between 0 and 10:,,,unknown,no,0
,// row 3,,,unknown,no,0
,// shadowXOffset,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,// urlGenerator,,,unknown,no,0
,// should be equal...,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// TOP,,,unknown,no,0
,// get the current data item...,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// baseItemLabelGenerator,,,unknown,no,0
,// quick check for independence,,,unknown,no,0
,// the renderer should not be equal to a BarRenderer,,,unknown,no,0
,// firstBarPaint;,,,unknown,no,0
,// RIGHT,,,unknown,no,0
,"// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)",,,unknown,no,0
,// setBase(),,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// setDrawBarOutline(),,,unknown,no,0
,// try empty dataset,,,unknown,no,0
,// default instances,,,unknown,no,0
,// locale should not matter here,,,unknown,no,0
,// setUseYInterval,,,unknown,no,0
,// negativeItemLabelFallbackPosition,,,unknown,no,0
,// try null argument,,,unknown,no,0
,// barPainter,,,unknown,no,0
,// shadowsVisible,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// shadowXOffset,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// drawBarOutline,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// default instances,,,unknown,no,0
,// shadowsVisible,,,unknown,no,0
,// complicate things a little...,,,unknown,no,0
,// barPainter,,,unknown,no,0
,// maximumBarWidth,,,unknown,no,0
,// minimumBarLength,,,unknown,no,0
,// gradientPaintTransformer,,,unknown,no,0
,// base value,,,unknown,no,0
,// try something from the base class,,,unknown,no,0
,// itemMargin,,,unknown,no,0
,// autoWidthFactor,,,unknown,no,0
,// x,,,unknown,no,0
,// shapeAnchor,,,unknown,no,0
,// is the clone independent,,,unknown,no,0
,"// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...",,,unknown,no,0
,// this is expected,,,unknown,no,0
,// this is expected,,,unknown,no,0
,// this is expected,,,unknown,no,0
,// check for bounds interval that includes 1,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,// this is expected,,,unknown,no,0
,// try null,,,unknown,no,0
,// check that two empty datasets are equal,,,unknown,no,0
,// check index == getItemCount() throws exception,,,unknown,no,0
,// test null source,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,//  No op,,,unknown,no,0
,// this is expected,,,unknown,no,0
,// this is expected,,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,// check that the clone doesn't share the same underlying arrays.,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,// it's OK to use an index equal to the size of the list,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,// try a null source,,,unknown,no,0
,/* Comparable k = */,,,unknown,no,0
,// try null,,,unknown,no,0
,// try unknown row key,,,unknown,no,0
,// try null row key,,,unknown,no,0
,// try null column key,,,unknown,no,0
,// try negative column index,,,unknown,no,0
,// try column index too high,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// check negative index throws exception,,,unknown,no,0
,/* Comparable k = */,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,/* Number n =*/,,,unknown,no,0
,// try an array containing a single Number,,,unknown,no,0
,"// test collection 3, which doesn't define all tasks in all series",,,unknown,no,0
,// check that clone is independent of the original,,,unknown,no,0
,// a dataset with a single value,,,unknown,no,0
,// try a single item,,,unknown,no,0
,// simple check for independence,,,unknown,no,0
,// what if we don't want the interval?,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,/* int count = */,,,unknown,no,0
,// note that we don't define taskB1,,,unknown,no,0
,// define subtasks,,,unknown,no,0
,"// now overwrite group ""G2""...",,,unknown,no,0
,/* Number start = */,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// tickLabelFont,,,unknown,no,0
,// rotation anchor,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// increment an unknown column,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// LEFT,,,unknown,no,0
,// a row of all null values is still counted...,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,// increment a null value,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,// increment an unknown row,,,unknown,no,0
,// test null source,,,unknown,no,0
,// another item,,,unknown,no,0
,//dmo: (end dmo additions),,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,// lineStroke,,,unknown,no,0
,// try null key,,,unknown,no,0
,// try key index == itemCount,,,unknown,no,0
,// try unknown key,,,unknown,no,0
,/// we have rotation,,,unknown,no,0
,// Scaling with a factor of 1 does not change the range,,,unknown,no,0
,// check null list,,,unknown,no,0
,// check null argument,,,unknown,no,0
,// check handling of null key,,,unknown,no,0
,// try row index too high,,,unknown,no,0
,// request width index == itemCount,,,unknown,no,0
,// replace an existing value,,,unknown,no,0
,/*s1 = */,,,unknown,no,0
,/*v =*/,,,unknown,no,0
,// try null key,,,unknown,no,0
,// confirm that the clone is independent of the original,,,unknown,no,0
,// the clone contains a reference to a CLONE of the original object,,,unknown,no,0
,/*Range r2 =*/,,,unknown,no,0
,// check sorted rows,,,unknown,no,0
,// check that clone is independent of the original,,,unknown,no,0
,// check null argument 1,,,unknown,no,0
,// all tick labels have the same width (equal to the height of // the font)...,,,unknown,no,0
,// the clone contains a reference to the original object,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// start with the current tick unit...,,,unknown,no,0
,// the clone contains a reference to the original object,,,unknown,no,0
,// case 1 - object is mutable but not PublicCloneable,,,unknown,no,0
,"// if we modify the original list, it's best if the URL generator is // not affected",,,unknown,no,0
,// CASE 2 - object is mutable AND PublicCloneable,,,unknown,no,0
,// try deleting null,,,unknown,no,0
,// try a null value,,,unknown,no,0
,// maximumLinesToDisplay,,,unknown,no,0
,// try negative key index,,,unknown,no,0
,// Lower > upper: mid point is used,,,unknown,no,0
,// a small check for independence,,,unknown,no,0
,// text,,,unknown,no,0
,// check invalid indices,,,unknown,no,0
,// a null argument should throw an exception,,,unknown,no,0
,// a non-existent group should return -1,,,unknown,no,0
,// check invalid indices,,,unknown,no,0
,// indices are assigned in the order that groups are originally mapped,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,"// if the default group is not mapped to, it should still count towards // the group count...",,,unknown,no,0
,// the default group is always at index 0,,,unknown,no,0
,// check retrieve value by index,,,unknown,no,0
,// check retrieve value by key,,,unknown,no,0
,// check retrieve value by index,,,unknown,no,0
,// check retrieve value by key,,,unknown,no,0
,// check key order,,,unknown,no,0
,// check retrieve value by key,,,unknown,no,0
,// check retrieve value by index,,,unknown,no,0
,// Expand by 0% does not change the range,,,unknown,no,0
,// a new map always has 1 group (the default group),,,unknown,no,0
,// check independence,,,unknown,no,0
,// confirm that the clone is independent of the original,,,unknown,no,0
,"// now overwrite group ""G2""...",,,unknown,no,0
,// try null keys,,,unknown,no,0
,// check key order,,,unknown,no,0
,// calculate midnight of first monday after 1/1/1900 relative to // current locale,,,unknown,no,0
,// add a value,,,unknown,no,0
,// test independence,,,unknown,no,0
,//dmo: added this panel for colorbar control. (start dmo additions),,,unknown,no,0
,// remove an item,,,unknown,no,0
,// autoSort,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// map a key to a new group,,,unknown,no,0
,// baseSectionOutlinePaint,,,unknown,no,0
,// first determine the size of the chart rendering area...,,,unknown,no,0
,// sectionOutlineStrokeList,,,unknown,no,0
,// fillPaintTransformer,,,unknown,no,0
,//private double angle;,,,unknown,no,0
,// avoid to draw overlapping tick labels,,,unknown,no,0
,// check independence,,,unknown,no,0
,// a null key should throw an IllegalArgumentException,,,unknown,no,0
,// adding something to the returned list should NOT change the chart,,,unknown,no,0
,"//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);",,,unknown,no,0
,// perform the zoom on each range axis,,,unknown,no,0
,// reserve some space for the domain axis...,,,unknown,no,0
,// include legend,,,unknown,no,0
,"// draw the domain grid lines, if any...",,,unknown,no,0
,// chart title,,,unknown,no,0
,// check for bounds interval that includes 1,,,unknown,no,0
,// outlinePaint,,,unknown,no,0
,// deregister the collection as a change listener to each series in the // collection,,,unknown,no,0
,//chartBackgroundPaint;,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,"// as a special case, if the bar colour has alpha == 0, we draw // nothing.",,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// pdfDocument class will be null so the function will return false,,,unknown,no,0
,// backgroundImageAlpha,,,unknown,no,0
,// Reference: http://www.antigrain.com/research/bezier_interpolation/,,,unknown,no,0
,// try a Double.POSITIVE_INFINITY,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,// create the chart...,,,unknown,no,0
,// Y1,,,unknown,no,0
,// adjust the plot area for interior spacing and labels...,,,unknown,no,0
,// backgroundPaint,,,unknown,no,0
,// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// start with a unit that is at least 1/10th of the axis length,,,unknown,no,0
,// title,,,unknown,no,0
,// chart title,,,unknown,no,0
,// create the chart...,,,unknown,no,0
,//private Paint arrowPaint;,,,unknown,no,0
,"// get the previous point and the next point so we can calculate a // ""hot spot"" for the area (used by the chart entity)...",,,unknown,no,0
,"// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;",,,unknown,no,0
,// deregister the collection as a change listener to each series in the // collection,,,unknown,no,0
,// selected rectangle shouldn't extend outside the data area...,,,unknown,no,0
,//wallPaint;,,,unknown,no,0
,// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {,,,unknown,no,0
,// domainAxis...,,,unknown,no,0
,// create array xIndex to hold // new column indices,,,unknown,no,0
,//legendBackgroundPaint;,,,unknown,no,0
,// clear any exceptions in this timeline,,,unknown,no,0
,// include legend,,,unknown,no,0
,"// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...",,,unknown,no,0
,//legendItemPaint;,,,unknown,no,0
,// use reflection to get the SVG string,,,unknown,no,0
,// include legend,,,unknown,no,0
,//drawingSupplier;,,,unknown,no,0
,// column keys...,,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,//private NumberTickUnit tickUnit;,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,// include legend,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// include legend,,,unknown,no,0
,"// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null",,,unknown,no,0
,// chart title,,,unknown,no,0
,// standard test,,,unknown,no,0
,// data // include legend // tooltips // urls,,,unknown,no,0
,// align this rectangle to the frameAnchor,,,unknown,no,0
,// a null key should throw an IllegalArgumentException,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// value 1,,,unknown,no,0
,// draw the markers that are associated with a specific dataset...,,,unknown,no,0
,// borderPaint,,,unknown,no,0
,"// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)",,,unknown,no,0
,// validate base timeline exclusions added as timeline's esceptions,,,unknown,no,0
,"// even though the axis is not visible, we need ticks for the // gridlines...",,,unknown,no,0
,// column keys...,,,unknown,no,0
,// do we need to resize the buffer?,,,unknown,no,0
,// build the third tab,,,unknown,no,0
,// TBLRC // 01010 - bottom and right only,,,unknown,no,0
,// labelFont,,,unknown,no,0
,"// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null",,,unknown,no,0
,// minorTickLength,,,unknown,no,0
,// try unknown column key,,,unknown,no,0
,// backgroundImage,,,unknown,no,0
,//private TickUnits standardTickUnits;,,,unknown,no,0
,// row keys...,,,unknown,no,0
,// domainAxisLocation - no longer a separate field but test anyway...,,,unknown,no,0
,/* XYSeries s = */,,,unknown,no,0
,// to be consistent with other Graphics2D implementations,,,unknown,no,0
,// does nothing - override if necessary,,,unknown,no,0
,// Create the new font and set it into the title // label,,,unknown,no,0
,// borderVisible,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// sectionOutlinePaint,,,unknown,no,0
,// we can't do anything,,,unknown,no,0
,// BAR X,,,unknown,no,0
,// check dataset with one time period,,,unknown,no,0
,// clip top and bottom bounds to data area,,,unknown,no,0
,// row 1: stroke,,,unknown,no,0
,// time zone,,,unknown,no,0
,// row 3: background paint,,,unknown,no,0
,"// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored",,,unknown,no,0
,// row 2,,,unknown,no,0
,// ok and cancel buttons,,,unknown,no,0
,// don't zoom unless the mouse pointer is in the plot's data area,,,unknown,no,0
,// subtitles,,,unknown,no,0
,// and independent...,,,unknown,no,0
,// null will be returned,,,unknown,no,0
,// create the dataset...,,,unknown,no,0
,"// FIXME: add setBaseStroke(Stroke, boolean) ?",,,unknown,no,0
,// set the axis properties,,,unknown,no,0
,"// even though the axis is not visible, we need ticks for the // gridlines...",,,unknown,no,0
,// SWT and AWT share the same style constants.,,,unknown,no,0
,// seems to be the same...,,,unknown,no,0
,"//this.myColor = new Color(getDisplay(), color.getRGB());",,,unknown,no,0
,"// Next, setup the plot area",,,unknown,no,0
,// renderingHints,,,unknown,no,0
,// should get IllegalArgumentException for negative index,,,unknown,no,0
,"// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);",,,unknown,no,0
,"// first get the range without the interval, then expand it for the // interval width",,,unknown,no,0
,// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer,,,unknown,no,0
,// create a new awt font with the appropiate data,,,unknown,no,0
,"// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip",,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,// retrieve the swt font description in an os indept way,,,unknown,no,0
,// properties // save // print // zoom // tooltips,,,unknown,no,0
,//axisLabelPaint;,,,unknown,no,0
,"//showing ""1e#""-style ticks or negative exponent // generating tick value between 0 & 1; show fewer",,,unknown,no,0
,// padding,,,unknown,no,0
,"// it is too slow to look at every data item, so let's just look at // the first, middle and last items...",,,unknown,no,0
,// apply dash style if any,,,unknown,no,0
,// we are starting a new series path,,,unknown,no,0
,// set the line style to solid by default,,,unknown,no,0
,"// remove plot2, but plot1 is removed instead",,,unknown,no,0
,// we dispose resources we own but user must dispose gc,,,unknown,no,0
,// ensure we have a maximum value to use on the axes,,,unknown,no,0
,// borderStroke,,,unknown,no,0
,// close,,,unknown,no,0
,// seriesKey,,,unknown,no,0
,// row 4: orientation,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// TBLRC // 11000 - top and bottom only,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// and independent...,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,"// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key",,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,"// '+', remember value is negative",,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,// changing the item that was added should not change the series,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,"// if the bug is still present, this leads to an endless loop",,,unknown,no,0
,// test a default instance,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,// the following fields are inherited from the AbstractXYItemRenderer,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// seriesVisibleInLegend,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,// suppresses compiler warning,,,unknown,no,0
,// range,,,unknown,no,0
,//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.,,,unknown,no,0
,// timeline,,,unknown,no,0
,// draw the category labels and axis label,,,unknown,no,0
,// tickUnit,,,unknown,no,0
,// offset the start of the boxes if the total width used is smaller // than the category width,,,unknown,no,0
,// check that setting the min date to something on or after the // current min date works...,,,unknown,no,0
,// baseStroke,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// set axis bounds to be both greater than 1,,,unknown,no,0
,// Shifting with a delta of 0 does not change the range,,,unknown,no,0
,"// no plot, no data",,,unknown,no,0
,// work out the space required by the domain axis...,,,unknown,no,0
,"// no plot, no data",,,unknown,no,0
,// get desired width and height from somewhere then...,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// check retrieve value by key,,,unknown,no,0
,// MIDDLE: check d0,,,unknown,no,0
,// work out the space required by the domain axis...,,,unknown,no,0
,// END: check d0,,,unknown,no,0
,// case 1 - object is mutable but not PublicCloneable,,,unknown,no,0
,// check independence,,,unknown,no,0
,// fetch listeners from local storage,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,// START: check d0,,,unknown,no,0
,// reserve space for the range axes (if any)...,,,unknown,no,0
,// END: check d0,,,unknown,no,0
,// both axes,,,unknown,no,0
,//private double arrowWidth;,,,unknown,no,0
,"// here we need to update the UI for the popup menu, if the panel // has one...",,,unknown,no,0
,// test independence,,,unknown,no,0
,"// the row may not have an entry for this key, in which case the // return value is null",,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// shapeLocation,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// try an empty dataset - should return a null range,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// argument checking delegated...,,,unknown,no,0
,// test a default instance,,,unknown,no,0
,// tickMarkPosition,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,"// if the axis is not visible, don't draw it...",,,unknown,no,0
,"// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours",,,unknown,no,0
,//private double angle;,,,unknown,no,0
,"// add a second dataset, plotted against a second x axis",,,unknown,no,0
,//private double tipRadius;,,,unknown,no,0
,// now try to reject equality...,,,unknown,no,0
,//private double tipRadius;,,,unknown,no,0
,// find optimum height,,,unknown,no,0
,// row keys...,,,unknown,no,0
,//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):,,,unknown,no,0
,//private Stroke arrowStroke;,,,unknown,no,0
,// draw the plot (axes and data visualisation),,,unknown,no,0
,//errorIndicatorPaint;,,,unknown,no,0
,// shadowXOffset,,,unknown,no,0
,//xyBarPainter;,,,unknown,no,0
,//barPainter;,,,unknown,no,0
,// work out if scaling is required...,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// now try to reject equality...,,,unknown,no,0
,"// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:",,,unknown,no,0
,//thermometerPaint;,,,unknown,no,0
,//parameter value is > 0 // The Math.log() function is based on e not 10.,,,unknown,no,0
,//tickLabelPaint;,,,unknown,no,0
,// actual value set below,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,//shadowVisible;,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,//private Stroke arrowStroke;,,,unknown,no,0
,// reset the min and max,,,unknown,no,0
,//shadowPaint;,,,unknown,no,0
,//gridBandAlternatePaint,,,unknown,no,0
,//private double arrowLength;,,,unknown,no,0
,// categoryAnchor,,,unknown,no,0
,//handle panning if we have a start point else unregister,,,unknown,no,0
,"// add an entity for the item, but only if it falls within the // data area...",,,unknown,no,0
,// category,,,unknown,no,0
,// replace an existing series,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// create the renderer...,,,unknown,no,0
,// stroke,,,unknown,no,0
,// Unregister the collection as a change listener to each series in // the collection.,,,unknown,no,0
,// value,,,unknown,no,0
,//get upper bound value,,,unknown,no,0
,// TBLRC // 10100 - top and left only,,,unknown,no,0
,// legendItemToolTipGenerator,,,unknown,no,0
,// x0,,,unknown,no,0
,// @mgs: using the method's return value was missing,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,//private double labelOffset;,,,unknown,no,0
,// don't draw this tick label,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,//g2.clip(clipArea);,,,unknown,no,0
,// outlinePaint,,,unknown,no,0
,// rangeCrosshairStroke,,,unknown,no,0
,// now map the dataset to the second xAxis,,,unknown,no,0
,// TBLRC // 01001 - bottom and center only,,,unknown,no,0
,// weight,,,unknown,no,0
,// first field contains the row key,,,unknown,no,0
,//private double baseRadius;,,,unknown,no,0
,"// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer",,,unknown,no,0
,//private boolean autoRangeIncludesZero;,,,unknown,no,0
,"// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart",,,unknown,no,0
,//private double baseRadius;,,,unknown,no,0
,// rangeAxisLocation...,,,unknown,no,0
,// test a customised instance,,,unknown,no,0
,// Create the color-change dialog,,,unknown,no,0
,"// starts at the back, wraps around front, and // finishes at back again",,,unknown,no,0
,// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour,,,unknown,no,0
,// draw the item labels if there are any...,,,unknown,no,0
,// build second tab,,,unknown,no,0
,// you can add a null list - it would have been better if this // required EMPTY_LIST,,,unknown,no,0
,// row 4,,,unknown,no,0
,// check if previously colinear,,,unknown,no,0
,// set the plot properties...,,,unknown,no,0
,//label.setFont(font);,,,unknown,no,0
,// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...,,,unknown,no,0
,// don't need to do anything,,,unknown,no,0
,// no need to instantiate this    ,,,unknown,no,0
,// row 1,,,unknown,no,0
,// roseHighlightPaint,,,unknown,no,0
,// return the appropriate axis editor,,,unknown,no,0
,// Create the color-change dialog,,,unknown,no,0
,// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);,,,unknown,no,0
,//empty cell // row 2,,,unknown,no,0
,// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------,,,unknown,no,0
,// Dispose of any fonts we have created,,,unknown,no,0
,// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();,,,unknown,no,0
,//frame.setDisplayToolTips(false);,,,unknown,no,0
,// itemLabelsVisibleList,,,unknown,no,0
,"// create a legend, if requested...",,,unknown,no,0
,// should get IllegalArgumentException for negative index,,,unknown,no,0
,// period,,,unknown,no,0
,// mercuryPaint,,,unknown,no,0
,//row 2: background paint for the chart,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,// build first tab,,,unknown,no,0
,// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null),,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,/* TimeSeriesDataItem item = */,,,unknown,no,0
,// Create the new font and set it into the title // label,,,unknown,no,0
,// maxCategoryLabelWidthRatio,,,unknown,no,0
,//deal with range axis,,,unknown,no,0
,//gridBandPaint,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,// verify min value,,,unknown,no,0
,// change a series outline stroke,,,unknown,no,0
,// verify max value,,,unknown,no,0
,"// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value",,,unknown,no,0
,//deal with domain axis,,,unknown,no,0
,//titleField.setFont(font);,,,unknown,no,0
,// handle the special case where the dataset has y-intervals that // we want to measure,,,unknown,no,0
,//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);,,,unknown,no,0
,"// use item paint for outlines by // default, not outline paint",,,unknown,no,0
,// convert the font size (in pt for awt) to height in pixels for swt,,,unknown,no,0
,// set the range axis to display integers only...,,,unknown,no,0
,/* shape filled = */,,,unknown,no,0
,"// Get the item count for the series, so that we can know which is the // end of the series.",,,unknown,no,0
,// Dispose of any fonts we have created,,,unknown,no,0
,// Create the font-change dialog,,,unknown,no,0
,"// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar",,,unknown,no,0
,// Create the font-change dialog,,,unknown,no,0
,//not first tick to be displayed //no tick label,,,unknown,no,0
,// Use a colored text field to show the color,,,unknown,no,0
,"// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null",,,unknown,no,0
,// row 3,,,unknown,no,0
,// check that the clone doesn't share the same underlying arrays.,,,unknown,no,0
,//tickLabelFontField.setFont(font);,,,unknown,no,0
,/* XYSeries s = */,,,unknown,no,0
,// row 1,,,unknown,no,0
,"// test collection 3, which doesn't define all tasks in all series",,,unknown,no,0
,// check a regular value,,,unknown,no,0
,/* shape visible = */,,,unknown,no,0
,// minorTickCount,,,unknown,no,0
,// now replacing the dataset should update the axis range...,,,unknown,no,0
,// check that the clone doesn't share the same underlying arrays.,,,unknown,no,0
,// do we need to fill the buffer?,,,unknown,no,0
,"// height is OK, but width must be constrained",,,unknown,no,0
,// RANGE / RANGE,,,unknown,no,0
,"// if not, check if there is a paint defined for the specified key",,,unknown,no,0
,/// Get the column names and cache them.,,,unknown,no,0
,// check that changing a tick label font in a1 doesn't change a2,,,unknown,no,0
,/* shape filled = */,,,unknown,no,0
,// TBLRC // 00000 - no items,,,unknown,no,0
,// TBLRC // 11001,,,unknown,no,0
,// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...,,,unknown,no,0
,// labelBackgroundPaint,,,unknown,no,0
,"// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.",,,unknown,no,0
,// axisOffset...,,,unknown,no,0
,"// Absolute value, since the relative x // positions are reversed for horizontal orientation",,,unknown,no,0
,// request with a negative index,,,unknown,no,0
,"/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */",,,unknown,no,0
,// columnRenderingOrder...,,,unknown,no,0
,// try negative row index,,,unknown,no,0
,// domainAxes...,,,unknown,no,0
,// check independence,,,unknown,no,0
,// work out the number of periods to skip for labelling,,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,//apply upper margin by increasing upper bound:,,,unknown,no,0
,// separatorPaint,,,unknown,no,0
,// the actual panning occurs later in the mouseDragged()  // method,,,unknown,no,0
,// add the subplots...,,,unknown,no,0
,//yAdj = -descent - leading + (float) bounds.getHeight();,,,unknown,no,0
,"// TBLRC // 11010 - top, bottom and right",,,unknown,no,0
,// null will be returned,,,unknown,no,0
,// create subplot 2...,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// orientation...,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// y number format,,,unknown,no,0
,// suppresses compiler warning,,,unknown,no,0
,// x date format,,,unknown,no,0
,// Add last point @ y=0 for fillPath and close path,,,unknown,no,0
,// format string...,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,// TBLRC // 11110,,,unknown,no,0
,//turn off anti-aliasing when filling rectangles,,,unknown,no,0
,// draw shared domain axis...,,,unknown,no,0
,// fake a dataset change event to update axes...,,,unknown,no,0
,// delegate argument checking to XYDataItem...,,,unknown,no,0
,// outerSeparatorExtension,,,unknown,no,0
,// Generate the grid,,,unknown,no,0
,// rangeGridlinePaint,,,unknown,no,0
,// is there an alignment adjustment to be made?,,,unknown,no,0
,// draw the arrow...,,,unknown,no,0
,// handle panning if we have a start point,,,unknown,no,0
,// annotations,,,unknown,no,0
,//first tick of group; create label text,,,unknown,no,0
,// check independence,,,unknown,no,0
,// get a list of keys...,,,unknown,no,0
,// datasetToDomainAxisMap...,,,unknown,no,0
,// some setup...,,,unknown,no,0
,// rangeAxisLocations...,,,unknown,no,0
,// rangeAxes...,,,unknown,no,0
,// adjust the drawing area for the plot insets (if any)...,,,unknown,no,0
,// closeTickPaint,,,unknown,no,0
,// datasetToRangeAxisMap...,,,unknown,no,0
,// forces recalculation of the axis range,,,unknown,no,0
,// renderers...,,,unknown,no,0
,// try a default instance,,,unknown,no,0
,// TBLRC // 11100,,,unknown,no,0
,// CASE 2 - object is mutable AND PublicCloneable,,,unknown,no,0
,// domainAxisLocations...,,,unknown,no,0
,// calculate the data area...,,,unknown,no,0
,// rendering order...,,,unknown,no,0
,// get the previous data point...,,,unknown,no,0
,"// check handling when the dataset is a regular XYDataset, not an // XYZDataset...",,,unknown,no,0
,/* shape filled = */,,,unknown,no,0
,// TBLRC // 11101,,,unknown,no,0
,// x number format,,,unknown,no,0
,// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment,,,unknown,no,0
,"// remove plot2, but plot1 is removed instead",,,unknown,no,0
,// secondary DatasetDomainAxisMap...,,,unknown,no,0
,"// TBLRC // 01011 - bottom, right and center",,,unknown,no,0
,// check that the series visible flag is observed,,,unknown,no,0
,// wrong outcome,,,unknown,no,0
,// set up info collection...,,,unknown,no,0
,// remove a value,,,unknown,no,0
,"// initialize the members of ""seriesNames"" array so they won't be null:",,,unknown,no,0
,// TBLRC // 01100,,,unknown,no,0
,"// TBLRC // 11010 - top, bottom and right",,,unknown,no,0
,// seriesOutlineStrokeList,,,unknown,no,0
,"// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...",,,unknown,no,0
,// TBLRC // 10100 - top and left only,,,unknown,no,0
,// verify all timeline segments included in the // baseTimeline.segment are now exceptions,,,unknown,no,0
,/* XYSeries s = */,,,unknown,no,0
,// test a series with 1 item,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,// check that removing by index also works,,,unknown,no,0
,// TBLRC // 00110 - left and right items,,,unknown,no,0
,// erase the zoom rectangle,,,unknown,no,0
,// TBLRC // 10111,,,unknown,no,0
,// no need to create entity if we can't save it anyways...,,,unknown,no,0
,// now map the dataset to the second xAxis,,,unknown,no,0
,// set up popup menu...,,,unknown,no,0
,// create dataset 1...,,,unknown,no,0
,// special case - if the underlying rectangle uses ints we // need to create one that uses doubles,,,unknown,no,0
,// TBLRC // 11110,,,unknown,no,0
,// a Collection containing a NaN will return Double.NaN for the result,,,unknown,no,0
,// TBLRC // 11111 - all,,,unknown,no,0
,// add a value that isn't in the xRange,,,unknown,no,0
,// rangeCrosshairVisible,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,// change rendering order to ensure that bar overlapping is the // right way around,,,unknown,no,0
,// no additional methods required,,,unknown,no,0
,// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end,,,unknown,no,0
,// TBLRC // 11011,,,unknown,no,0
,// another test...,,,unknown,no,0
,// now extrapolate based on label height and unit height...,,,unknown,no,0
,// try a null value,,,unknown,no,0
,//  Create new dataset with keys above threshold percentThreshold,,,unknown,no,0
,// create subplot 1...,,,unknown,no,0
,"//  If data can be < 0, the next 2 methods should be modified",,,unknown,no,0
,// date format,,,unknown,no,0
,"/* // ""Extras"" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */",,,unknown,no,0
,// tooltip format,,,unknown,no,0
,// handle three cases by dataset type,,,unknown,no,0
,// Y format,,,unknown,no,0
,// do nothing if item is not visible or null,,,unknown,no,0
,// some setup...,,,unknown,no,0
,// defer null argument check,,,unknown,no,0
,//private Paint arrowPaint;,,,unknown,no,0
,"// now we should be allowed to change s1's key to anything but ""S2""",,,unknown,no,0
,// TBLRC // 10010 - right and top only,,,unknown,no,0
,// check that the new bin doesn't overlap with any existing bin,,,unknown,no,0
,// TBLRC // 10000 - top item only,,,unknown,no,0
,// TBLRC // 00011 - right and center items,,,unknown,no,0
,"// TBLRC // 01101 - bottom, left and center",,,unknown,no,0
,"// get the previous point and the next point so we can calculate a // ""hot spot"" for the area (used by the chart entity)...",,,unknown,no,0
,// TBLRC // 01110 - bottom. left and right,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,"// TBLRC // 10011 - top, right and center",,,unknown,no,0
,//dmo: added this panel for colorbar control. (start dmo additions),,,unknown,no,0
,// TBLRC // 01001 - bottom and center only,,,unknown,no,0
,// either autoWidth is off or autoIntervalWidth was not set.,,,unknown,no,0
,"// TBLRC // 00111 - left, right and center items",,,unknown,no,0
,// standard case - plain XYDataset,,,unknown,no,0
,// rangeGridlineStroke,,,unknown,no,0
,// domainGridlineStroke,,,unknown,no,0
,// check that changing a tick label paint in a1 doesn't change a2,,,unknown,no,0
,// tick label format,,,unknown,no,0
,// value font,,,unknown,no,0
,// set up some objects...,,,unknown,no,0
,// needle paint,,,unknown,no,0
,// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default,,,unknown,no,0
,//stroke,,,unknown,no,0
,// Draw the new zoom rectangle...,,,unknown,no,0
,// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());,,,unknown,no,0
,/* Rectangle2D hotspot = */,,,unknown,no,0
,//alpha,,,unknown,no,0
,// allowDuplicateValues,,,unknown,no,0
,// stroke,,,unknown,no,0
,// value 1,,,unknown,no,0
,// draw border,,,unknown,no,0
,"// since the items are ordered, we could be more clever here and avoid // iterating over all the data",,,unknown,no,0
,// check if there are any values earlier than specified by the history // count...,,,unknown,no,0
,// value paint,,,unknown,no,0
,// remove the point i-periodCount out of the rolling sum.,,,unknown,no,0
,// tick label font,,,unknown,no,0
,// XYDataset only provides methods for reading a dataset...,,,unknown,no,0
,// now map the dataset to the second xAxis,,,unknown,no,0
,// update the linking line target for later // add an entity for the pie section,,,unknown,no,0
,// rangeGridlineStroke,,,unknown,no,0
,// force a redraw // new entity code...,,,unknown,no,0
,// tick label paint,,,unknown,no,0
,// drawBorder,,,unknown,no,0
,// adjust the drawing area for plot insets (if any)...,,,unknown,no,0
,// wrong outcome,,,unknown,no,0
,// only draw if we have good values,,,unknown,no,0
,// toolTipGenerator,,,unknown,no,0
,// draw average - SPECIAL AIMS REQUIREMENT,,,unknown,no,0
,// add a second dataset,,,unknown,no,0
,//paint,,,unknown,no,0
,"// as a class variable, initializes == 0",,,unknown,no,0
,// tick paint,,,unknown,no,0
,// Reset to the default 'overwrite' mode,,,unknown,no,0
,// sectionPaintMap,,,unknown,no,0
,// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...,,,unknown,no,0
,// direction,,,unknown,no,0
,// TBLRC // 00100 - left item only,,,unknown,no,0
,// ignoreNullValues,,,unknown,no,0
,// another empty series,,,unknown,no,0
,// circular,,,unknown,no,0
,// additional dataArea modifications //check whether modification is,,,unknown,no,0
,// sectionPaint,,,unknown,no,0
,// BAR X,,,unknown,no,0
,// labelGap,,,unknown,no,0
,// extent,,,unknown,no,0
,// interiorGap...,,,unknown,no,0
,// interiorGap,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// END: check d3 and d4,,,unknown,no,0
,// rosePaint,,,unknown,no,0
,// create the plot...,,,unknown,no,0
,// roseCenterPaint,,,unknown,no,0
,// draw the axis label (note that 'state' is passed in *and* // returned)...,,,unknown,no,0
,// baseSectionOutlineStroke,,,unknown,no,0
,// secondary RangeAxes...,,,unknown,no,0
,//outlineStroke,,,unknown,no,0
,"//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:",,,unknown,no,0
,/// we have rotation,,,unknown,no,0
,// row keys...,,,unknown,no,0
,// stop listening for changes to the existing chart,,,unknown,no,0
,//key,,,unknown,no,0
,// add the subtrahend's points to the polygon in reverse,,,unknown,no,0
,// meter angle,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,// add a second dataset,,,unknown,no,0
,// are we using the chart buffer?,,,unknown,no,0
,// override default,,,unknown,no,0
,// create a new space object if one wasn't supplied...,,,unknown,no,0
,//calculate power using positive value; then negate,,,unknown,no,0
,// don't zoom unless the mouse pointer is in the plot's data area,,,unknown,no,0
,"// add a second renderer with the same index as dataset2, now it will // be used",,,unknown,no,0
,// work out if scaling is required...,,,unknown,no,0
,// weight,,,unknown,no,0
,//return toTimelineValue(dateDomainValue.getTime());,,,unknown,no,0
,// domainCrosshairRowKey,,,unknown,no,0
,// make sure there are no exceptions,,,unknown,no,0
,// rangeCrosshairStroke,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,// foreground domain markers,,,unknown,no,0
,// special case where the lowest x-value is >= xLow,,,unknown,no,0
,// foreground range markers...,,,unknown,no,0
,// background domain markers,,,unknown,no,0
,// define the default locations for up to 8 axes...,,,unknown,no,0
,"// starts at back, finishes at front (CLOCKWISE)",,,unknown,no,0
,// rangeCrosshairVisible,,,unknown,no,0
,"/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */",,,unknown,no,0
,// labelGenerator,,,unknown,no,0
,"// starts at the front, finishes at the back (going // around the left side)",,,unknown,no,0
,//parameter value is < -10 //calculate log using positive value:,,,unknown,no,0
,// default is to notify listeners when the // chart changes,,,unknown,no,0
,// rangeCrosshairValue,,,unknown,no,0
,"// this should never happen with the existing code, but throw // an exception in case future changes make it possible...",,,unknown,no,0
,// background range markers...,,,unknown,no,0
,// a key that hasn't been mapped should return the default group,,,unknown,no,0
,// domainGridlinesVisible,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// rowRenderingOrder...,,,unknown,no,0
,// check for independence,,,unknown,no,0
,// domainCrosshairColumnKey,,,unknown,no,0
,// domainGridlinePaint,,,unknown,no,0
,// should be equal...,,,unknown,no,0
,// outline paint,,,unknown,no,0
,// we should be able to give a renderer an arbitrary index,,,unknown,no,0
,// Set XOR mode to draw the zoom rectangle,,,unknown,no,0
,"// if multiple axes are mapped, the first in the list should be // returned...",,,unknown,no,0
,"// if the plot area is too small, just return...",,,unknown,no,0
,// we should be able to give a dataset an arbitrary index,,,unknown,no,0
,// check index == getItemCount() throws exception,,,unknown,no,0
,// labelPaint,,,unknown,no,0
,// check second argument less than first argument,,,unknown,no,0
,// labelFont,,,unknown,no,0
,// get the current data item...,,,unknown,no,0
,// add a second dataset,,,unknown,no,0
,//this.chartPanel.isRangeZoomable()) {,,,unknown,no,0
,// dial outline paint,,,unknown,no,0
,// correct outcome,,,unknown,no,0
,//// SERIES OUTLINE PAINT ////////////////////////////,,,unknown,no,0
,// the x value is not within the axis range,,,unknown,no,0
,// we didn't get an exception so all is good,,,unknown,no,0
,// don't need to do anything,,,unknown,no,0
,//parameter value is <= 0 //use as-is,,,unknown,no,0
,// try a dataset with a single value,,,unknown,no,0
,// should get IllegalArgumentException for negative index,,,unknown,no,0
,// adjust the drawing area for the plot insets (if any)...,,,unknown,no,0
,// domainCrosshairStroke,,,unknown,no,0
,// axis line paint...,,,unknown,no,0
,// shadowGenerator,,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,// crosshairDatasetIndex,,,unknown,no,0
,"// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************",,,unknown,no,0
,// fixed range axis space...,,,unknown,no,0
,// TBLRC // 11001,,,unknown,no,0
,// positiveItemLabelPosition;,,,unknown,no,0
,// TBLRC // 11100,,,unknown,no,0
,// test some included and excluded segments,,,unknown,no,0
,// sectionOutlineStroke,,,unknown,no,0
,"// if there is an explicit mapping to the default group, it is counted",,,unknown,no,0
,// test 9am-4pm Monday through Friday timeline,,,unknown,no,0
,// the segment is entirely at the // front of the chart,,,unknown,no,0
,// RANGE / NONE,,,unknown,no,0
,// properties // save // print // zoom // tooltips,,,unknown,no,0
,// BAR X,,,unknown,no,0
,// CASE 1 : Comparing to another Minute object // -------------------------------------------,,,unknown,no,0
,// paint,,,unknown,no,0
,//// STROKE ///////////////////////////////////////////////////////////////,,,unknown,no,0
,// TBLRC // 01000 - bottom item only,,,unknown,no,0
,// zap the buffer onto the panel...,,,unknown,no,0
,// logically consecutive segments non-physically consecutive // (with non-contained time in between),,,unknown,no,0
,// POSITIVE ITEM LABEL POSITION,,,unknown,no,0
,// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...,,,unknown,no,0
,//private double labelOffset;,,,unknown,no,0
,"// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...",,,unknown,no,0
,// low,,,unknown,no,0
,// default instances,,,unknown,no,0
,// calculate 9am on the first Monday after 2001-01-01,,,unknown,no,0
,// a Double.NaN should be ignored,,,unknown,no,0
,// add minor ticks (for gridlines),,,unknown,no,0
,// make the background of the buffer clear and transparent,,,unknown,no,0
,/*Quarter q =*/,,,unknown,no,0
,// make the chart area a square,,,unknown,no,0
,/** These constants control test cycles in the validateXXXX methods. */,,,unknown,no,0
,// redrawing the chart every time...,,,unknown,no,0
,// Create a segmented time line (segment size : 15 minutes),,,unknown,no,0
,//lower bound and margin OK; get log10 of lower bound,,,unknown,no,0
,// Set start time,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,// verify segments are consecutive and correct,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// test inc() method,,,unknown,no,0
,/* shape filled = */,,,unknown,no,0
,// include current exception and last one,,,unknown,no,0
,// should be an included segment,,,unknown,no,0
,"// add an entity for the item, but only if it falls within the data // area...",,,unknown,no,0
,// should be an excluded segment,,,unknown,no,0
,// rangeAxisLocation - no longer a separate field but test anyway...,,,unknown,no,0
,// fill in the exceptions,,,unknown,no,0
,// rangeCrosshairLockedOnData,,,unknown,no,0
,// tick labels visible flag...,,,unknown,no,0
,// lowerBound,,,unknown,no,0
,// verify list of exceptions,,,unknown,no,0
,// the link area defines the dog leg points for the linking lines to // the labels,,,unknown,no,0
,// tick label insets...,,,unknown,no,0
,"// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)",,,unknown,no,0
,// font,,,unknown,no,0
,// select a tick unit that is the next one bigger than the current // (log) range divided by 50,,,unknown,no,0
,// we create a new but empty chartMouseListeners list,,,unknown,no,0
,// fixed domain axis space...,,,unknown,no,0
,// test inc(n) method,,,unknown,no,0
,// make the link area a square if the pie chart is to be circular... // is circular?,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,// no data in the parent plot,,,unknown,no,0
,// go to another segment to continue test,,,unknown,no,0
,// check that the series visible flag is observed,,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// exclude current exception and last one,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,// itemLabelsVisible,,,unknown,no,0
,// try next segment,,,unknown,no,0
,//dmo: (end dmo additions),,,unknown,no,0
,// visible flag...,,,unknown,no,0
,/* PUT exclusions in test */,,,unknown,no,0
,"// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html",,,unknown,no,0
,// advance line Visible,,,unknown,no,0
,// upperMargin,,,unknown,no,0
,// advance line Stroke,,,unknown,no,0
,"// set the new dataset, and register the chart as a change listener...",,,unknown,no,0
,"// if fixed auto range, then derive lower bound...",,,unknown,no,0
,"// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)",,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// fillPaintList,,,unknown,no,0
,// check that changing a tick label font in a1 doesn't change a2,,,unknown,no,0
,// create the canvas and add the required listeners,,,unknown,no,0
,// check for bounds interval that includes 1,,,unknown,no,0
,// TBLRC // 00101 - left and center items,,,unknown,no,0
,// set start and end date,,,unknown,no,0
,// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.,,,unknown,no,0
,// MIDDLE: check d0,,,unknown,no,0
,"// test collection 3, which doesn't define all tasks in all series",,,unknown,no,0
,"//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));",,,unknown,no,0
,// offset,,,unknown,no,0
,// categoryMargin,,,unknown,no,0
,"// the CategoryDataset interface expects a list of series, but // we've stored them in an array...",,,unknown,no,0
,// categoryLabelPositionOffset,,,unknown,no,0
,"// the line is visible - if it wasn't, we'd have // returned false from within the while loop above",,,unknown,no,0
,// check for both bounds smaller than 1,,,unknown,no,0
,// domainGridlineStroke,,,unknown,no,0
,// check for both bounds smaller than 1,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// lowerMargin,,,unknown,no,0
,"// if the popup menu has already been triggered, then ignore dragging...",,,unknown,no,0
,// categoryLabelPositions,,,unknown,no,0
,// START: check d0,,,unknown,no,0
,// check that changing a category label tooltip in a1 doesn't change a2,,,unknown,no,0
,// null dataset throws IllegalArgumentException,,,unknown,no,0
,// only draw if we have good values,,,unknown,no,0
,// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.,,,unknown,no,0
,// reduce the default margins,,,unknown,no,0
,// tickLabelPaint2,,,unknown,no,0
,"// if the axis is not visible, don't draw it...",,,unknown,no,0
,// generic map for each series,,,unknown,no,0
,"// if the axis is not visible, don't draw it...",,,unknown,no,0
,// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min,,,unknown,no,0
,"// if the axis is not visible, don't draw it...",,,unknown,no,0
,// ----------------------- // --- Private Methods --- // -----------------------,,,unknown,no,0
,"// if the axis is not visible, don't draw it...",,,unknown,no,0
,"// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...",,,unknown,no,0
,// cycle bound mapping,,,unknown,no,0
,"// after s1 is removed from the collection, we should be able to set // the key to anything we want...",,,unknown,no,0
,// verify attributes set during object construction,,,unknown,no,0
,//private Shape leftArrow;,,,unknown,no,0
,// period,,,unknown,no,0
,// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //,,,unknown,no,0
,// now draw annotations and render data items...,,,unknown,no,0
,// check that changing a category label tooltip in a1 doesn't change a2,,,unknown,no,0
,// categoryLabelToolTips,,,unknown,no,0
,// draw domain crosshair if required...,,,unknown,no,0
,// categoryLabelURLs,,,unknown,no,0
,// register as a listener with sub-components...,,,unknown,no,0
,"// MIDDLE: check d1, d2 and d3",,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// tickLabelPaint,,,unknown,no,0
,// CASE 2 : Comparing to a general object // ---------------------------------------------,,,unknown,no,0
,// paint,,,unknown,no,0
,// null will be returned,,,unknown,no,0
,//private double fixedAutoRange;,,,unknown,no,0
,// compute common denominator,,,unknown,no,0
,// check that changing a tick label paint in a1 doesn't change a2,,,unknown,no,0
,// try a null key - should throw an exception,,,unknown,no,0
,// tick mark paint...,,,unknown,no,0
,// we need to guard against this.zoomPoint being null,,,unknown,no,0
,//long v = stl.toTimelineValue(946684800020L);,,,unknown,no,0
,// yearFormatter,,,unknown,no,0
,// TBLRC // 11000 - top and bottom only,,,unknown,no,0
,//end point is lower right corner --> diagonal gradient,,,unknown,no,0
,// standard test,,,unknown,no,0
,// draw the annotations (if any)...,,,unknown,no,0
,// FIXED / RANGE,,,unknown,no,0
,// now repeat for a vertical axis,,,unknown,no,0
,// 1-Jan-2000,,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,// chars,,,unknown,no,0
,"// when the dataset contains no series, we expect the range to be null",,,unknown,no,0
,// showYear[],,,unknown,no,0
,"// if series are in columns, then the categories are the row keys",,,unknown,no,0
,// locale,,,unknown,no,0
,// check arguments...,,,unknown,no,0
,// clip top and bottom bounds to data area,,,unknown,no,0
,// FIXED / NONE,,,unknown,no,0
,// y,,,unknown,no,0
,// negativeItemLabelPositionFallback,,,unknown,no,0
,// axisLineStroke,,,unknown,no,0
,"// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck",,,unknown,no,0
,// verticalTickLabels,,,unknown,no,0
,"// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only",,,unknown,no,0
,// NONE / NONE,,,unknown,no,0
,"// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...",,,unknown,no,0
,//private Shape upArrow;,,,unknown,no,0
,"// add a second renderer with the same index as dataset2, now it will // be used",,,unknown,no,0
,//private Shape rightArrow;,,,unknown,no,0
,//upper bound and margin OK; get log10 of upper bound,,,unknown,no,0
,//private Shape downArrow;,,,unknown,no,0
,//get absolute value of log10 value,,,unknown,no,0
,// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.,,,unknown,no,0
,"// by default, the renderer with index 0 is used",,,unknown,no,0
,/* shape visible = */,,,unknown,no,0
,// TBLRC // 00011 - right and center items,,,unknown,no,0
,// check independence,,,unknown,no,0
,// try an array containing a single Number and a null,,,unknown,no,0
,"// TBLRC // 00111 - left, right and center items",,,unknown,no,0
,// otherwise look up the generator table,,,unknown,no,0
,// TBLRC // 01010 - bottom and right only,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// TBLRC // 00110 - left and right items,,,unknown,no,0
,"// if we've been panning, we need to reset now that the mouse is  // released...",,,unknown,no,0
,// TBLRC // 00101 - left and center items,,,unknown,no,0
,// check a series with one item,,,unknown,no,0
,"// TBLRC // 10110 - top, left and right",,,unknown,no,0
,// here we check that the average marker will in fact be // visible before drawing it...,,,unknown,no,0
,// try case where left item is shorter than center item,,,unknown,no,0
,// check if this addition will exceed the maximum item count...,,,unknown,no,0
,"// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes",,,unknown,no,0
,// RANGE / FIXED,,,unknown,no,0
,// should be 2 items,,,unknown,no,0
,// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance(),,,unknown,no,0
,// try case where right item is shorter than center item,,,unknown,no,0
,// draw the block without collecting entities,,,unknown,no,0
,// TBLRC // 00010 - right item only,,,unknown,no,0
,"//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks",,,unknown,no,0
,// TBLRC // 10111,,,unknown,no,0
,// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------,,,unknown,no,0
,// FIXED / FIXED,,,unknown,no,0
,// check that there is some data to display...,,,unknown,no,0
,// TBLRC // 00010 - right item only,,,unknown,no,0
,"// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...",,,unknown,no,0
,// TBLRC // 00100 - left item only,,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// NONE / RANGE,,,unknown,no,0
,// tick mark outside length...,,,unknown,no,0
,// strokeList,,,unknown,no,0
,// subLabelPaint,,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,"// it is too slow to look at every data item, so let's just look at // the first, middle and last items...",,,unknown,no,0
,// subcategories,,,unknown,no,0
,// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************,,,unknown,no,0
,// verify all timeline segments included in the // baseTimeline.segment are now exceptions,,,unknown,no,0
,"// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item",,,unknown,no,0
,// subLabelFont,,,unknown,no,0
,// set up info collection...,,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// ensure the autorange is at least <minRange> in size...,,,unknown,no,0
,// lowerMargin,,,unknown,no,0
,"// by default, the renderer with index 0 is used",,,unknown,no,0
,// upperMargin,,,unknown,no,0
,"// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************",,,unknown,no,0
,//  Remove series 2 and add new series,,,unknown,no,0
,// physically consecutive,,,unknown,no,0
,// 1-Jan-2000,,,unknown,no,0
,// adjust the plot area by the interior spacing value,,,unknown,no,0
,// add the base timeline exclusions as timeline's esceptions,,,unknown,no,0
,// try replacing an existing value,,,unknown,no,0
,// start time...,,,unknown,no,0
,// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...,,,unknown,no,0
,// check that the clone doesn't share the same underlying arrays.,,,unknown,no,0
,// some checks that the clone is independent of the original,,,unknown,no,0
,"// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead",,,unknown,no,0
,// add our exceptions and store locally in ArrayList of Longs,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// only add an exception if it is currently an included segment,,,unknown,no,0
,"// if multiple axes are mapped, the first in the list should be // returned...",,,unknown,no,0
,// tickLabelOffset,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// hasn't implemented DomainInfo, so iterate...",,,unknown,no,0
,// selected rectangle shouldn't extend outside the data area...,,,unknown,no,0
,// label angle...,,,unknown,no,0
,// fixed dimension...,,,unknown,no,0
,"// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...",,,unknown,no,0
,// tick mark inside length...,,,unknown,no,0
,// go through each zoom menu item and decide whether or not to // enable it...,,,unknown,no,0
,// tick label paint...,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,// label location...,,,unknown,no,0
,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */",,,unknown,no,0
,// axis line visible flag...,,,unknown,no,0
,// TBLRC // 10001 - top and center only,,,unknown,no,0
,// NONE / FIXED,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,// axis line visible...,,,unknown,no,0
,"// if the axis is not visible, no additional space is required...",,,unknown,no,0
,"// Add each point to Area (x, y)",,,unknown,no,0
,// positiveArrowVisible;,,,unknown,no,0
,// axis line stroke...,,,unknown,no,0
,"/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */",,,unknown,no,0
,// high,,,unknown,no,0
,"// if the box has been drawn backwards, restore the auto bounds",,,unknown,no,0
,// label insets...,,,unknown,no,0
,// now add some more data,,,unknown,no,0
,// attributed label...,,,unknown,no,0
,// holds the moving average sum,,,unknown,no,0
,// label paint...,,,unknown,no,0
,"// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...",,,unknown,no,0
,// label...,,,unknown,no,0
,// adjust the drawing area for the plot insets (if any)...,,,unknown,no,0
,// label font...,,,unknown,no,0
,"// if there is no separator, we assume the first four characters // are YYYY",,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// locale shouldn't matter here,,,unknown,no,0
,// paintScale,,,unknown,no,0
,"// set the default item label positions, which will only be used if // the user requests visible item labels...",,,unknown,no,0
,// check that a legend item needs to be displayed...,,,unknown,no,0
,// Y0,,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,// Y1,,,unknown,no,0
,// we'll set this to false if there is at // least one non-null data item...,,,unknown,no,0
,// offset the start of the boxes if the total width used is smaller // than the category width,,,unknown,no,0
,// calculate the box width,,,unknown,no,0
,// check that clone is independent of the original,,,unknown,no,0
,// treat the last column value as an absolute,,,unknown,no,0
,// BAR HEIGHT,,,unknown,no,0
,// offset the start of the box if the box width is smaller than // the category width,,,unknown,no,0
,// nothing is drawn for null values...,,,unknown,no,0
,"// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...",,,unknown,no,0
,// draw the box...,,,unknown,no,0
,// BAR WIDTH,,,unknown,no,0
,"// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow",,,unknown,no,0
,"// 100 percent, so it will not apply unless // changed",,,unknown,no,0
,// first check the number we are plotting...,,,unknown,no,0
,// need to handle cluster centering as a special case,,,unknown,no,0
,// draw the bar...,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,// nothing is drawn for null values...,,,unknown,no,0
,// connect to the previous point,,,unknown,no,0
,// draw the upper shadow...,,,unknown,no,0
,// retrieve an item,,,unknown,no,0
,// create a line renderer only,,,unknown,no,0
,// create an actual polygon,,,unknown,no,0
,// PlotOrientation.HORIZONTAL,,,unknown,no,0
,"// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?",,,unknown,no,0
,/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/,,,unknown,no,0
,"// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?",,,unknown,no,0
,"/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */",,,unknown,no,0
,// draw the upper shadow...,,,unknown,no,0
,// Create a new Area for the series,,,unknown,no,0
,// avoid possible sun.dc.pr.PRException: endPath: bad path,,,unknown,no,0
,// there are no fields to check,,,unknown,no,0
,// calculate the arrow head and draw it...,,,unknown,no,0
,// draw optional guide lines,,,unknown,no,0
,// start new area when needed (see above),,,unknown,no,0
,// do nothing...this is just a hook for subclasses,,,unknown,no,0
,// draw an outline around the Area.,,,unknown,no,0
,// fill the polygon,,,unknown,no,0
,"// Add the last point (x,0)",,,unknown,no,0
,// project onto minuend,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// range,,,unknown,no,0
,// check if series are disjoint (i.e. domain-spans do not overlap),,,unknown,no,0
,// get the previous data point...,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,"// The first point is (x, this.baseYValue)",,,unknown,no,0
,// start from Y = rangeBase,,,unknown,no,0
,// not just a horizontal bar but need to perform a 'step'.,,,unknown,no,0
,// disable visible items optimisation - it doesn't work for this // renderer...,,,unknown,no,0
,// avoid possible sun.dc.pr.PRException: endPath: bad path,,,unknown,no,0
,// draw farout indicators,,,unknown,no,0
,// draw the body...,,,unknown,no,0
,// draw yOutliers...,,,unknown,no,0
,// average radius,,,unknown,no,0
,// average radius,,,unknown,no,0
,// draw mean - SPECIAL AIMS REQUIREMENT...,,,unknown,no,0
,// check retrieve value by index,,,unknown,no,0
,// draw median...,,,unknown,no,0
,// here we check that the average marker will in fact be // visible before drawing it...,,,unknown,no,0
,// draw the lower shadow...,,,unknown,no,0
,// draw median...,,,unknown,no,0
,// standard ResourceBundle behaviour,,,unknown,no,0
,//// ITEM LABEL PAINT  /////////////////////////////////////////////////////,,,unknown,no,0
,"// FIXME: add setBaseItemLabelFont(Font, boolean) ?",,,unknown,no,0
,// fill background...,,,unknown,no,0
,"// FIXME: add setSeriesShape(int, Shape, boolean) ?",,,unknown,no,0
,// get the current data item...,,,unknown,no,0
,// x1's flat bar,,,unknown,no,0
,// BAR Y,,,unknown,no,0
,//// OUTLINE PAINT /////////////////////////////////////////////////////////,,,unknown,no,0
,//plotOutlinePaint;,,,unknown,no,0
,// the clone and the original share a reference to the SAME dataset,,,unknown,no,0
,// or: x1s + 2*(x1-x1s),,,unknown,no,0
,// or: x0s + 2*(x0-x0s),,,unknown,no,0
,// extend x0's flat bar,,,unknown,no,0
,// upright bar,,,unknown,no,0
,// switch x and y,,,unknown,no,0
,// check key order,,,unknown,no,0
,// current data point...,,,unknown,no,0
,// Y0,,,unknown,no,0
,// check key order,,,unknown,no,0
,//standard deviation lines,,,unknown,no,0
,// tick size,,,unknown,no,0
,// tick labels visible,,,unknown,no,0
,"// draw background image, if there is one...",,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...",,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,// current data point...,,,unknown,no,0
,//// SHAPE /////////////////////////////////////////////////////////////////,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,// nothing is drawn for null values...,,,unknown,no,0
,// units,,,unknown,no,0
,// draw the item labels if there are any...,,,unknown,no,0
,// previous data point...,,,unknown,no,0
,// check key order,,,unknown,no,0
,// nothing is drawn for null...,,,unknown,no,0
,// POSITIVE ITEM LABEL POSITION...,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,//// ITEM LABEL FONT  //////////////////////////////////////////////////////,,,unknown,no,0
,// current data point...,,,unknown,no,0
,"// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)",,,unknown,no,0
,//// OUTLINE STROKE ////////////////////////////////////////////////////////,,,unknown,no,0
,// ITEM LABELS VISIBLE,,,unknown,no,0
,"// FIXME: add setBaseOutlinePaint(Paint, boolean)?",,,unknown,no,0
,"// FIXME: add setBaseShape(Shape, boolean) ?",,,unknown,no,0
,"// FIXME: add setSeriesPaint(int, Paint, boolean)?",,,unknown,no,0
,// check independence,,,unknown,no,0
,//// STROKE ////////////////////////////////////////////////////////////////,,,unknown,no,0
,// previous data point...,,,unknown,no,0
,"// FIXME: add setSeriesStroke(int, Stroke, boolean) ?",,,unknown,no,0
,// NEGATIVE ITEM LABEL POSITION...,,,unknown,no,0
,// BAR WIDTH,,,unknown,no,0
,// BAR X,,,unknown,no,0
,// draw the item label if there is one...,,,unknown,no,0
,// ITEM LABEL GENERATOR,,,unknown,no,0
,"// FIXME: add setBasePaint(int, Paint, boolean)?",,,unknown,no,0
,//// FILL PAINT /////////////////////////////////////////////////////////,,,unknown,no,0
,"// FIXME: add setSeriesPaint(int, Paint, boolean)?",,,unknown,no,0
,// row 2: outline color,,,unknown,no,0
,// TOOL TIP GENERATOR,,,unknown,no,0
,// BAR HEIGHT,,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,"// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //",,,unknown,no,0
,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */",,,unknown,no,0
,//// PAINT /////////////////////////////////////////////////////////////////,,,unknown,no,0
,// submit the current data point as a crosshair candidate,,,unknown,no,0
,//labelLinkStyle;,,,unknown,no,0
,// orientation is HORIZONTAL,,,unknown,no,0
,// check if either series is a degenerate case (i.e. less than 2 points),,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,"// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.",,,unknown,no,0
,// backgroundPaint,,,unknown,no,0
,"//  On first pass render the areas, line and outlines",,,unknown,no,0
,// project onto subtrahend,,,unknown,no,0
,// === DEPRECATED CODE ===,,,unknown,no,0
,// backgroundPaint,,,unknown,no,0
,"// if the renderer isn't assigned to a plot, then we don't have a // dataset...",,,unknown,no,0
,// SHAPES VISIBLE,,,unknown,no,0
,"// now draw the outlines, if visible...",,,unknown,no,0
,// add an entity if this info is being collected,,,unknown,no,0
,// backgroundPaint,,,unknown,no,0
,// dial outline paint,,,unknown,no,0
,//  Get height adjustment based on stack and translate to Java2D values,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// start from previous height (ph1),,,unknown,no,0
,// Create a new Area for the series,,,unknown,no,0
,// ignore,,,unknown,no,0
,//// LEGEND ITEMS /////////////////////////////////////////////////////////,,,unknown,no,0
,//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////,,,unknown,no,0
,// create the new color and set it to the // SwtPaintCanvas,,,unknown,no,0
,//// ITEM LABEL GENERATOR /////////////////////////////////////////////////,,,unknown,no,0
,//// SHAPE ////////////////////////////////////////////////////////////////,,,unknown,no,0
,// paint,,,unknown,no,0
,// add a value,,,unknown,no,0
,"// FIXME: add setBaseShape(Shape, boolean) ?",,,unknown,no,0
,// allowDuplicateXValues,,,unknown,no,0
,//// OUTLINE STROKE ///////////////////////////////////////////////////////,,,unknown,no,0
,// first pass draws the shading,,,unknown,no,0
,"// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?",,,unknown,no,0
,//  Get series Paint and Stroke,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// get the data points,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// draw path,,,unknown,no,0
,// Collect points,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// Add points from last series to complete the base of the // polygon,,,unknown,no,0
,// On second pass render shapes and collect entity and tooltip // information,,,unknown,no,0
,"// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent",,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// draw the item label if there is one...,,,unknown,no,0
,// update path to reflect latest point,,,unknown,no,0
,"// if this is the last item, draw the path ...",,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// construct path,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// we need at least two points to draw something,,,unknown,no,0
,// use item paint for fills by default,,,unknown,no,0
,// URL GENERATOR,,,unknown,no,0
,// dial shape,,,unknown,no,0
,// LINES VISIBLE,,,unknown,no,0
,"// The first point is (x, 0)",,,unknown,no,0
,// add another value,,,unknown,no,0
,"// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only",,,unknown,no,0
,//  Draw an outline around the Area.,,,unknown,no,0
,// get the previous data point...,,,unknown,no,0
,// SHAPES FILLED,,,unknown,no,0
,"// Add each point to Area (x, y)",,,unknown,no,0
,"// Add the last point (x,0)",,,unknown,no,0
,"// Get the item count for the series, so that we can know which is the // end of the series.",,,unknown,no,0
,//labelLinkPaint;,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,//// URL GENERATOR ////////////////////////////////////////////////////////,,,unknown,no,0
,//// TOOL TIP GENERATOR ///////////////////////////////////////////////////,,,unknown,no,0
,// request width index == itemCount,,,unknown,no,0
,// project onto subtrahend,,,unknown,no,0
,// units,,,unknown,no,0
,// draw the item label if there is one...,,,unknown,no,0
,// draw an outline around the Area.,,,unknown,no,0
,// SERIES VISIBLE IN LEGEND (not yet respected by all renderers),,,unknown,no,0
,// add intersection point to the polygon,,,unknown,no,0
,// create an actual polygon,,,unknown,no,0
,// test if both grahphs have a vertical rise at the same x-value,,,unknown,no,0
,// check if the line segments intersect,,,unknown,no,0
,// compute the point of intersection,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// this won't happen :),,,unknown,no,0
,// compute numerators,,,unknown,no,0
,// clear colinear points and flag,,,unknown,no,0
,// pass mouse move event if some ChartMouseListener are listening,,,unknown,no,0
,// set new starting point for the polygon,,,unknown,no,0
,// return straight away if the item is not visible,,,unknown,no,0
,// deassert b_*FastForward (only matters for 1st time through loop),,,unknown,no,0
,// check for intersect,,,unknown,no,0
,// check if line segments are colinear,,,unknown,no,0
,//// ANNOTATIONS //////////////////////////////////////////////////////////,,,unknown,no,0
,"// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...",,,unknown,no,0
,// DEPRECATED METHODS,,,unknown,no,0
,// subtrahend needs to be fast forwarded,,,unknown,no,0
,// project onto minuend,,,unknown,no,0
,// start of algorithm,,,unknown,no,0
,// y,,,unknown,no,0
,// can't draw anything,,,unknown,no,0
,// state,,,unknown,no,0
,//// ITEM LABEL FONT ///////////////////////////////////////////////////////,,,unknown,no,0
,// try a listener type that isn't registered,,,unknown,no,0
,//// PAINT ////////////////////////////////////////////////////////////////,,,unknown,no,0
,// add interection point to new polygon,,,unknown,no,0
,"// FIXME: add setSeriesStroke(int, Stroke, boolean) ?",,,unknown,no,0
,// a Range object cannot be equal to a different object type,,,unknown,no,0
,// NEGATIVE ITEM LABEL POSITION...,,,unknown,no,0
,"// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?",,,unknown,no,0
,// Create the new font and set it into the title // label,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// POSITIVE ITEM LABEL POSITION...,,,unknown,no,0
,"// FIXME: add setSeriesShape(int, Shape, boolean) ?",,,unknown,no,0
,// second pass adds shapes where the items are ..,,,unknown,no,0
,// interval,,,unknown,no,0
,// default instances,,,unknown,no,0
,//// OUTLINE PAINT ////////////////////////////////////////////////////////,,,unknown,no,0
,//// DRAWING //////////////////////////////////////////////////////////////,,,unknown,no,0
,// compute slope components,,,unknown,no,0
,// bad axisNumber,,,unknown,no,0
,// create the polygon // add the minuend's points to polygon,,,unknown,no,0
,"// FIXME: add setBaseOutlinePaint(Paint, boolean)?",,,unknown,no,0
,// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?,,,unknown,no,0
,// Dispose of any fonts we have created,,,unknown,no,0
,// advance minuend and subtrahend to intesect,,,unknown,no,0
,// vertical orientation,,,unknown,no,0
,// advance the minuend if needed,,,unknown,no,0
,//// VISIBLE //////////////////////////////////////////////////////////////,,,unknown,no,0
,// advance the subtrahend if needed,,,unknown,no,0
,"// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...",,,unknown,no,0
,// check if the final polygon needs to be clipped,,,unknown,no,0
,// consider last point of minuend and subtrahend for determining // positivity,,,unknown,no,0
,// add the last point of the minuned and subtrahend,,,unknown,no,0
,// PlotOrientation.HORIZONTAL,,,unknown,no,0
,// labelType...,,,unknown,no,0
,// set the maxY and minY values to intersect y-value,,,unknown,no,0
,"// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?",,,unknown,no,0
,// calculate bar width...,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// construct spline // number of points // Newton form coefficients // x-coordinates of nodes,,,unknown,no,0
,// STROKE,,,unknown,no,0
,// otherwise look up the stroke table,,,unknown,no,0
,// PAINT,,,unknown,no,0
,// SERIES VISIBLE IN LEGEND (not yet respected by all renderers),,,unknown,no,0
,"// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure",,,unknown,no,0
,// SERIES VISIBLE (not yet respected by all renderers),,,unknown,no,0
,// otherwise look up the position list,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// check that a legend item needs to be displayed...,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// font,,,unknown,no,0
,// OUTLINE PAINT //////////////////////////////////////////////////////////,,,unknown,no,0
,// otherwise look up the paint table,,,unknown,no,0
,// now do the minor tick marks,,,unknown,no,0
,// lowerBound,,,unknown,no,0
,// upperBound,,,unknown,no,0
,"// first, expand the viewing area into a drawing frame",,,unknown,no,0
,// draw the background if there is one...,,,unknown,no,0
,// draw the pointers,,,unknown,no,0
,// adjust text bounds to match string position,,,unknown,no,0
,// startAngle,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// otherwise look up the paint list,,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,// now find the text anchor point,,,unknown,no,0
,// urlText,,,unknown,no,0
,// extent,,,unknown,no,0
,/* lineVisible= */,,,unknown,no,0
,// work out the anchor point,,,unknown,no,0
,// otherwise look up the shape list,,,unknown,no,0
,// SHAPE,,,unknown,no,0
,// otherwise look up the position table,,,unknown,no,0
,"// 'baseOutlineStroke' : immutable, no need to clone reference",,,unknown,no,0
,"// listeners are not restored automatically, but storage must be // provided...",,,unknown,no,0
,"// 'outlineStroke' : immutable, no need to clone reference",,,unknown,no,0
,// === DEPRECATED CODE ===,,,unknown,no,0
,"//System.err.print("" creating new outlier list "");",,,unknown,no,0
,// assign a color for each unique value,,,unknown,no,0
,"// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference",,,unknown,no,0
,"// 'itemLabelsVisible' : immutable, no need to clone reference",,,unknown,no,0
,"// 'itemLabelFont' : immutable, no need to clone reference",,,unknown,no,0
,"// 'itemLabelPaint' : immutable, no need to clone reference",,,unknown,no,0
,"// 'postiveItemLabelAnchor' : immutable, no need to clone reference",,,unknown,no,0
,"// in this case, every color has a unique value",,,unknown,no,0
,// shapeList // baseShape,,,unknown,no,0
,"// 'baseItemLabelFont' : immutable, no need to clone reference",,,unknown,no,0
,"// 'basePaint' : immutable, no need to clone reference",,,unknown,no,0
,//create a temporary vector // set x to some arbitary value (used below),,,unknown,no,0
,//// ITEM LABEL FONT //////////////////////////////////////////////////////,,,unknown,no,0
,"// 'baseItemLabelAnchor' : immutable, no need to clone reference",,,unknown,no,0
,// skip any items that don't need including...,,,unknown,no,0
,"// 'basePaint' : immutable, no need to clone reference",,,unknown,no,0
,"// 'stroke' : immutable, no need to clone reference",,,unknown,no,0
,"// 'outlinePaint' : immutable, no need to clone reference",,,unknown,no,0
,"// 'baseStroke' : immutable, no need to clone reference",,,unknown,no,0
,// NEGATIVE ITEM LABEL POSITION...,,,unknown,no,0
,"// 'paint' : immutable, no need to clone reference",,,unknown,no,0
,//// ITEM LABEL PAINT  ////////////////////////////////////////////////////,,,unknown,no,0
,// OUTLINE STROKE,,,unknown,no,0
,// otherwise look up the boolean table,,,unknown,no,0
,// POSITIVE ITEM LABEL POSITION...,,,unknown,no,0
,// ITEM LABEL VISIBILITY...,,,unknown,no,0
,//  Iterate and find all keys below threshold percentThreshold,,,unknown,no,0
,// no domain axis to zoom,,,unknown,no,0
,// calculate the bounds of the template value,,,unknown,no,0
,// draw the outline of the filled polygon,,,unknown,no,0
,// no default renderer available,,,unknown,no,0
,// get the relevant source coordinate given the plot orientation,,,unknown,no,0
,// we don't clone the listeners,,,unknown,no,0
,// check independence,,,unknown,no,0
,"// the datasets are not cloned, but listeners need to be added...",,,unknown,no,0
,// delegate to other method,,,unknown,no,0
,"// if the event was caused by a change to series visibility, then // the axis ranges might need updating...",,,unknown,no,0
,// try the parent plot,,,unknown,no,0
,// try the parent plot,,,unknown,no,0
,// use the TextTitle class because it is a concrete subclass,,,unknown,no,0
,// adjust the drawing area for plot insets (if any)...,,,unknown,no,0
,// iterate through the datasets that map to the axis and get the union // of the ranges.,,,unknown,no,0
,// we can't draw quadrants without a valid y-axis,,,unknown,no,0
,// can't render anything without axes,,,unknown,no,0
,// we can't draw quadrants without a valid x-axis,,,unknown,no,0
,// render data items...,,,unknown,no,0
,// adjust for insets...,,,unknown,no,0
,// draw foreground annotations,,,unknown,no,0
,//  0 | 1 //  --+-- //  2 | 3,,,unknown,no,0
,//render series in reverse order,,,unknown,no,0
,"/// Draw N, S, E, W",,,unknown,no,0
,// get the relevant source coordinate given the plot orientation,,,unknown,no,0
,// draw background annotations,,,unknown,no,0
,//render series in forward order,,,unknown,no,0
,// is it a domain axis?,,,unknown,no,0
,// tickRadius,,,unknown,no,0
,// draw the left axes,,,unknown,no,0
,// draw the right axes,,,unknown,no,0
,// draw the top axes,,,unknown,no,0
,"// draw the range grid lines, if any...",,,unknown,no,0
,// the first axis in the list is used for data <--> Java2D,,,unknown,no,0
,// delegate to other method,,,unknown,no,0
,/// Squares,,,unknown,no,0
,// draw the border,,,unknown,no,0
,//  draw units indicator,,,unknown,no,0
,// draw thermometer outline,,,unknown,no,0
,// now check that the chart is usable...,,,unknown,no,0
,// draw range indicators...,,,unknown,no,0
,// pieIndex...,,,unknown,no,0
,// draw start of critical range,,,unknown,no,0
,// draw start of warning range,,,unknown,no,0
,// draw the axis...,,,unknown,no,0
,//// FILL PAINT //////////////////////////////////////////////////////////,,,unknown,no,0
,// draw start of normal range,,,unknown,no,0
,// draw text value on screen,,,unknown,no,0
,// expected,,,unknown,no,0
,// draw the cap if there is one...,,,unknown,no,0
,// plot is registered as a listener with the existing axis...,,,unknown,no,0
,// already calculated // already calculated,,,unknown,no,0
,// get the source coordinate - this plot has always a VERTICAL // orientation,,,unknown,no,0
,// Unregister the collection as a change listener to each series in // the collection.,,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,"// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null",,,unknown,no,0
,// draw the background,,,unknown,no,0
,// intentionally blank,,,unknown,no,0
,//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);,,,unknown,no,0
,"// set the new dataset, and register the chart as a change listener...",,,unknown,no,0
,// lineVisible,,,unknown,no,0
,"// register the plot as a listener with its axes, datasets, and // renderers...",,,unknown,no,0
,// perform the zoom on each domain axis,,,unknown,no,0
,// or is it a range axis?,,,unknown,no,0
,"// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...",,,unknown,no,0
,// draw the item shapes,,,unknown,no,0
,"// if there is an existing dataset, remove the plot from the list // of change listeners...",,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,// handle special case where value is less that item zero,,,unknown,no,0
,//// TOOL TIP GENERATOR ///////////////////////////////////////////////////,,,unknown,no,0
,// special case where the highest x-value is < xLow,,,unknown,no,0
,// === DEPRECATED CODE ===,,,unknown,no,0
,// draw the bar...,,,unknown,no,0
,"// cases 1, 2, 3 and 4",,,unknown,no,0
,// submit the current data point as a crosshair candidate,,,unknown,no,0
,"// cases 9, 10, 11 and 12",,,unknown,no,0
,// TBLRC // 00001 - center item only,,,unknown,no,0
,"// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?",,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,"// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?",,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,"//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);",,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,"// draw background image, if there is one...",,,unknown,no,0
,"// cases 9, 10, 11 and 12",,,unknown,no,0
,// standard deviation lines,,,unknown,no,0
,// submit the current data point as a crosshair candidate,,,unknown,no,0
,"// cases 9, 10, 11 and 12",,,unknown,no,0
,"// cases 5, 6, 7 and 8",,,unknown,no,0
,"// cases 5, 6, 7 and 8",,,unknown,no,0
,// standard deviation lines,,,unknown,no,0
,// PlotOrientation.HORIZONTAL,,,unknown,no,0
,"// cases 1, 2, 3 and 4",,,unknown,no,0
,// let the superclass handle it...,,,unknown,no,0
,// handle special case of BoxAndWhiskerDataset,,,unknown,no,0
,// BAR Y,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,// you can add a null list - it would have been better if this // required EMPTY_LIST,,,unknown,no,0
,"// cases 1, 2, 3 and 4",,,unknown,no,0
,"// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?",,,unknown,no,0
,"// now draw the outlines, if visible...",,,unknown,no,0
,"// cases 5, 6, 7 and 8",,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,// no new methods,,,unknown,no,0
,// draw the item labels if there are any...,,,unknown,no,0
,// the bar is not visible,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,// calculate the bar width,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,// draw the bar...,,,unknown,no,0
,// check independence,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,"// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?",,,unknown,no,0
,// check that a legend item needs to be displayed...,,,unknown,no,0
,"// 100 percent, so it will not apply unless changed",,,unknown,no,0
,// calculate bar width...,,,unknown,no,0
,// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {,,,unknown,no,0
,// no fields to compute...,,,unknown,no,0
,// nothing is drawn for null values...,,,unknown,no,0
,// calculate the bar width,,,unknown,no,0
,// nothing is drawn for null values...,,,unknown,no,0
,//plotBackgroundPaint;,,,unknown,no,0
,// the clone contains a reference to a CLONE of the original object,,,unknown,no,0
,"// cases 1, 2, 3 and 4",,,unknown,no,0
,"// cases 9, 10, 11 and 12",,,unknown,no,0
,// draw the bar...,,,unknown,no,0
,// add a second dataset,,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,// Y,,,unknown,no,0
,// nothing is drawn for null values...,,,unknown,no,0
,// Y1,,,unknown,no,0
,"// if we modify the original list, it's best if the URL generator is // not affected",,,unknown,no,0
,// DRAW THE BARS...,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,// check that a legend item needs to be displayed...,,,unknown,no,0
,// defensive check,,,unknown,no,0
,//// URL GENERATOR ////////////////////////////////////////////////////////,,,unknown,no,0
,// RIGHT POLYGON,,,unknown,no,0
,// preserves old behaviour,,,unknown,no,0
,// wrong outcome,,,unknown,no,0
,// SHAPES FILLED,,,unknown,no,0
,// contained titles,,,unknown,no,0
,// SHAPES VISIBLE,,,unknown,no,0
,// upperBound,,,unknown,no,0
,// draw the blocks,,,unknown,no,0
,// look for any keys that we don't already know about...,,,unknown,no,0
,// BAR Y,,,unknown,no,0
,// handle value outside bounds...,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,// SHAPES FILLED,,,unknown,no,0
,// check independence,,,unknown,no,0
,// LEFT POLYGON,,,unknown,no,0
,// RIGHT POLYGON,,,unknown,no,0
,// row keys...,,,unknown,no,0
,// skip any items that don't need including...,,,unknown,no,0
,// handle positive value,,,unknown,no,0
,// end foreach map entry // end else,,,unknown,no,0
,// LEFT POLYGON,,,unknown,no,0
,// handle negative value,,,unknown,no,0
,// should get IllegalArgumentException for negative index,,,unknown,no,0
,"// when the x-values are descending, the upper bound is found by // comparing against xLow",,,unknown,no,0
,// assign a color for each unique value,,,unknown,no,0
,// correct outcome,,,unknown,no,0
,// end class wafermaprenderer,,,unknown,no,0
,// calculate the bar width,,,unknown,no,0
,"// return the overall setting, if there is one...",,,unknown,no,0
,"// if there is no plot, there is no dataset to access...",,,unknown,no,0
,// more values than paints so map // multiple values to the same color,,,unknown,no,0
,// LINES VISIBLE,,,unknown,no,0
,// draw the blocks,,,unknown,no,0
,// otherwise look up the generator table,,,unknown,no,0
,// current data point...,,,unknown,no,0
,// TOOL TIP GENERATOR,,,unknown,no,0
,// URL GENERATOR,,,unknown,no,0
,// clip left and right bounds to data area,,,unknown,no,0
,// the bar is not visible,,,unknown,no,0
,// check the value we are plotting...,,,unknown,no,0
,// draw the bar...,,,unknown,no,0
,// ITEM LABEL GENERATOR,,,unknown,no,0
,// put an outline around the data area...,,,unknown,no,0
,"// return the generator for ALL series, if there is one...",,,unknown,no,0
,// highlight the background corners...,,,unknown,no,0
,// fill background...,,,unknown,no,0
,// submit the current data point as a crosshair candidate,,,unknown,no,0
,// set the default item label positions,,,unknown,no,0
,// previous data point...,,,unknown,no,0
,// draw the item label if there is one...,,,unknown,no,0
,"// if multiple axes are mapped, the first in the list should be // returned...",,,unknown,no,0
,// get the clipping values...,,,unknown,no,0
,"// return the generator for ALL series, if there is one...",,,unknown,no,0
,"// cases 5, 6, 7 and 8",,,unknown,no,0
,// current data point...,,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// otherwise look up the paint table,,,unknown,no,0
,// do nothing if both the line and shape are not visible,,,unknown,no,0
,// work out the label anchor point...,,,unknown,no,0
,"// fetch the series, remove the change listener, then remove the series.",,,unknown,no,0
,// put an outline around the data area...,,,unknown,no,0
,// nothing is drawn for null...,,,unknown,no,0
,// otherwise look up the generator table,,,unknown,no,0
,// value 0,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// otherwise look up the generator table,,,unknown,no,0
,// the first axis in the list is used for data <--> Java2D,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// find the serial index of the period specified by 'latest',,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// see comments about priority of // 10 in validateObject(),,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,"// getXxx() ftns can ignore the ""series"" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.",,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,//rangeGridlinePaint;,,,unknown,no,0
,// check if there are any values earlier than specified by the history // count...,,,unknown,no,0
,// figure out if we need to iterate through all the y-values // to find the revised minY / maxY,,,unknown,no,0
,// labelFont,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// check if this addition will exceed the maximum item count...,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// won't get here...,,,unknown,no,0
,// we are at the last minute in the hour...,,,unknown,no,0
,// remove old items and notify if necessary,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// update the min value,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// Tell the listeners a new table has arrived.,,,unknown,no,0
,// iterate over all data items and update mins and maxes,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,"// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...",,,unknown,no,0
,// update cached range values,,,unknown,no,0
,// defer null argument checks,,,unknown,no,0
,// we are at the first hour in the day...,,,unknown,no,0
,// if the hour is 0 - 23 then create an hour,,,unknown,no,0
,// start is after last data item,,,unknown,no,0
,// create an array holding the group indices for each series...,,,unknown,no,0
,// handle special case of BoxAndWhiskerXYDataset,,,unknown,no,0
,// Methods for managing the FIFO's:,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,"//{ // deep copy from values[], caller // can safely discard that array",,,unknown,no,0
,// work out the minimum value...,,,unknown,no,0
,///  .. etc....,,,unknown,no,0
,/// Expand the following for all defined TimePeriods:,,,unknown,no,0
,// Avoid IndexOutOfBoundsException:,,,unknown,no,0
,//},,,unknown,no,0
,// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection,,,unknown,no,0
,"// hasn't implemented RangeInfo, so we'll have to iterate...",,,unknown,no,0
,"// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...",,,unknown,no,0
,//},,,unknown,no,0
,// minimumArcAngleToDraw,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,"// But if that series array already exists, just overwrite its contents //synchronized(this) //{",,,unknown,no,0
,// properties // save // print // zoom // tooltips,,,unknown,no,0
,// properties // save // print // zoom // tooltips,,,unknown,no,0
,// remaining lines contain a row key and data values,,,unknown,no,0
,// create the year...,,,unknown,no,0
,"// But if that series array already exists, just overwrite its contents",,,unknown,no,0
,// autoinit's to null.,,,unknown,no,0
,// default value;,,,unknown,no,0
,// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------,,,unknown,no,0
,// CASE 1 : Comparing to another Year object // -----------------------------------------,,,unknown,no,0
,// parse the string...,,,unknown,no,0
,// an arbitrary safe default value,,,unknown,no,0
,// CASE 1 : Comparing to another Hour object // -----------------------------------------,,,unknown,no,0
,// update the time series appropriately,,,unknown,no,0
,// we are at the last hour in the day...,,,unknown,no,0
,// iterate over all data items and update mins and maxes,,,unknown,no,0
,// check for zero pivot element,,,unknown,no,0
,// treat nulls the same as NaNs,,,unknown,no,0
,// add the series...,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// check for bounds interval that includes 1,,,unknown,no,0
,"// '+', remember value is negative",,,unknown,no,0
,"// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...",,,unknown,no,0
,// spanning match,,,unknown,no,0
,// no crossing of x,,,unknown,no,0
,// overridden to make public,,,unknown,no,0
,"// '+', remember value is negative",,,unknown,no,0
,// delegate null check on dataset,,,unknown,no,0
,// exact match,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// exact match on first item,,,unknown,no,0
,// Are we working with a time series.,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// maps our series into our parent's,,,unknown,no,0
,"// Might need to add, to free memory from any previous result sets",,,unknown,no,0
,// minimum and maximum for each group...,,,unknown,no,0
,// work out the minimum value...,,,unknown,no,0
,// work out the minimum value...,,,unknown,no,0
,"// hasn't implemented RangeInfo, so we'll have to iterate...",,,unknown,no,0
,// no new methods,,,unknown,no,0
,// standard case - plain XYDataset,,,unknown,no,0
,"// if the dataset implements DomainInfo, life is easy",,,unknown,no,0
,"// if the dataset implements DomainInfo, life is easy",,,unknown,no,0
,// handle special case of IntervalXYDataset,,,unknown,no,0
,// handle special case of IntervalXYDataset,,,unknown,no,0
,// handle three cases by dataset type,,,unknown,no,0
,// no new methods,,,unknown,no,0
,// handle special case of IntervalXYDataset,,,unknown,no,0
,// handle special case of OHLCDataset,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// no new methods added.,,,unknown,no,0
,// calculate the sum and count,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// intercept,,,unknown,no,0
,// defer null argument checks,,,unknown,no,0
,// update cached min and max values,,,unknown,no,0
,// update the cached range values...,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,"// sum of x, x^2, x * y, y",,,unknown,no,0
,// pass values to other constructor,,,unknown,no,0
,// Get all rows. // rows = new ArrayList();,,,unknown,no,0
,/// Determine max and min values.,,,unknown,no,0
,/// First column is X data,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// fill the bins,,,unknown,no,0
,"// first field is ignored, since // column 0 is for row keys",,,unknown,no,0
,// defer null argument check,,,unknown,no,0
,// pretty sure this shouldn't ever happen,,,unknown,no,0
,// no new methods required,,,unknown,no,0
,// lower bounds are the same,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// defer null argument check,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// suppress (value defaults to null),,,unknown,no,0
,// remaining fields contain values,,,unknown,no,0
,// first column contains the row key...,,,unknown,no,0
,// first line contains column keys,,,unknown,no,0
,// update the max value,,,unknown,no,0
,// Remove any previous old data,,,unknown,no,0
,"// not a value, can't use it (defaults to null)",,,unknown,no,0
,"// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this",,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// a Long kept updated by advanceTime(),,,unknown,no,0
,// else  [implicit here],,,unknown,no,0
,// check arguments...,,,unknown,no,0
,// try a null dataset - should return a null range,,,unknown,no,0
,// false preserves the old behaviour // prior to introducing this flag,,,unknown,no,0
,// Remove all the series from the collection and notify listeners.,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// yHigh,,,unknown,no,0
,// add a new series,,,unknown,no,0
,// need to configure the intervalDelegate to match the original,,,unknown,no,0
,// check arguments...delegated,,,unknown,no,0
,// check arguments...delegated,,,unknown,no,0
,// we need to guard against this.zoomPoint being null,,,unknown,no,0
,// Remove all the series from the collection and notify listeners.,,,unknown,no,0
,// check if the new series name already exists for another series,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,"// fetch the series, remove the change listener, then remove the series.",,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// verify attributes set during object construction,,,unknown,no,0
,// fillPaint,,,unknown,no,0
,// handle special case of OHLCDataset,,,unknown,no,0
,// we can't be sure of the order,,,unknown,no,0
,// fillPaint,,,unknown,no,0
,// remove all the series from the collection and notify listeners.,,,unknown,no,0
,"// if it is not the series name, then we have no interest",,,unknown,no,0
,/* shape visible = */,,,unknown,no,0
,// ignore,,,unknown,no,0
,//private Comparable key;,,,unknown,no,0
,//this.key = null;,,,unknown,no,0
,// no attributes to read,,,unknown,no,0
,//  wipe the next (about to be used) set of data slots,,,unknown,no,0
,// now it is trickier to determine if the month or year is first,,,unknown,no,0
,// replace an existing series,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,"// all arrays equal length, // so ignore argument:",,,unknown,no,0
,// null is ignored,,,unknown,no,0
,// stop listening for changes to the existing chart,,,unknown,no,0
,// try a class that isn't a listener,,,unknown,no,0
,// add the new chart,,,unknown,no,0
,// figure out if we need to iterate through all the y-values,,,unknown,no,0
,// figure out if we need to iterate through all the y-values,,,unknown,no,0
,"// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.",,,unknown,no,0
,// all series have the same number of items in // this dataset,,,unknown,no,0
,// this.x is not allowed to be null...,,,unknown,no,0
,// are we using the chart buffer?,,,unknown,no,0
,// add a new series,,,unknown,no,0
,// add a new series,,,unknown,no,0
,// replace an existing series,,,unknown,no,0
,// need to configure the intervalDelegate to match the original,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// sectionOutlinesVisible,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// check if this addition will exceed the maximum item count...,,,unknown,no,0
,"// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.",,,unknown,no,0
,"// to be defensive, let's check that the source series does in fact // belong to this collection",,,unknown,no,0
,// Unregister the collection as a change listener to each series in // the collection.,,,unknown,no,0
,// selected rectangle shouldn't extend outside the data area...,,,unknown,no,0
,// check arguments...,,,unknown,no,0
,// won't get here...,,,unknown,no,0
,// need to make sure we are adding *after* any duplicates,,,unknown,no,0
,// Remove all the series from the collection and notify listeners.,,,unknown,no,0
,// CASE 2 : Comparing to a general object // ---------------------------------------------,,,unknown,no,0
,// check a series with three items,,,unknown,no,0
,// ignore,,,unknown,no,0
,// TBLRC // 10001 - top and center only,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// --- DEPRECATED METHODS -------------------------------------------------,,,unknown,no,0
,// CASE 1 : Comparing to another Month object // --------------------------------------------,,,unknown,no,0
,// no translation needed,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,"// replace any / , or - with a space",,,unknown,no,0
,"// do nothing, so null is returned",,,unknown,no,0
,// NULL value -> insert point on base line // instead of 'step point',,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,"// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)",,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,// remove all the series from the collection and notify listeners.,,,unknown,no,0
,// CASE 1 : Comparing to another Quarter object // --------------------------------------------,,,unknown,no,0
,"// Don't synchronize this!! // Instead, synchronize the loop that calls it.",,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,// we need to guard against this.zoomPoint being null,,,unknown,no,0
,// find the Q and the integer following it (remove both from the // string)...,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// CASE 2 : Comparing to a general object // ---------------------------------------------,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// ignore,,,unknown,no,0
,// parse the string...,,,unknown,no,0
,"// check whether the ""valueHistory"" array member exists; if not, // create them:",,,unknown,no,0
,// do we need to redraw the buffer?,,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,// try a null argument,,,unknown,no,0
,// Update the domain limits: //(time is kept in msec),,,unknown,no,0
,"// index to select the ""series""",,,unknown,no,0
,"// Now advance ""oldestAt"", wrapping at end of the array",,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// a Long kept updated by advanceTime(),,,unknown,no,0
,"// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:",,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// Update the array of TimePeriods:,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,//axisOffset;,,,unknown,no,0
,// trim whitespace from either end of the string,,,unknown,no,0
,// suppress,,,unknown,no,0
,// trim whitespace from either end of the string,,,unknown,no,0
,// suppress,,,unknown,no,0
,// CASE 1 : Comparing to another Week object // --------------------------------------------,,,unknown,no,0
,// argument checking delegated...,,,unknown,no,0
,// create the chart...,,,unknown,no,0
,// check an empty dataset,,,unknown,no,0
,// won't get here...,,,unknown,no,0
,// suppress,,,unknown,no,0
,// check arguments...delegated // fetch the series name...,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// consider time periods to be ordered after general objects,,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// suppresses compiler warning,,,unknown,no,0
,"// if it is not the series name, then we have no interest",,,unknown,no,0
,"// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see ""xx"" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //",,,unknown,no,0
,// more difficult case - evaluate later...,,,unknown,no,0
,// CASE 1 : Comparing to another Second object // -------------------------------------------,,,unknown,no,0
,// remove all the series from the collection and notify listeners.,,,unknown,no,0
,// check if the new series name already exists for another series,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,"// to be defensive, let's check that the source series does in fact // belong to this collection",,,unknown,no,0
,// we need to work out if the previous year has 52 or 53 weeks...,,,unknown,no,0
,// CASE 1 : Comparing to another Day object // ----------------------------------------,,,unknown,no,0
,// handle the special case where the dataset has y-intervals that // we want to measure,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// we need at least 3 points to spline. Draw simple line // for two points,,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,"// If null, don't draw line at all",,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,"//initalize xValues, yValues, and zValues arrays.",,,unknown,no,0
,// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made,,,unknown,no,0
,"// If null, don't draw line => then delegate to parent",,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------,,,unknown,no,0
,// calculate the highest volume in the dataset...,,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,"// as a special case, if the bar colour has alpha == 0, we draw // nothing.",,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,// draw the error bar for the y-interval,,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,// minuend needs to be fast forwarded,,,unknown,no,0
,// draw yOutliers,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// draw farout,,,unknown,no,0
,// draw average - SPECIAL AIMS REQUIREMENT,,,unknown,no,0
,// here we check that the average marker will in fact be visible // before drawing it...,,,unknown,no,0
,"// yOutliers can be null, but we'd prefer it to be an empty list in // that case...",,,unknown,no,0
,// draw the body,,,unknown,no,0
,// get the previous data point...,,,unknown,no,0
,// draw the lower shadow,,,unknown,no,0
,// should not get here,,,unknown,no,0
,// Now split the segment as needed,,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,//  Fill the polygon,,,unknown,no,0
,"// first pass draws the background (lines, for instance)",,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// draw the upper shadow,,,unknown,no,0
,// PlotOrientation.HORIZONTAL,,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,// draw the error bar for the x-interval,,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,// work out the label anchor point...,,,unknown,no,0
,// don't bother with parsing,,,unknown,no,0
,// update the crosshair point,,,unknown,no,0
,// RIGHT POLYGON,,,unknown,no,0
,// handle negative value,,,unknown,no,0
,// clip left and right bounds to data area,,,unknown,no,0
,// LEFT POLYGON,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// handle positive value,,,unknown,no,0
,// check independence,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// baseSeriesVisibleInLegend,,,unknown,no,0
,// we didn't find the key,,,unknown,no,0
,// argument checking delegated...,,,unknown,no,0
,// RIGHT POLYGON,,,unknown,no,0
,// draw path,,,unknown,no,0
,// check independence,,,unknown,no,0
,"// handle item label drawing, now that we know all the bars have // been drawn...",,,unknown,no,0
,// no need to instantiate this class   ,,,unknown,no,0
,// no new methods,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,"// set the default item label positions, which will only be used if // the user requests visible item labels...",,,unknown,no,0
,//domainGridlinePaint;,,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,// include the interval if there is one,,,unknown,no,0
,// include the interval if there is one,,,unknown,no,0
,"// transpose the dimensions, because the title is rotated",,,unknown,no,0
,// update path to reflect latest point,,,unknown,no,0
,"// if this is the last item, draw the path ...",,,unknown,no,0
,// this method must be overridden if you want to display images,,,unknown,no,0
,// draw the upper shadow,,,unknown,no,0
,// draw the lower shadow,,,unknown,no,0
,"// now draw the outlines, if visible...",,,unknown,no,0
,// draw the item label if there is one...,,,unknown,no,0
,// check independence,,,unknown,no,0
,// calculate the step point,,,unknown,no,0
,// get the previous data point...,,,unknown,no,0
,"// Add each point to Area (x, y)",,,unknown,no,0
,// no fields to compute...,,,unknown,no,0
,// check independence,,,unknown,no,0
,"// 'plot' : just retain reference, not a deep copy",,,unknown,no,0
,// map a key to the default group,,,unknown,no,0
,// should never get here,,,unknown,no,0
,// reset points vector,,,unknown,no,0
,/*      factorization and forward substitution */,,,unknown,no,0
,// now draw the real shape,,,unknown,no,0
,// just the domain axis...,,,unknown,no,0
,// fill under the curve...,,,unknown,no,0
,// this represents the situation // for drawing a horizontal bar.,,,unknown,no,0
,// then draw the line...,,,unknown,no,0
,// just the range axis...,,,unknown,no,0
,// force a redraw,,,unknown,no,0
,// update path to reflect latest point,,,unknown,no,0
,// name,,,unknown,no,0
,// get the label position..,,,unknown,no,0
,// check independence,,,unknown,no,0
,// draw an outline around the Area.,,,unknown,no,0
,// dial background paint,,,unknown,no,0
,"// return the generator for ALL series, if there is one...",,,unknown,no,0
,// both axes,,,unknown,no,0
,// note that a[0]=a[np-1]=0,,,unknown,no,0
,// we're running on JRE 1.3.1 so this is the best we have...,,,unknown,no,0
,// ITEM LABEL GENERATOR,,,unknown,no,0
,//this handles the need to perform a 'step'.,,,unknown,no,0
,// vertical orientation,,,unknown,no,0
,// only draw a line if the gap between the current and // previous data point is within the threshold,,,unknown,no,0
,// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart,,,unknown,no,0
,// draw path,,,unknown,no,0
,// draw the body,,,unknown,no,0
,// labelFont,,,unknown,no,0
,"// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...",,,unknown,no,0
,// check a series with one item,,,unknown,no,0
,// paint,,,unknown,no,0
,"// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow",,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// TOOL TIP GENERATOR,,,unknown,no,0
,// draw the item label if there is one...,,,unknown,no,0
,// need to make sure we are adding *after* any duplicates,,,unknown,no,0
,// update the max value,,,unknown,no,0
,// here we use BooleanUtilities to remain compatible with JDKs < 1.4,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// no change,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,"// the first point is (x, 0)",,,unknown,no,0
,// a new map always has 1 group (the default group),,,unknown,no,0
,// clip top and bottom bounds to data area,,,unknown,no,0
,// check independence,,,unknown,no,0
,// check independence,,,unknown,no,0
,// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.,,,unknown,no,0
,"// return the overall setting, if there is one...",,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,// otherwise look up the paint table,,,unknown,no,0
,// SHAPES FILLED,,,unknown,no,0
,// create a new area polygon for the series,,,unknown,no,0
,// check independence,,,unknown,no,0
,// submit this data item as a candidate for the crosshair point,,,unknown,no,0
,//this handles the need to perform a 'step'. // calculate the step point,,,unknown,no,0
,// clip top and bottom bounds to data area,,,unknown,no,0
,/* Number n = */,,,unknown,no,0
,// don't bother with parsing,,,unknown,no,0
,// handle the special case where the dataset has y-intervals that // we want to measure,,,unknown,no,0
,// scale by the inverse of distance^power,,,unknown,no,0
,// store Number as Double,,,unknown,no,0
,// defer null argument check,,,unknown,no,0
,//step through all the values and add them to the hash,,,unknown,no,0
,// we didn't find the key,,,unknown,no,0
,// is the category valid?,,,unknown,no,0
,// update the data...,,,unknown,no,0
,// does the series exist?,,,unknown,no,0
,// check independence,,,unknown,no,0
,// update the data...,,,unknown,no,0
,// check arguments...,,,unknown,no,0
,// fetch the value...,,,unknown,no,0
,"// Find min, max for the x and y axes",,,unknown,no,0
,// does the series exist?,,,unknown,no,0
,// Map the nongrid data into the new regular grid,,,unknown,no,0
,// if d is real small set the inverse to a large number // to avoid INF,,,unknown,no,0
,// no new methods required,,,unknown,no,0
,"// for the keys, a shallow copy should be fine because keys // should be immutable...",,,unknown,no,0
,/* Placeholder */,,,unknown,no,0
,//int columnIndex = getColumnIndex(columnKey);,,,unknown,no,0
,//  Check the file exists,,,unknown,no,0
,// but the row data requires a deep copy,,,unknown,no,0
,// 1. check whether the row is now empty.,,,unknown,no,0
,// 1. check whether the row is now empty.,,,unknown,no,0
,// this will include the case where the underlying dataset is null,,,unknown,no,0
,// 2. check whether the column is now empty.,,,unknown,no,0
,// consider these to be ordered after general objects,,,unknown,no,0
,/**/,,,unknown,no,0
,// check that the column key is defined in the 2D structure,,,unknown,no,0
,// check independence,,,unknown,no,0
,// handle the special case where the dataset has y-intervals that // we want to measure,,,unknown,no,0
,// START: check d0 and d1,,,unknown,no,0
,// check independence,,,unknown,no,0
,// now try to instantiate this ;-),,,unknown,no,0
,// create the temporary directory if it doesn't exist,,,unknown,no,0
,// draw the lower shadow,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// handle the standard case (plain CategoryDataset),,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// handle the standard case (plain CategoryDataset),,,unknown,no,0
,// we'll set this to false if there is at // least one non-null data item...,,,unknown,no,0
,// update the min value,,,unknown,no,0
,/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,"// if the dataset implements DomainInfo, life is easier",,,unknown,no,0
,// check independence,,,unknown,no,0
,//  Add key to dataset,,,unknown,no,0
,//  Add other category if applicable,,,unknown,no,0
,//  Do not add key to dataset,,,unknown,no,0
,// Determine the cell size,,,unknown,no,0
,// no new methods required,,,unknown,no,0
,"// fetch the series, remove the change listener, then remove the series.",,,unknown,no,0
,// look for any keys that we don't already know about...,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// get the data point...,,,unknown,no,0
,// store y and z axes // as Doubles,,,unknown,no,0
,// already know 'a' isn't null,,,unknown,no,0
,//store index where new //column starts,,,unknown,no,0
,// no additional methods required,,,unknown,no,0
,// set x to most recent value,,,unknown,no,0
,// remove all the series from the collection and notify listeners.,,,unknown,no,0
,//store data as Long,,,unknown,no,0
,"// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...",,,unknown,no,0
,//remove distance of the sum,,,unknown,no,0
,// defer null argument check,,,unknown,no,0
,// check independence,,,unknown,no,0
,//  Get series Paint and Stroke,,,unknown,no,0
,// suppress compiler warning,,,unknown,no,0
,//reserve variables to store the coordinates of the resulting GradientPaint,,,unknown,no,0
,"// second point is outside, so we update it against one of the // four sides then continue",,,unknown,no,0
,/**/,,,unknown,no,0
,"// transpose the dimensions, because the title is rotated",,,unknown,no,0
,"// first point is outside, so we update it against one of the // four sides then continue",,,unknown,no,0
,// check independence,,,unknown,no,0
,// get the lastest pixel,,,unknown,no,0
,// don't bother with parsing,,,unknown,no,0
,/**/,,,unknown,no,0
,// this includes the case where the underlying dataset is null,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,// determine the space required for the axis,,,unknown,no,0
,// svgClass will be null so the function will return false,,,unknown,no,0
,// suppress compiler warning,,,unknown,no,0
,// check independence,,,unknown,no,0
,//  Set HTTP headers,,,unknown,no,0
,"//  Replace "".."" with """" //  This is to prevent access to the rest of the file system",,,unknown,no,0
,//  Serve it up,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,// draw the body,,,unknown,no,0
,//  Add chart to deletion list in session,,,unknown,no,0
,// RectangleInsets is immutable => same reference in clone OK,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// this won't happen :),,,unknown,no,0
,// pdfDocument class will be null so the function will return false,,,unknown,no,0
,// draw the upper shadow,,,unknown,no,0
,// basic check for independence,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// --- DEPRECATED CODE ----------------------------------------------------,,,unknown,no,0
,// Red // Green // Blue,,,unknown,no,0
,// ALWAYS null,,,unknown,no,0
,// check independence,,,unknown,no,0
,// substract the oldest pixel from the sum,,,unknown,no,0
,// check independence,,,unknown,no,0
,"// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already",,,unknown,no,0
,// horizontal pass,,,unknown,no,0
,// check independence,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,"// it is too slow to look at every data item, so let's just look at // the first, middle and last items...",,,unknown,no,0
,//start point is lower left right corner --> diagonal gradient,,,unknown,no,0
,// delegate argument checking to XYDataItem...,,,unknown,no,0
,// check independence,,,unknown,no,0
,/* (pix-buffer is large enough for all pixels of one row) */,,,unknown,no,0
,// check independence,,,unknown,no,0
,// check independence,,,unknown,no,0
,// check independence,,,unknown,no,0
,//start point is upper left corner,,,unknown,no,0
,// get the lastest pixel,,,unknown,no,0
,// check independence,,,unknown,no,0
,// substract the oldest pixel from the sum,,,unknown,no,0
,// vertical pass,,,unknown,no,0
,"// all methods are static, no need to instantiate",,,unknown,no,0
,// check independence,,,unknown,no,0
,// substitute the filtered URL list,,,unknown,no,0
,// adjust text bounds to match string position,,,unknown,no,0
,// check independence,,,unknown,no,0
,//get the coordinates of the shape that is to be filled,,,unknown,no,0
,/* Ignore alpha-channel -> */,,,unknown,no,0
,"/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */",,,unknown,no,0
,// <- this is the code that actually COPIES the pixels,,,unknown,no,0
,// check independence,,,unknown,no,0
,// RGB (+ optional Alpha which we leave // unchanged),,,unknown,no,0
,// Red // Green // Blue. Now map computed colour to // nearest in Palette...,,,unknown,no,0
,// draw range crosshair if required...,,,unknown,no,0
,// add domain axes to lists...,,,unknown,no,0
,// deregister the collection as a change listener to each series in // the collection.,,,unknown,no,0
,/* shape outlined = */,,,unknown,no,0
,// process all range axes,,,unknown,no,0
,/* line visible */,,,unknown,no,0
,/* line visible */,,,unknown,no,0
,/* shape outlined */,,,unknown,no,0
,/* shape outlined = */,,,unknown,no,0
,/* shape outlined = */,,,unknown,no,0
,/* line visible = */,,,unknown,no,0
,// here we check that the average marker will in fact be visible // before drawing it...,,,unknown,no,0
,/* shape outlined = */,,,unknown,no,0
,// now try to reject equality...,,,unknown,no,0
,/* line visible = */,,,unknown,no,0
,//subtitlePaint;,,,unknown,no,0
,// negativeItemLabelPositionList;,,,unknown,no,0
,// process all range axes,,,unknown,no,0
,// backgroundImage,,,unknown,no,0
,// set a custom background for the chart,,,unknown,no,0
,// range markers - no longer separate fields but test anyway...,,,unknown,no,0
,// draw the bottom circle,,,unknown,no,0
,// reserve space for the primary domain axis...,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// OK,,,unknown,no,0
,// process all renderers,,,unknown,no,0
,"//SerialUtilities.writeImage(this.image, stream);",,,unknown,no,0
,/* BufferedImage img =*/,,,unknown,no,0
,// ITEM URL GENERATOR,,,unknown,no,0
,// rangeCrosshairPaint,,,unknown,no,0
,"// FIXME: add setBasePaint(int, Paint, boolean)?",,,unknown,no,0
,// draw outliers,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// rangeCrosshairPaint,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// calculate the bar width,,,unknown,no,0
,// -------------------------- // --- ChartPanel Methods --- // --------------------------,,,unknown,no,0
,// work out if scaling is required...,,,unknown,no,0
,// process all annotations,,,unknown,no,0
,// register as a listener with sub-components...,,,unknown,no,0
,// seem to be the same...,,,unknown,no,0
,"// for efficiency, we just use the first, last and middle items to // compute a hashCode...",,,unknown,no,0
,// clear the section attributes so that the theme's DrawingSupplier // will be used,,,unknown,no,0
,// added the following hint because of  // http://stackoverflow.com/questions/7785082/,,,unknown,no,0
,// this fires a ChartChangeEvent,,,unknown,no,0
,//  StatisticalBarRenderer,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,// BarRenderer3D,,,unknown,no,0
,// MinMaxCategoryRenderer,,,unknown,no,0
,// LineRenderer3D,,,unknown,no,0
,"/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */",,,unknown,no,0
,// process all renderers,,,unknown,no,0
,// by default the outline and background won't be visible,,,unknown,no,0
,/* line visible = */,,,unknown,no,0
,"// add the chart title, if one has been specified...",,,unknown,no,0
,"// a list to store the series index and bar region, so we can draw // all the labels at the end...",,,unknown,no,0
,// test 3...,,,unknown,no,0
,// do nothing at all,,,unknown,no,0
,// ---------------------- // --- Public Methods --- // ----------------------,,,unknown,no,0
,// process all domain axes,,,unknown,no,0
,// wait till we are at the last item for the row then draw the // whole stack at once,,,unknown,no,0
,// shape,,,unknown,no,0
,// Cycle when necessary,,,unknown,no,0
,"// this is not one of our included segment, skip it",,,unknown,no,0
,// process all domain axes,,,unknown,no,0
,// ----------------- // --- Constants --- // -----------------,,,unknown,no,0
,/* line visible = */,,,unknown,no,0
,// ------------------------ // --- Member Variables --- // ------------------------,,,unknown,no,0
,// check that the listener lists are independent,,,unknown,no,0
,// anti-aliasing,,,unknown,no,0
,// backgroundImageAlignment,,,unknown,no,0
,// separatorStroke,,,unknown,no,0
,// chart title,,,unknown,no,0
,// data,,,unknown,no,0
,// add a series,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,// rangeAxis - no longer a separate field but test anyway...,,,unknown,no,0
,// data,,,unknown,no,0
,// defer null argument check,,,unknown,no,0
,"// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...",,,unknown,no,0
,// xLow,,,unknown,no,0
,// defer null argument check,,,unknown,no,0
,// y,,,unknown,no,0
,// check null key,,,unknown,no,0
,/*Comparable k =*/,,,unknown,no,0
,// sectionDepth,,,unknown,no,0
,"// TBLRC // 10101 - top, left and center",,,unknown,no,0
,//extraLargeFont,,,unknown,no,0
,//private double arrowWidth;,,,unknown,no,0
,//itemLabelPaint;,,,unknown,no,0
,// test independence,,,unknown,no,0
,// create the chart...,,,unknown,no,0
,// domainAxis - no longer a separate field but test anyway...,,,unknown,no,0
,// shapeFilled,,,unknown,no,0
,//axis3.setPositiveArrowVisible(true);,,,unknown,no,0
,"// for value in bounds, do the lookup...",,,unknown,no,0
,// AXIS 2,,,unknown,no,0
,//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);,,,unknown,no,0
,// check that minItem limit is observed,,,unknown,no,0
,// skip if chart is null,,,unknown,no,0
,//assert itemIndex >= 0 && itemIndex < getItemCount();,,,unknown,no,0
,// check that minItem limit is observed,,,unknown,no,0
,/**/,,,unknown,no,0
,/**/,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,// there should be no change event when clearing an empty series,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,// do nothing,,,unknown,no,0
,// include legend,,,unknown,no,0
,// tick label font...,,,unknown,no,0
,// TBLRC // 01111,,,unknown,no,0
,"// add a second dataset, plotted against a second axis",,,unknown,no,0
,// TBLRC // 11101,,,unknown,no,0
,// tick marks visible flag...,,,unknown,no,0
,// check a series with four items,,,unknown,no,0
,// check a series with repeating items,,,unknown,no,0
,// anchorValue,,,unknown,no,0
,// clean up,,,unknown,no,0
,//titlePaint;,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,// renderer - no longer a separate field but test anyway...,,,unknown,no,0
,//regularFont;,,,unknown,no,0
,// column keys...,,,unknown,no,0
,// rangeGridlinePaint,,,unknown,no,0
,"// get the previous point and the next point so we can calculate a // ""hot spot"" for the area (used by the chart entity)...",,,unknown,no,0
,// domainGridlinePosition,,,unknown,no,0
,// check for series key out of bounds,,,unknown,no,0
,// allowDuplicateValues,,,unknown,no,0
,// set up the series names...,,,unknown,no,0
,// domainGridlinesVisible,,,unknown,no,0
,//largeFont,,,unknown,no,0
,// create the chart...,,,unknown,no,0
,// new entity code,,,unknown,no,0
,// padding,,,unknown,no,0
,"// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.",,,unknown,no,0
,"// if the flag is being set to true, there may be queued up changes...",,,unknown,no,0
,"// for efficiency, we just use the first, last and middle items to // compute a hashCode...",,,unknown,no,0
,// draw the title and subtitles...,,,unknown,no,0
,// seems to be the same...,,,unknown,no,0
,//get upper bound value,,,unknown,no,0
,//no tick label to be shown,,,unknown,no,0
,//not small log values in use; allow for values <= 0 //if did zero tick last iter then,,,unknown,no,0
,"//strict flag set, allow-negatives not set and values <= 0",,,unknown,no,0
,//get absolute value of log10 value,,,unknown,no,0
,//apply lower margin by decreasing lower bound:,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,//actual data is present //get lower bound value,,,unknown,no,0
,//parameter value is <= 0 //use as-is,,,unknown,no,0
,//need to account for case where upper==0.0,,,unknown,no,0
,//no real data present,,,unknown,no,0
,//setup flag based on bounds values,,,unknown,no,0
,//parameter value is < -10 //calculate log using positive value:,,,unknown,no,0
,//parameter value is -10 > val < 10 //use as-is,,,unknown,no,0
,// now try to reject equality,,,unknown,no,0
,// draw the tick marks and labels...,,,unknown,no,0
,//calculate floor using negative value:,,,unknown,no,0
,"//setup for ""1e#""-style tick labels or regular // numeric tick labels, depending on flag:",,,unknown,no,0
,// if < 10 then //increase so 0 translates to 0,,,unknown,no,0
,//parameter value is -10 > val < 10 //use as-is,,,unknown,no,0
,//get lower bound value:,,,unknown,no,0
,//calculate ceil using negative value:,,,unknown,no,0
,//invert adjustLog10,,,unknown,no,0
,//return value; negate if original value was negative:,,,unknown,no,0
,"// displayStart > displayEnd, need to handle split",,,unknown,no,0
,// test 3...,,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,// ensure the autorange is at least <minRange> in size...,,,unknown,no,0
,// calculate the max size of the tick labels (if visible)...,,,unknown,no,0
,"// if autoRange is true, then the current range is irrelevant",,,unknown,no,0
,//create tick label (force use of fmt obj):,,,unknown,no,0
,//create tick label:,,,unknown,no,0
,// work out the trailing gap,,,unknown,no,0
,// if past highest data value then exit // method,,,unknown,no,0
,// milliseconds,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,"//create ""log10""-type label",,,unknown,no,0
,//first or last tick on graph or value is 1.0 //create label for tick:,,,unknown,no,0
,//decrement to do 1.0 tick now,,,unknown,no,0
,// check the new minimum date relative to the current maximum date,,,unknown,no,0
,// BOTTOM,,,unknown,no,0
,"//create ""1e#""-type label",,,unknown,no,0
,//tick value not below lowest data value,,,unknown,no,0
,// ITEM_LABEL_PAINT,,,unknown,no,0
,//get lower bound value,,,unknown,no,0
,//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):,,,unknown,no,0
,"//if flag then //create ""1e#""-type label",,,unknown,no,0
,//negative exponent; create fractional value //set exact number of fractional digits to // be shown:,,,unknown,no,0
,//tick value not below lowest data value,,,unknown,no,0
,//for each tick to be displayed,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,//for each tick with a label to be displayed,,,unknown,no,0
,//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:,,,unknown,no,0
,// did not do zero tick last iteration,,,unknown,no,0
,//small log values in use,,,unknown,no,0
,//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,//for each tick to be displayed,,,unknown,no,0
,//get log10 version of upper bound and round to integer:,,,unknown,no,0
,"//not ""log10""-type label",,,unknown,no,0
,"//not ""1e#""-type label // if positive exponent then // make integer",,,unknown,no,0
,//get log10 version of lower bound and round to integer:,,,unknown,no,0
,//get lower bound value:,,,unknown,no,0
,//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):,,,unknown,no,0
,"// if the axis is not visible, no additional space is required...",,,unknown,no,0
,// draw the arrow...,,,unknown,no,0
,// ensure no drawing occurs outside chart area...,,,unknown,no,0
,// seem to be the same,,,unknown,no,0
,"// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label",,,unknown,no,0
,// handle axis trace,,,unknown,no,0
,// add minor ticks (for gridlines),,,unknown,no,0
,//for each power of 10 value; create ten ticks,,,unknown,no,0
,// column keys...,,,unknown,no,0
,// PlotOrientation.HORIZONTAL,,,unknown,no,0
,// baseCreateEntities;,,,unknown,no,0
,"// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:",,,unknown,no,0
,// compute transform matrix elements via sample points. Assume no // rotation or shear.,,,unknown,no,0
,// baseNegativeItemLabelPosition;,,,unknown,no,0
,// seem to be the same,,,unknown,no,0
,//  create transform & transform shape,,,unknown,no,0
,// create dataset 1...,,,unknown,no,0
,// create plot ...,,,unknown,no,0
,// add a second dataset and renderer...,,,unknown,no,0
,"// if the axis is not visible, don't draw it...",,,unknown,no,0
,//this.image = SerialUtilities.readImage(stream);,,,unknown,no,0
,// return a new chart containing the overlaid plot...,,,unknown,no,0
,// seems to be the same...,,,unknown,no,0
,// now try to reject equality...,,,unknown,no,0
,"// if we don't have at least 2 (x, y) coordinates, just return",,,unknown,no,0
,// now try to reject equality,,,unknown,no,0
,// seem to be the same,,,unknown,no,0
,// load only when required,,,unknown,no,0
,// use ImageIcon because it waits for the image to load...,,,unknown,no,0
,// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;,,,unknown,no,0
,// do not notify while zooming each axis,,,unknown,no,0
,//assert itemIndex >= 0 && itemIndex < getItemCount();,,,unknown,no,0
,// simple case,,,unknown,no,0
,// handle GradientPaint as a special case,,,unknown,no,0
,// ensure the autorange is at least <minRange> in size...,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,//setup number formatter obj,,,unknown,no,0
,"// displayStart > displayEnd, need to handle split",,,unknown,no,0
,// draw minor tick marks,,,unknown,no,0
,// work out the initial gap,,,unknown,no,0
,// legendTextPaint,,,unknown,no,0
,"// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...",,,unknown,no,0
,"// add space for the outer tick labels, if any...",,,unknown,no,0
,//setup number formatter obj,,,unknown,no,0
,// is the category valid?,,,unknown,no,0
,//get log10 version of upper bound and round to integer:,,,unknown,no,0
,"// if the axis has a fixed dimension, return it...",,,unknown,no,0
,"// no plot, no data",,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,"// no plot, no data.",,,unknown,no,0
,// get the axis label size and update the space object...,,,unknown,no,0
,"// if the axis has a fixed dimension, return it...",,,unknown,no,0
,// AXIS 4,,,unknown,no,0
,"// it is unlikely that 'state' will be null, but check anyway...",,,unknown,no,0
,// regular number axis,,,unknown,no,0
,// It's up to the plot which clones up to restore the correct references,,,unknown,no,0
,// draw the category labels and axis label,,,unknown,no,0
,// look at lower and upper bounds...,,,unknown,no,0
,// what is the available space for one unit?,,,unknown,no,0
,// there are no more candidates,,,unknown,no,0
,// bar is not visible,,,unknown,no,0
,// there are no more candidates,,,unknown,no,0
,// all tick labels have the same width (equal to the height of the // font)...,,,unknown,no,0
,// what is the available space for one unit?,,,unknown,no,0
,// regular number axis,,,unknown,no,0
,// select a tick unit that is the next one bigger than the current // (log) range divided by 50,,,unknown,no,0
,// or redrawing the chart every time...,,,unknown,no,0
,// tooltip format,,,unknown,no,0
,// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities,,,unknown,no,0
,//create tick object and add to list:,,,unknown,no,0
,"// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...",,,unknown,no,0
,// is there an override?,,,unknown,no,0
,// now check autoPopulate==true,,,unknown,no,0
,// test a default instance,,,unknown,no,0
,"// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left",,,unknown,no,0
,// these methods should throw an IndexOutOfBoundsException since the // column is too high...,,,unknown,no,0
,// range markers,,,unknown,no,0
,"// after clearing, reverts to // default group",,,unknown,no,0
,// get the x and y coordinates,,,unknown,no,0
,// nothing defined - do we autoPopulate?,,,unknown,no,0
,// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset,,,unknown,no,0
,// rangeZeroBaselineStroke,,,unknown,no,0
,// rangeZeroBaselinePaint,,,unknown,no,0
,// text,,,unknown,no,0
,// null argument check delegated...,,,unknown,no,0
,// tickLabelPaint,,,unknown,no,0
,// background paint,,,unknown,no,0
,"// now check that all datasets, renderers and axes are being listened // too...",,,unknown,no,0
,"// now check that all datasets, renderers and axes are being listened // too...",,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,"// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...",,,unknown,no,0
,// quadrant origin,,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// is there an override?,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,//private boolean autoTickUnitSelection;,,,unknown,no,0
,// data,,,unknown,no,0
,// seriesOutlineStroke,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// null argument check delegated...,,,unknown,no,0
,// null argument check delegated...,,,unknown,no,0
,// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.,,,unknown,no,0
,// get the source coordinate - this plot has always a VERTICAL // orientation,,,unknown,no,0
,// can't zoom domain axis,,,unknown,no,0
,// TBLRC // 01100,,,unknown,no,0
,// LEFT,,,unknown,no,0
,// no domain axis to zoom,,,unknown,no,0
,// find first Monday after 2001-01-01,,,unknown,no,0
,// PlotOrientation.VERTICAL,,,unknown,no,0
,// PlotOrientation.VERTICAL,,,unknown,no,0
,// PlotOrientation.VERTICAL,,,unknown,no,0
,// test monday though friday timeline,,,unknown,no,0
,// have to use a subclass of // AbstractRenderer,,,unknown,no,0
,// baseSeriesOutlinePaint,,,unknown,no,0
,// the above should cover all the options...,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// toolTipText,,,unknown,no,0
,// get the source coordinate - this plot has always a VERTICAL // orientation,,,unknown,no,0
,/*item = */,,,unknown,no,0
,// can't zoom domain axis,,,unknown,no,0
,// rotationAngle,,,unknown,no,0
,// range,,,unknown,no,0
,"// TBLRC // 01101 - bottom, left and center",,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// include legend // tooltips // urls,,,unknown,no,0
,"// no axis, no gridlines...",,,unknown,no,0
,// rotationAnchor,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// secondary range markers,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// create the new color and set it to the // SwtPaintCanvas,,,unknown,no,0
,// itemLabelGenerator,,,unknown,no,0
,// test 1...,,,unknown,no,0
,// the intersect is at the next point for both the minuend // and subtrahend,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,/* shape outlined = */,,,unknown,no,0
,// setGradientPaintTransformer(),,,unknown,no,0
,"// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?",,,unknown,no,0
,// errorStroke,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// add another value,,,unknown,no,0
,"// if the 'notify' flag has been switched to false, we don't notify // the listeners",,,unknown,no,0
,/** These constants control test cycles in the validateXXXX methods. */,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// labelPaint,,,unknown,no,0
,// default instances,,,unknown,no,0
,// starts at the back and finishes at the front // (wrapping the left side),,,unknown,no,0
,// the first initialization must precede creation of the ValueSet array: // establishes length of each array,,,unknown,no,0
,// positiveItemLabelPositionFallback,,,unknown,no,0
,// padding,,,unknown,no,0
,// CASE 1 : Comparing to another Second object // -------------------------------------------,,,unknown,no,0
,// add an empty series,,,unknown,no,0
,// positive paint,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// errorPaint,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.,,,unknown,no,0
,"// if the plot area is too small, just return...",,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// average radius // outlier radius,,,unknown,no,0
,"// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...",,,unknown,no,0
,// test 2...,,,unknown,no,0
,// draw outliers // outlier radius,,,unknown,no,0
,// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// labelLinkPaint,,,unknown,no,0
,//// ITEM LABEL PAINT  /////////////////////////////////////////////////////,,,unknown,no,0
,// textAnchor,,,unknown,no,0
,// try null calendar,,,unknown,no,0
,// paint,,,unknown,no,0
,// OPTIONAL CUSTOMISATION COMPLETED.,,,unknown,no,0
,// add an empty series,,,unknown,no,0
,"// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height",,,unknown,no,0
,"// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...",,,unknown,no,0
,// try a dataset with some content...,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,/*JFreeChart chart =*/,,,unknown,no,0
,// delegate 'info' and 'source' argument checks...,,,unknown,no,0
,// paintList,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// map,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// add a value,,,unknown,no,0
,// autoSort,,,unknown,no,0
,// autoSort,,,unknown,no,0
,// add another value,,,unknown,no,0
,//turn off anti-aliasing when filling rectangles,,,unknown,no,0
,//if less than 1.0 then make it 1.0 //add in margin and get exponential value:,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// add a value,,,unknown,no,0
,// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one,,,unknown,no,0
,// baseToolTipGenerator,,,unknown,no,0
,// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// standard case - plain XYDataset,,,unknown,no,0
,// stroke index,,,unknown,no,0
,// test empty series,,,unknown,no,0
,//},,,unknown,no,0
,// disable bar outlines...,,,unknown,no,0
,// new entity code,,,unknown,no,0
,// expected,,,unknown,no,0
,// expected,,,unknown,no,0
,// expected,,,unknown,no,0
,// expected,,,unknown,no,0
,// expected,,,unknown,no,0
,// open,,,unknown,no,0
,// ignoreZeroValues,,,unknown,no,0
,"/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */",,,unknown,no,0
,"/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */",,,unknown,no,0
,// expected,,,unknown,no,0
,// some setup...,,,unknown,no,0
,// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible,,,unknown,no,0
,// axisLinePaint,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,// expected,,,unknown,no,0
,// set axis bounds to be both greater than 1,,,unknown,no,0
,// tests with values,,,unknown,no,0
,// negativeArrowVisible;,,,unknown,no,0
,//private boolean autoRangeStickyZero;,,,unknown,no,0
,"// do nothing, override if necessary",,,unknown,no,0
,// tests with values,,,unknown,no,0
,// five dates to check...,,,unknown,no,0
,// row keys...,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,/* BufferedImage image = */,,,unknown,no,0
,"// ok, exception is expected",,,unknown,no,0
,// paint,,,unknown,no,0
,// do nothing,,,unknown,no,0
,// test 2...,,,unknown,no,0
,//TODO private boolean fillZoomRectangle = true;,,,unknown,no,0
,// Create the color-change dialog,,,unknown,no,0
,// add the insets,,,unknown,no,0
,// fast-forward through leading tails,,,unknown,no,0
,// higlight the background corners...,,,unknown,no,0
,// previous data point...,,,unknown,no,0
,// check retrieve value by key,,,unknown,no,0
,// work out the label anchor point...,,,unknown,no,0
,// check that a legend item needs to be displayed...,,,unknown,no,0
,// draw the outline...,,,unknown,no,0
,// calculate the maximum allowed candle width from the axis...,,,unknown,no,0
,// BAR Y,,,unknown,no,0
,// subtitle 1 is the legend,,,unknown,no,0
,// X,,,unknown,no,0
,// Y0,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,"// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow",,,unknown,no,0
,"// super.setSeriesPaint(series, paint);",,,unknown,no,0
,// TOP,,,unknown,no,0
,// OK,,,unknown,no,0
,// draw the markers...,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// swap rows and columns to match plotArea shape,,,unknown,no,0
,// DEPRECATED FIELDS AND METHODS...,,,unknown,no,0
,// use gradients and white borders for the section colours,,,unknown,no,0
,// use gradients and white borders for the section colours,,,unknown,no,0
,/* x-axis label*/,,,unknown,no,0
,// start new column,,,unknown,no,0
,"// width is OK, but height must be constrained",,,unknown,no,0
,// start new row,,,unknown,no,0
,//gets the outline stroke width of the plot,,,unknown,no,0
,// RIGHT,,,unknown,no,0
,// TOP,,,unknown,no,0
,// autoRangeMinimumSize,,,unknown,no,0
,// handle zoom box,,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// RIGHT,,,unknown,no,0
,// margin,,,unknown,no,0
,// y date format,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,// LEFT POLYGON,,,unknown,no,0
,// RIGHT,,,unknown,no,0
,// stroke,,,unknown,no,0
,// value 2,,,unknown,no,0
,// category 2,,,unknown,no,0
,// no domain axis to zoom,,,unknown,no,0
,// basePaint,,,unknown,no,0
,// correct outcome,,,unknown,no,0
,// STROKE,,,unknown,no,0
,// PAINT,,,unknown,no,0
,// category 1,,,unknown,no,0
,// expandToFitSpace,,,unknown,no,0
,// TBLRC // 01110 - bottom. left and right,,,unknown,no,0
,// SERIES VISIBLE IN LEGEND (not yet respected by all renderers),,,unknown,no,0
,// seriesOutlinePaintList,,,unknown,no,0
,"// TBLRC // 10110 - top, left and right",,,unknown,no,0
,// extent,,,unknown,no,0
,// startAngle,,,unknown,no,0
,// startAngle,,,unknown,no,0
,"// now we should be allowed to change s1's key to anything but ""S2""",,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// TBLRC // 00001 - center item only,,,unknown,no,0
,// do nothing if item is not visible,,,unknown,no,0
,// current data point...,,,unknown,no,0
,// outlinePaint,,,unknown,no,0
,// calculate bar width...,,,unknown,no,0
,// fillPaint,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// create a dataset...,,,unknown,no,0
,// correct outcome,,,unknown,no,0
,// what is our alignment?,,,unknown,no,0
,// insets,,,unknown,no,0
,// shapesVisible,,,unknown,no,0
,// check defaults,,,unknown,no,0
,////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// chart title // data // include legend,,,unknown,no,0
,"// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value",,,unknown,no,0
,// go through each zoom menu item and decide whether or not to // enable it...,,,unknown,no,0
,// do nothing,,,unknown,no,0
,"// add an item entity, if this information is being collected",,,unknown,no,0
,// do nothing,,,unknown,no,0
,// OK,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,// linePaint,,,unknown,no,0
,// domain description,,,unknown,no,0
,// z date format,,,unknown,no,0
,// add an empty series,,,unknown,no,0
,// labelPaint,,,unknown,no,0
,// Y format,,,unknown,no,0
,// border,,,unknown,no,0
,// clip left and right bounds to data area,,,unknown,no,0
,// clip left and right bounds to data area,,,unknown,no,0
,// chart title,,,unknown,no,0
,// not first tick of group //no label //make sure flag cleared,,,unknown,no,0
,//if past highest data value then exit method,,,unknown,no,0
,// add range axes to lists...,,,unknown,no,0
,// draw the labels...,,,unknown,no,0
,"// if there is an existing dataset, remove the plot from the list of // change listeners...",,,unknown,no,0
,// classify the keys according to which side the label will appear...,,,unknown,no,0
,// clear the point vectors,,,unknown,no,0
,// no range axis // no renderer,,,unknown,no,0
,"// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left",,,unknown,no,0
,// draw the right labels...,,,unknown,no,0
,// can't find any difference...,,,unknown,no,0
,// draw the plot background...,,,unknown,no,0
,//hh * getInteriorGap();,,,unknown,no,0
,// line not visible,,,unknown,no,0
,// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...,,,unknown,no,0
,// check for independence,,,unknown,no,0
,// backgroundImage,,,unknown,no,0
,// check for independence,,,unknown,no,0
,// cycle through once drawing only the sides at the back...,,,unknown,no,0
,// plot the data (unless the dataset is null)...,,,unknown,no,0
,// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.,,,unknown,no,0
,// no data in the parent plot,,,unknown,no,0
,// work out the maximum height or width of the non-shared axes...,,,unknown,no,0
,// seriesPaint,,,unknown,no,0
,"// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...",,,unknown,no,0
,// null argument check delegated...,,,unknown,no,0
,// null argument check delegated...,,,unknown,no,0
,// nothing defined - do we autoPopulate?,,,unknown,no,0
,// nothing defined - do we autoPopulate?,,,unknown,no,0
,// null argument check delegated...,,,unknown,no,0
,//// SECTION OUTLINE STROKE ///////////////////////////////////////////////,,,unknown,no,0
,//this.axisOffset.trim(dataArea);,,,unknown,no,0
,// is there an override?,,,unknown,no,0
,//// SECTION PAINT ////////////////////////////////////////////////////////,,,unknown,no,0
,// y is minor,,,unknown,no,0
,// draw the shared axis,,,unknown,no,0
,"// if there is an existing dataset, remove the plot from the list of // change listeners...",,,unknown,no,0
,// set the width and height of non-shared axis of all sub-plots,,,unknown,no,0
,// row keys provide potential keys for individual pies,,,unknown,no,0
,// should be equal...,,,unknown,no,0
,// fake a dataset change event to update axes...,,,unknown,no,0
,// reserve space for any domain axes...,,,unknown,no,0
,// the first axis in the list is used for data <--> Java2D,,,unknown,no,0
,// reserve some space for the domain axis...,,,unknown,no,0
,// don't let anyone draw outside the data area,,,unknown,no,0
,// add the unique categories from this dataset,,,unknown,no,0
,//// SERIES PAINT /////////////////////////,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,//// ITEM LABELS VISIBLE //////////////////////////////////////////////////,,,unknown,no,0
,"// allocate storage for dataset, axes and renderers",,,unknown,no,0
,"/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */",,,unknown,no,0
,"// if the plot area is too small, just return...",,,unknown,no,0
,// delegate...,,,unknown,no,0
,// avoid possible sun.dc.pr.PRException: endPath: bad path,,,unknown,no,0
,// add an entity for the pie section,,,unknown,no,0
,// the columns variable is always >= rows,,,unknown,no,0
,"// calculate inner arc in reverse direction, for later // GeneralPath construction",,,unknown,no,0
,// update the section colors to match the global colors...,,,unknown,no,0
,// record the plot area...,,,unknown,no,0
,// column keys provide potential keys for individual pies,,,unknown,no,0
,// showValueLines,,,unknown,no,0
,// delegate 'state' and 'source' argument checks...,,,unknown,no,0
,"// after setting up all the subplots, the shared domain axis may need // reconfiguring",,,unknown,no,0
,// expected,,,unknown,no,0
,// draw all the subplots,,,unknown,no,0
,// 20% // 20% // 20%,,,unknown,no,0
,// set the anchor value for the vertical axis...,,,unknown,no,0
,// create the bounds for the inner arc,,,unknown,no,0
,//set upperLeft point // x is minor,,,unknown,no,0
,// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down,,,unknown,no,0
,//set upperLeft point // x is minor,,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,// make the link area a square if the pie chart is to be circular...,,,unknown,no,0
,// setup for collecting optional entity info...,,,unknown,no,0
,// set the anchor value for the range axis...,,,unknown,no,0
,// work out the maximum height or width of the non-shared axes...,,,unknown,no,0
,"// we're doing this for testing only, and make sure that we // only add data in descending order by x-value",,,unknown,no,0
,// intentionally blank,,,unknown,no,0
,// can't find any difference,,,unknown,no,0
,// draw the background,,,unknown,no,0
,//Object oldValue = this.toolTipGenerator;,,,unknown,no,0
,// just the vertical axis...,,,unknown,no,0
,//Object oldValue = this.urlGenerator;,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// both axes,,,unknown,no,0
,// just the horizontal axis...,,,unknown,no,0
,// plot the data (unless the dataset is null)...,,,unknown,no,0
,// draw the shared axis,,,unknown,no,0
,// this is a new column,,,unknown,no,0
,// seriesPaintList,,,unknown,no,0
,// adjust for insets...,,,unknown,no,0
,"// set the new dataset, and register the chart as a change listener...",,,unknown,no,0
,// the following relies on the fact that the intervals are immutable,,,unknown,no,0
,// end of column,,,unknown,no,0
,// just the vertical axis...,,,unknown,no,0
,// check a series with repeating items,,,unknown,no,0
,// just the horizontal axis...,,,unknown,no,0
,//              },,,unknown,no,0
,// both axes,,,unknown,no,0
,// segment starts at the front,,,unknown,no,0
,// delegate 'info' and 'source' argument checks...,,,unknown,no,0
,// get the data points,,,unknown,no,0
,// legendLabelToolTipGenerator,,,unknown,no,0
,// set the width and height of non-shared axis of all sub-plots,,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,"// if not, check if there is a stroke defined for the specified key",,,unknown,no,0
,// delegate 'info' and 'source' argument checks...,,,unknown,no,0
,"// if not, check if there is a paint defined for the specified key",,,unknown,no,0
,// set up info collection...,,,unknown,no,0
,// set the width and height of non-shared axis of all sub-plots,,,unknown,no,0
,// draw the shared axis,,,unknown,no,0
,// draw all the charts,,,unknown,no,0
,// adjust for insets...,,,unknown,no,0
,//ellipse diameter is the minor dimension,,,unknown,no,0
,// otherwise look up the paint table,,,unknown,no,0
,//get major dimension,,,unknown,no,0
,// legendLabelURLGenerator,,,unknown,no,0
,// draw the wafer,,,unknown,no,0
,// adjust the drawing area for the plot insets (if any)...,,,unknown,no,0
,"// set the new dataset, and register the chart as a change listener...",,,unknown,no,0
,// y is minor,,,unknown,no,0
,// locale should not matter here,,,unknown,no,0
,// override is only for documentation purposes,,,unknown,no,0
,// the segment starts at the back (still extending // CLOCKWISE),,,unknown,no,0
,// draw all the subplots,,,unknown,no,0
,// add a tooltip for the section...,,,unknown,no,0
,"// Add the last point (x,0)",,,unknown,no,0
,//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);,,,unknown,no,0
,// record the plot area...,,,unknown,no,0
,// check retrieve value by key,,,unknown,no,0
,"// set the new dataset, and register the chart as a change listener...",,,unknown,no,0
,// AXIS 3,,,unknown,no,0
,// adjust the drawing area for plot insets (if any)...,,,unknown,no,0
,// calculate the data area...,,,unknown,no,0
,// delegate,,,unknown,no,0
,// check if line segments are colinear,,,unknown,no,0
,// get the legend items for the datasets...,,,unknown,no,0
,// the first axis in the list is used for data <--> Java2D,,,unknown,no,0
,"// if there is a renderer, it draws the background, otherwise use the // default background...",,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// set the anchor value for the horizontal axis...,,,unknown,no,0
,"//  Check that the graph being served was created by the current user //  or that it begins with ""public""",,,unknown,no,0
,// diamond,,,unknown,no,0
,// circle,,,unknown,no,0
,// Unregister the collection as a change listener to each series in // the collection.,,,unknown,no,0
,// down-pointing triangle,,,unknown,no,0
,// Finds our starting angle from the centre for this axis,,,unknown,no,0
,/* shapeFilled=*/,,,unknown,no,0
,// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon,,,unknown,no,0
,"// after s1 is removed from the collection, we should be able to set // the key to anything we want...",,,unknown,no,0
,// 1 = end of axis,,,unknown,no,0
,// Now actually plot each of the series polygons..,,,unknown,no,0
,// plot the data...,,,unknown,no,0
,// draw the axis and category label,,,unknown,no,0
,//// SERIES OUTLINE STROKE /////////////////////,,,unknown,no,0
,// draw range crosshair if required...,,,unknown,no,0
,// otherwise look up the paint list,,,unknown,no,0
,// draw median,,,unknown,no,0
,// otherwise look up the paint table,,,unknown,no,0
,// otherwise look up the paint list,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// delegate...,,,unknown,no,0
,// PlotOrientation.VERTICAL,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// verify independence of fixed legend item collection,,,unknown,no,0
,// draw the polygon series...,,,unknown,no,0
,// otherwise look up the paint list,,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// vertical rectangle,,,unknown,no,0
,// left-pointing triangle,,,unknown,no,0
,// Plot the polygon,,,unknown,no,0
,// put an elipse at the point being plotted..,,,unknown,no,0
,// this represents the situation // for drawing a horizontal bar.,,,unknown,no,0
,// fake a dataset change event to update axes...,,,unknown,no,0
,// reserve space for the range axes...,,,unknown,no,0
,"// no renderer, no gridlines...",,,unknown,no,0
,// innerSeparatorExtension,,,unknown,no,0
,//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;,,,unknown,no,0
,// no zooming possible,,,unknown,no,0
,// clone share data sets => add the clone as listener to the dataset,,,unknown,no,0
,"//  value = Math.pow(10,value);",,,unknown,no,0
,"// Lastly, fill the web polygon if this is required",,,unknown,no,0
,"// if series are in rows, then the categories are the column keys",,,unknown,no,0
,//          negatives = true;,,,unknown,no,0
,"// allocate storage for datasets, axes and renderers (all optional)",,,unknown,no,0
,// fake a dataset change event to update axes...,,,unknown,no,0
,// reserve some space for the range axis...,,,unknown,no,0
,// draw the plot background and axes...,,,unknown,no,0
,"// no renderer, no gridlines...",,,unknown,no,0
,// pass mouse down event if some ChartMouseListener are listening,,,unknown,no,0
,// check that a null dataset returns null bounds,,,unknown,no,0
,// reserve space for the domain axes...,,,unknown,no,0
,// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null),,,unknown,no,0
,// draw the bottom axes,,,unknown,no,0
,// plot the data (unless the dataset is null)...,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// adjust the drawing area for the plot insets (if any)...,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// adjust for insets...,,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,// plot is likely registered as a listener with the existing axis...,,,unknown,no,0
,// record the plot area...,,,unknown,no,0
,// draw the background,,,unknown,no,0
,"// we use ValueMarker for the tests, because we need a concrete // subclass...",,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// adjust the plot area by the interior spacing value,,,unknown,no,0
,// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...,,,unknown,no,0
,// add range axes to lists...,,,unknown,no,0
,"// AxisLocation is immutable, so we can just copy the maps",,,unknown,no,0
,// stroke sequence,,,unknown,no,0
,"// draw the range grid lines, if any...",,,unknown,no,0
,// perform the zoom on each range axis,,,unknown,no,0
,// expected,,,unknown,no,0
,// provides a 'no action' default,,,unknown,no,0
,"// do nothing, because the plot is not pannable along the domain axes",,,unknown,no,0
,// try the parent plot,,,unknown,no,0
,// can't zoom domain axis,,,unknown,no,0
,"// return the override, if there is one...",,,unknown,no,0
,// now check that the chart is usable...,,,unknown,no,0
,// column keys...,,,unknown,no,0
,// draw the right axes,,,unknown,no,0
,"// no renderer, no gridlines...",,,unknown,no,0
,// draw the left axes,,,unknown,no,0
,// delegate to other method,,,unknown,no,0
,// draw the bottom axes,,,unknown,no,0
,// iterate through the datasets that map to the axis and get the union // of the ranges.,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// draw the foreground markers...,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// draw an outline around the plot area...,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// set up the alpha-transparency...,,,unknown,no,0
,// now render data items...,,,unknown,no,0
,"// if the flag is being set to true, there may be queued up changes...",,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,// add domain axes to lists...,,,unknown,no,0
,// reserve some space for the range axis...,,,unknown,no,0
,"// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)",,,unknown,no,0
,"// some subclasses override this method completely, so don't put // anything here that *must* be done",,,unknown,no,0
,// not currently serialized,,,unknown,no,0
,// right-pointing triangle,,,unknown,no,0
,// baseSectionPaint,,,unknown,no,0
,// up-pointing triangle,,,unknown,no,0
,// horizontal rectangle,,,unknown,no,0
,// horizontal ellipse,,,unknown,no,0
,"/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */",,,unknown,no,0
,"// set the new dataset, and register the chart as a change listener...",,,unknown,no,0
,// an empty dataset should return a null range,,,unknown,no,0
,"// draw the domain grid lines, if any...",,,unknown,no,0
,"// now for each dataset, get the renderer and the appropriate axis // and render the dataset...",,,unknown,no,0
,"// draw the radius grid lines, if any...",,,unknown,no,0
,// the above should cover all the options...,,,unknown,no,0
,// normalize angle,,,unknown,no,0
,// fillType == TO_UPPER_BOUND,,,unknown,no,0
,// draw the plot background and axes...,,,unknown,no,0
,"// the datasets are not cloned, but listeners need to be added...",,,unknown,no,0
,// we don't need the sign,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// iterate through the datasets that map to the axis and get the union // of the ranges.,,,unknown,no,0
,// some setup...,,,unknown,no,0
,// the first axis in the list is used for data <--> Java2D,,,unknown,no,0
,// OK,,,unknown,no,0
,// check null argument...,,,unknown,no,0
,// square,,,unknown,no,0
,// backgroundImageAlpha,,,unknown,no,0
,// fake a dataset change event to update axes...,,,unknown,no,0
,// create the dataset...,,,unknown,no,0
,"// if the plot area is too small, just return...",,,unknown,no,0
,// record the plot area...,,,unknown,no,0
,// headPercent,,,unknown,no,0
,// delegate...,,,unknown,no,0
,// autoPopulateSectionPaint,,,unknown,no,0
,"// if the plot area is too small, just return...",,,unknown,no,0
,// ratio represents pixels,,,unknown,no,0
,// did zero tick last iteration //no label //clear flag,,,unknown,no,0
,// default make height of plotArea,,,unknown,no,0
,"// update, but dont draw tick marks (needed for stepped colors)",,,unknown,no,0
,// RIGHT,,,unknown,no,0
,// inverted,,,unknown,no,0
,// draw mean - SPECIAL AIMS REQUIREMENT...,,,unknown,no,0
,// allow fixed thickness,,,unknown,no,0
,// first check that autoPopulate==false works as expected,,,unknown,no,0
,// remember these values for next comparison,,,unknown,no,0
,// ratio represents axis units,,,unknown,no,0
,// argument checking delegated...,,,unknown,no,0
,// remember these values for next comparison,,,unknown,no,0
,// transparent,,,unknown,no,0
,// don't draw this tick label,,,unknown,no,0
,// ensure that all the symbols are displayed,,,unknown,no,0
,// avoid to draw overlapping tick labels,,,unknown,no,0
,// seriesOutlinePaint,,,unknown,no,0
,// LEFT,,,unknown,no,0
,// suppresses compiler warnings,,,unknown,no,0
,// BOTTOM,,,unknown,no,0
,// TOP,,,unknown,no,0
,// BOTTOM,,,unknown,no,0
,"// if the axis is not visible, don't draw it...",,,unknown,no,0
,// look at lower and upper bounds...,,,unknown,no,0
,// check if we need to collect chart entities from the container,,,unknown,no,0
,// calculate the adjusted data area taking into account the 3D effect...,,,unknown,no,0
,// LEFT,,,unknown,no,0
,// draw the tick marks and labels...,,,unknown,no,0
,// no action required.,,,unknown,no,0
,"// no plot, no data",,,unknown,no,0
,// wrong outcome,,,unknown,no,0
,"// If tick overlap when cycling, update last tick too",,,unknown,no,0
,// Cycle when necessary,,,unknown,no,0
,"// even though the axis is not visible, we need ticks for the // gridlines...",,,unknown,no,0
,// catches null also,,,unknown,no,0
,// first check that autoPopulate==false works as expected,,,unknown,no,0
,// place in this row (truncated) anyway,,,unknown,no,0
,"// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width",,,unknown,no,0
,"// first arrange without constraints, and see if this fits within // the required ranges...",,,unknown,no,0
,// a null key should throw an IllegalArgumentException,,,unknown,no,0
,// check a series with no items,,,unknown,no,0
,// chart title // data // no legend // tooltips // no URL generation,,,unknown,no,0
,"// since the flow layout is relatively straightforward, no information // needs to be recorded here",,,unknown,no,0
,// find optimum width and map to range,,,unknown,no,0
,// fillPaint,,,unknown,no,0
,// check a series with no items,,,unknown,no,0
,// handle tool tips in a simple way,,,unknown,no,0
,// can safely ignore,,,unknown,no,0
,// find optimum height,,,unknown,no,0
,//Block b = (Block) blocks.get(i);,,,unknown,no,0
,"// find optimum height, then map to range",,,unknown,no,0
,// null is handled fine here...,,,unknown,no,0
,// this ensure that the grid bands will be displayed correctly.,,,unknown,no,0
,// a null key should throw an IllegalArgumentException,,,unknown,no,0
,// avoid possible sun.dc.pr.PRException: endPath: bad path,,,unknown,no,0
,// zap the buffer onto the canvas...,,,unknown,no,0
,// no action required.,,,unknown,no,0
,// check a series with no items,,,unknown,no,0
,// start with the current tick unit...,,,unknown,no,0
,// then extrapolate...,,,unknown,no,0
,"// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection",,,unknown,no,0
,// then extrapolate...,,,unknown,no,0
,// all tick labels have the same width (equal to the height of the // font)...,,,unknown,no,0
,// draw the category labels and axis label,,,unknown,no,0
,// create a new space object if one wasn't supplied...,,,unknown,no,0
,// must be top or bottom,,,unknown,no,0
,// start with the current tick unit...,,,unknown,no,0
,// TOP,,,unknown,no,0
,// check for series key out of bounds,,,unknown,no,0
,"// no plot, no data",,,unknown,no,0
,// minutes,,,unknown,no,0
,// no action required.,,,unknown,no,0
,// 'tickMarkPosition' is immutable : no need to clone,,,unknown,no,0
,// could add a flag to make the following correction optional...,,,unknown,no,0
,// could add a flag to make the following correction optional...,,,unknown,no,0
,// make final selection...,,,unknown,no,0
,// all tick labels have the same width (equal to the height of // the font)...,,,unknown,no,0
,// hours,,,unknown,no,0
,"// work out the value, label and position",,,unknown,no,0
,// stroke,,,unknown,no,0
,// BOTTOM,,,unknown,no,0
,// months,,,unknown,no,0
,// years,,,unknown,no,0
,//Timeline hasn't method getStartTime(),,,unknown,no,0
,// seconds,,,unknown,no,0
,// days,,,unknown,no,0
,// 'dateTickUnit' is immutable : no need to clone,,,unknown,no,0
,// start with the current tick unit...,,,unknown,no,0
,"// if the axis is not visible, no additional space is required...",,,unknown,no,0
,// look at lower and upper bounds...,,,unknown,no,0
,"// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...",,,unknown,no,0
,// fixed legend items,,,unknown,no,0
,// then extrapolate...,,,unknown,no,0
,// draw the chart background...,,,unknown,no,0
,// get a locale-specific resource bundle...,,,unknown,no,0
,// collect entity and tool tip information...,,,unknown,no,0
,// check the new maximum date relative to the current minimum date,,,unknown,no,0
,//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):,,,unknown,no,0
,"//if flag then //create ""log10""-type label",,,unknown,no,0
,"// usually the range will be a DateRange, but if it isn't do a // conversion...",,,unknown,no,0
,// date formatters,,,unknown,no,0
,// calculate midnight of first monday after 1/1/1900 relative to // current locale,,,unknown,no,0
,// ensure the autorange is at least <minRange> in size...,,,unknown,no,0
,// Compute number of labels,,,unknown,no,0
,// - partialTimeInException;,,,unknown,no,0
,// go to next base segment group,,,unknown,no,0
,// cycle through all the segments contained in the base exclusion // area,,,unknown,no,0
,// cycle over all the base segments groups in the range,,,unknown,no,0
,// empty,,,unknown,no,0
,// add the interval as an exception,,,unknown,no,0
,"// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);",,,unknown,no,0
,"// if fixed auto range, then derive lower bound...",,,unknown,no,0
,// first check that autoPopulate==false works as expected,,,unknown,no,0
,// add the interval as an exception,,,unknown,no,0
,// skip all whole exception segments in the range,,,unknown,no,0
,// find all consecutive included segments,,,unknown,no,0
,// skip exception or excluded segments we may fall on,,,unknown,no,0
,// adjust result for any exceptions in the result calculated,,,unknown,no,0
,// find all consecutive included segments,,,unknown,no,0
,// verify that baseTimeline is compatible with us,,,unknown,no,0
,"// record the chart area, if info is requested...",,,unknown,no,0
,// - partialTimeInException;,,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,"// last series, so we are ready to draw the min and max",,,unknown,no,0
,// move forward exceptionSegmentCount segments skipping // excluded segments,,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// get the axis label size and update the space object...,,,unknown,no,0
,//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////,,,unknown,no,0
,// calculate the max size of the tick labels (if visible)...,,,unknown,no,0
,// find first excluded base segment starting fromDomainValue,,,unknown,no,0
,// nothing required,,,unknown,no,0
,"// if there is no specific paint, use the general one...",,,unknown,no,0
,"// if there is no specific font, use the general one...",,,unknown,no,0
,// step down in size until the current size is too small or there are  // no more units,,,unknown,no,0
,/* y-axis label */,,,unknown,no,0
,"// Add the last point (x,0)",,,unknown,no,0
,// this default implementation will just fill the available // border space with a single color,,,unknown,no,0
,/// we have rotation,,,unknown,no,0
,// adjust for insets...,,,unknown,no,0
,// plot is likely registered as a listener with the existing axis...,,,unknown,no,0
,// calculate the data area...,,,unknown,no,0
,// set the width and height of non-shared axis of all sub-plots,,,unknown,no,0
,// draw the shared axis,,,unknown,no,0
,// configure the range axis...,,,unknown,no,0
,// work out the space required by the domain axis...,,,unknown,no,0
,// work out the maximum height or width of the non-shared axes...,,,unknown,no,0
,// store the plot and its weight,,,unknown,no,0
,//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));,,,unknown,no,0
,"/// we have rotation houston, please spin me",,,unknown,no,0
,// horizontal,,,unknown,no,0
,// isArrowAtTop,,,unknown,no,0
,//int maxX = (int) (plotArea.getMaxX());,,,unknown,no,0
,//int maxX = (int) (plotArea.getMaxX());,,,unknown,no,0
,"// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...",,,unknown,no,0
,// we expect the line to be vertical or horizontal // vertical,,,unknown,no,0
,"/// we have rotation huston, please spin me",,,unknown,no,0
,// no fields to test,,,unknown,no,0
,"/// we have rotation huston, please spin me",,,unknown,no,0
,"// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height",,,unknown,no,0
,// the actual panning occurs later in the mouseDragged() method,,,unknown,no,0
,//if we have been panning reset the cursor //unregister in any case,,,unknown,no,0
,// the URL text should already have been escaped by the URL generator,,,unknown,no,0
,/// we have rotation,,,unknown,no,0
,// labelPaint,,,unknown,no,0
,"// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true",,,unknown,no,0
,// force a redraw,,,unknown,no,0
,// does nothing unless overridden        ,,,unknown,no,0
,// chart title // data // no legend // tooltips // no URL generation,,,unknown,no,0
,// default preserves previous // behaviour,,,unknown,no,0
,// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.,,,unknown,no,0
,// does nothing unless overridden,,,unknown,no,0
,// segment starts at back,,,unknown,no,0
,// draw vertical crosshair if required...,,,unknown,no,0
,// draw horizontal crosshair if required...,,,unknown,no,0
,// add an entity for the item...,,,unknown,no,0
,// never updated the subtrahend if it is implied to be zero,,,unknown,no,0
,// delegate 'info' and 'source' argument checks...,,,unknown,no,0
,"// if there is an existing dataset, remove the plot from the list of // change listeners...",,,unknown,no,0
,//dmo //zero when the parameter is not set,,,unknown,no,0
,// segment only occupies the front,,,unknown,no,0
,// check an inherited attribute,,,unknown,no,0
,"// set the new dataset, and register the chart as a change listener...",,,unknown,no,0
,// send a dataset change event to self...,,,unknown,no,0
,// segments starts at front and finishes at back...,,,unknown,no,0
,// whole segment stays at the back,,,unknown,no,0
,// and finishes at the front,,,unknown,no,0
,// segments wraps right around the back...,,,unknown,no,0
,// draw all the charts,,,unknown,no,0
,// cycle through again drawing only the sides at the front...,,,unknown,no,0
,"// for CLOCKWISE charts, the extent will be negative...",,,unknown,no,0
,// draw the height,,,unknown,no,0
,// start at front,,,unknown,no,0
,"// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again",,,unknown,no,0
,// and finishes at back,,,unknown,no,0
,// if depth is negative don't draw anything,,,unknown,no,0
,// do nothing by default.,,,unknown,no,0
,// check a series with two items,,,unknown,no,0
,// if too any elements,,,unknown,no,0
,// the link area defines the dog-leg point for the linking lines to // the labels,,,unknown,no,0
,// this is a paint we don't recognise,,,unknown,no,0
,// get the data source - return if null;,,,unknown,no,0
,// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.,,,unknown,no,0
,// does nothing unless overridden,,,unknown,no,0
,"// TBLRC // 10011 - top, right and center",,,unknown,no,0
,//Block b = (Block) blocks.get(i);,,,unknown,no,0
,// pass to the super-class for handling,,,unknown,no,0
,// Reset to the default 'overwrite' mode,,,unknown,no,0
,// pass to super-class for handling,,,unknown,no,0
,//  No op,,,unknown,no,0
,//  No op,,,unknown,no,0
,//      end fix by rfuller,,,unknown,no,0
,// set the plot properties...,,,unknown,no,0
,// populate the deprecated fields,,,unknown,no,0
,// TBLRC // 10000 - top item only,,,unknown,no,0
,// axis.setTickMarkStroke(getTickMarkStroke());,,,unknown,no,0
,// create a panel for the settings...,,,unknown,no,0
,// figure out what type of axis we have and instantiate the // appropriate panel,,,unknown,no,0
,// Insets values,,,unknown,no,0
,// pass to the super-class for handling,,,unknown,no,0
,// add a subtitle giving the data source,,,unknown,no,0
,// don't need to do anything,,,unknown,no,0
,// update the deprecated field,,,unknown,no,0
,// customise the section label appearance,,,unknown,no,0
,// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?,,,unknown,no,0
,// check a series with one item,,,unknown,no,0
,// expected,,,unknown,no,0
,// TBLRC // 01111,,,unknown,no,0
,// autoRange,,,unknown,no,0
,// customise the title position and font,,,unknown,no,0
,// place in this column (truncated) anyway,,,unknown,no,0
,// check if initial polygon needs to be clipped,,,unknown,no,0
,"// if the area has zero height or width, we shouldn't draw anything",,,unknown,no,0
,// find optimum height and map to range,,,unknown,no,0
,// fixed width,,,unknown,no,0
,// nothing to clear,,,unknown,no,0
,// check if we need to collect chart entities from the container,,,unknown,no,0
,// defer argument checks...,,,unknown,no,0
,//same as for ChartEntity!,,,unknown,no,0
,// pass on the event to the auxiliary handlers,,,unknown,no,0
,/* x-axis label*/,,,unknown,no,0
,// relay the event from the canvas to our registered listeners,,,unknown,no,0
,// set the default stroke for all series,,,unknown,no,0
,// pass on the event to the auxiliary handlers,,,unknown,no,0
,//this.chartPanel.isDomainZoomable()) {,,,unknown,no,0
,// we can't do anything,,,unknown,no,0
,// does nothing unless overridden,,,unknown,no,0
,// title // x-axis label // y-axis label,,,unknown,no,0
,// record the plot area...,,,unknown,no,0
,// add a subtitle giving the data source,,,unknown,no,0
,// baseSeriesPaint,,,unknown,no,0
,//same as for ChartEntity!,,,unknown,no,0
,//dmo added //dmo added,,,unknown,no,0
,// set a custom background for the chart,,,unknown,no,0
,// column keys...,,,unknown,no,0
,// customise the section label appearance,,,unknown,no,0
,//same as for ChartEntity!,,,unknown,no,0
,//      fix by rfuller,,,unknown,no,0
,// domainCrosshairPaint,,,unknown,no,0
,// do not notify while zooming each axis,,,unknown,no,0
,// nothing to do,,,unknown,no,0
,// TBLRC // 10010 - right and top only,,,unknown,no,0
,// pass to the super-class for handling,,,unknown,no,0
,// legendItemShape,,,unknown,no,0
,// try the parent plot,,,unknown,no,0
,// update the deprecated fields,,,unknown,no,0
,// labelFont,,,unknown,no,0
,// check the deprecated fields,,,unknown,no,0
,// then the axis properties...,,,unknown,no,0
,// check independence,,,unknown,no,0
,//same as for ChartEntity!,,,unknown,no,0
